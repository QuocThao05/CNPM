<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/ContentCreationActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/ContentCreationActivity.java" />
              <option name="originalContent" value="package com.vantinh.tienganh;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.MenuItem;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.LinearLayout;&#10;import android.widget.RadioButton;&#10;import android.widget.RadioGroup;&#10;import android.widget.Spinner;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import androidx.appcompat.widget.Toolbar;&#10;import androidx.cardview.widget.CardView;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import com.google.android.material.floatingactionbutton.FloatingActionButton;&#10;import com.google.android.material.tabs.TabLayout;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;&#10;import java.util.HashMap;&#10;import java.util.Map;&#10;&#10;public class ContentCreationActivity extends AppCompatActivity {&#10;&#10;    private Toolbar toolbar;&#10;    private TabLayout tabLayout;&#10;    private CardView cardLessonCreation, cardQuizCreation, cardVocabularyList;&#10;    private LinearLayout layoutLessonForm, layoutQuizForm, layoutVocabularyForm;&#10;&#10;    // Lesson creation components&#10;    private EditText etLessonTitle, etLessonDescription, etLessonContent;&#10;    private Spinner spinnerLessonCategory, spinnerDifficulty;&#10;    private Button btnSaveLesson, btnPreviewLesson;&#10;&#10;    // Quiz creation components&#10;    private EditText etQuizTitle, etQuizDescription;&#10;    private EditText etQuestion, etOption1, etOption2, etOption3, etOption4;&#10;    private RadioGroup rgCorrectAnswer;&#10;    private RecyclerView rvQuestions;&#10;    private Button btnAddQuestion, btnSaveQuiz, btnPreviewQuiz;&#10;&#10;    // Vocabulary components&#10;    private EditText etWord, etMeaning, etExample, etPronunciation;&#10;    private Spinner spinnerWordCategory;&#10;    private Button btnAddWord, btnSaveVocabulary;&#10;    private RecyclerView rvVocabularyList;&#10;&#10;    private FloatingActionButton fabPublish;&#10;    private TextView tvContentCount;&#10;&#10;    private FirebaseAuth mAuth;&#10;    private FirebaseFirestore db;&#10;    private String mode; // &quot;lesson&quot;, &quot;quiz&quot;, &quot;vocabulary&quot;&#10;    private String teacherId;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_content_creation);&#10;&#10;        // Get mode from intent&#10;        mode = getIntent().getStringExtra(&quot;mode&quot;);&#10;&#10;        mAuth = FirebaseAuth.getInstance();&#10;        db = FirebaseFirestore.getInstance();&#10;&#10;        if (mAuth.getCurrentUser() != null) {&#10;            teacherId = mAuth.getCurrentUser().getUid();&#10;        }&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        setupTabs();&#10;        setupClickListeners();&#10;        handleModeSpecificSetup();&#10;        loadExistingContent();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        tabLayout = findViewById(R.id.tab_layout);&#10;&#10;        // Cards&#10;        cardLessonCreation = findViewById(R.id.card_lesson_creation);&#10;        cardQuizCreation = findViewById(R.id.card_quiz_creation);&#10;        cardVocabularyList = findViewById(R.id.card_vocabulary_list);&#10;&#10;        // Layouts&#10;        layoutLessonForm = findViewById(R.id.layout_lesson_form);&#10;        layoutQuizForm = findViewById(R.id.layout_quiz_form);&#10;        layoutVocabularyForm = findViewById(R.id.layout_vocabulary_form);&#10;&#10;        // Lesson creation&#10;        etLessonTitle = findViewById(R.id.et_lesson_title);&#10;        etLessonDescription = findViewById(R.id.et_lesson_description);&#10;        etLessonContent = findViewById(R.id.et_lesson_content);&#10;        spinnerLessonCategory = findViewById(R.id.spinner_lesson_category);&#10;        spinnerDifficulty = findViewById(R.id.spinner_difficulty);&#10;        btnSaveLesson = findViewById(R.id.btn_save_lesson);&#10;        btnPreviewLesson = findViewById(R.id.btn_preview_lesson);&#10;&#10;        // Quiz creation&#10;        etQuizTitle = findViewById(R.id.et_quiz_title);&#10;        etQuizDescription = findViewById(R.id.et_quiz_description);&#10;        etQuestion = findViewById(R.id.et_question);&#10;        etOption1 = findViewById(R.id.et_option1);&#10;        etOption2 = findViewById(R.id.et_option2);&#10;        etOption3 = findViewById(R.id.et_option3);&#10;        etOption4 = findViewById(R.id.et_option4);&#10;        rgCorrectAnswer = findViewById(R.id.rg_correct_answer);&#10;        rvQuestions = findViewById(R.id.rv_questions);&#10;        btnAddQuestion = findViewById(R.id.btn_add_question);&#10;        btnSaveQuiz = findViewById(R.id.btn_save_quiz);&#10;        btnPreviewQuiz = findViewById(R.id.btn_preview_quiz);&#10;&#10;        // Vocabulary&#10;        etWord = findViewById(R.id.et_word);&#10;        etMeaning = findViewById(R.id.et_meaning);&#10;        etExample = findViewById(R.id.et_example);&#10;        etPronunciation = findViewById(R.id.et_pronunciation);&#10;        spinnerWordCategory = findViewById(R.id.spinner_word_category);&#10;        btnAddWord = findViewById(R.id.btn_add_word);&#10;        btnSaveVocabulary = findViewById(R.id.btn_save_vocabulary);&#10;        rvVocabularyList = findViewById(R.id.rv_vocabulary_list);&#10;&#10;        // Other components&#10;        fabPublish = findViewById(R.id.fab_publish);&#10;        tvContentCount = findViewById(R.id.tv_content_count);&#10;&#10;        // Setup RecyclerViews&#10;        if (rvQuestions != null) {&#10;            rvQuestions.setLayoutManager(new LinearLayoutManager(this));&#10;        }&#10;        if (rvVocabularyList != null) {&#10;            rvVocabularyList.setLayoutManager(new LinearLayoutManager(this));&#10;        }&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#10;            getSupportActionBar().setDisplayShowHomeEnabled(true);&#10;            getSupportActionBar().setTitle(&quot;Tạo nội dung&quot;);&#10;        }&#10;    }&#10;&#10;    private void setupTabs() {&#10;        if (tabLayout != null) {&#10;            tabLayout.addTab(tabLayout.newTab().setText(&quot;Bài học&quot;));&#10;            tabLayout.addTab(tabLayout.newTab().setText(&quot;Quiz&quot;));&#10;            tabLayout.addTab(tabLayout.newTab().setText(&quot;Từ vựng&quot;));&#10;&#10;            tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {&#10;                @Override&#10;                public void onTabSelected(TabLayout.Tab tab) {&#10;                    switchContentType(tab.getPosition());&#10;                }&#10;&#10;                @Override&#10;                public void onTabUnselected(TabLayout.Tab tab) {}&#10;&#10;                @Override&#10;                public void onTabReselected(TabLayout.Tab tab) {}&#10;            });&#10;        }&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        // Lesson creation&#10;        if (btnSaveLesson != null) {&#10;            btnSaveLesson.setOnClickListener(v -&gt; saveLesson());&#10;        }&#10;        if (btnPreviewLesson != null) {&#10;            btnPreviewLesson.setOnClickListener(v -&gt; previewLesson());&#10;        }&#10;&#10;        // Quiz creation&#10;        if (btnAddQuestion != null) {&#10;            btnAddQuestion.setOnClickListener(v -&gt; addQuestion());&#10;        }&#10;        if (btnSaveQuiz != null) {&#10;            btnSaveQuiz.setOnClickListener(v -&gt; saveQuiz());&#10;        }&#10;        if (btnPreviewQuiz != null) {&#10;            btnPreviewQuiz.setOnClickListener(v -&gt; previewQuiz());&#10;        }&#10;&#10;        // Vocabulary&#10;        if (btnAddWord != null) {&#10;            btnAddWord.setOnClickListener(v -&gt; addWord());&#10;        }&#10;        if (btnSaveVocabulary != null) {&#10;            btnSaveVocabulary.setOnClickListener(v -&gt; saveVocabularyList());&#10;        }&#10;&#10;        // FAB&#10;        if (fabPublish != null) {&#10;            fabPublish.setOnClickListener(v -&gt; publishContent());&#10;        }&#10;    }&#10;&#10;    private void handleModeSpecificSetup() {&#10;        if (&quot;lesson&quot;.equals(mode) &amp;&amp; tabLayout != null) {&#10;            tabLayout.getTabAt(0).select();&#10;            switchContentType(0);&#10;        } else if (&quot;quiz&quot;.equals(mode) &amp;&amp; tabLayout != null) {&#10;            tabLayout.getTabAt(1).select();&#10;            switchContentType(1);&#10;        } else if (&quot;vocabulary&quot;.equals(mode) &amp;&amp; tabLayout != null) {&#10;            tabLayout.getTabAt(2).select();&#10;            switchContentType(2);&#10;        }&#10;    }&#10;&#10;    private void switchContentType(int position) {&#10;        // Hide all layouts first&#10;        hideAllLayouts();&#10;&#10;        switch (position) {&#10;            case 0: // Lesson&#10;                if (layoutLessonForm != null) {&#10;                    layoutLessonForm.setVisibility(View.VISIBLE);&#10;                }&#10;                break;&#10;            case 1: // Quiz&#10;                if (layoutQuizForm != null) {&#10;                    layoutQuizForm.setVisibility(View.VISIBLE);&#10;                }&#10;                break;&#10;            case 2: // Vocabulary&#10;                if (layoutVocabularyForm != null) {&#10;                    layoutVocabularyForm.setVisibility(View.VISIBLE);&#10;                }&#10;                break;&#10;        }&#10;    }&#10;&#10;    private void hideAllLayouts() {&#10;        if (layoutLessonForm != null) layoutLessonForm.setVisibility(View.GONE);&#10;        if (layoutQuizForm != null) layoutQuizForm.setVisibility(View.GONE);&#10;        if (layoutVocabularyForm != null) layoutVocabularyForm.setVisibility(View.GONE);&#10;    }&#10;&#10;    private void saveLesson() {&#10;        if (teacherId == null) {&#10;            Toast.makeText(this, &quot;Lỗi: Không thể xác định giáo viên&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        String title = etLessonTitle != null ? etLessonTitle.getText().toString().trim() : &quot;&quot;;&#10;        String description = etLessonDescription != null ? etLessonDescription.getText().toString().trim() : &quot;&quot;;&#10;        String content = etLessonContent != null ? etLessonContent.getText().toString().trim() : &quot;&quot;;&#10;&#10;        if (title.isEmpty() || content.isEmpty()) {&#10;            Toast.makeText(this, &quot;Vui lòng nhập đầy đủ tiêu đề và nội dung&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        Map&lt;String, Object&gt; lessonData = new HashMap&lt;&gt;();&#10;        lessonData.put(&quot;teacherId&quot;, teacherId);&#10;        lessonData.put(&quot;title&quot;, title);&#10;        lessonData.put(&quot;description&quot;, description);&#10;        lessonData.put(&quot;content&quot;, content);&#10;        lessonData.put(&quot;type&quot;, &quot;lesson&quot;);&#10;        lessonData.put(&quot;createdAt&quot;, System.currentTimeMillis());&#10;        lessonData.put(&quot;status&quot;, &quot;draft&quot;);&#10;&#10;        db.collection(&quot;content&quot;)&#10;                .add(lessonData)&#10;                .addOnSuccessListener(documentReference -&gt; {&#10;                    Toast.makeText(this, &quot;Bài học đã được lưu thành công!&quot;, Toast.LENGTH_SHORT).show();&#10;                    clearLessonForm();&#10;                    updateContentCount();&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    Toast.makeText(this, &quot;Lỗi khi lưu: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;                });&#10;    }&#10;&#10;    private void previewLesson() {&#10;        Intent intent = new Intent(this, CourseListActivity.class);&#10;        intent.putExtra(&quot;mode&quot;, &quot;preview&quot;);&#10;        intent.putExtra(&quot;title&quot;, etLessonTitle != null ? etLessonTitle.getText().toString() : &quot;&quot;);&#10;        startActivity(intent);&#10;    }&#10;&#10;    private void addQuestion() {&#10;        String question = etQuestion != null ? etQuestion.getText().toString().trim() : &quot;&quot;;&#10;        String option1 = etOption1 != null ? etOption1.getText().toString().trim() : &quot;&quot;;&#10;        String option2 = etOption2 != null ? etOption2.getText().toString().trim() : &quot;&quot;;&#10;        String option3 = etOption3 != null ? etOption3.getText().toString().trim() : &quot;&quot;;&#10;        String option4 = etOption4 != null ? etOption4.getText().toString().trim() : &quot;&quot;;&#10;&#10;        if (question.isEmpty() || option1.isEmpty() || option2.isEmpty()) {&#10;            Toast.makeText(this, &quot;Vui lòng nhập câu hỏi và ít nhất 2 đáp án&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        int correctAnswer = 0;&#10;        if (rgCorrectAnswer != null &amp;&amp; rgCorrectAnswer.getCheckedRadioButtonId() != -1) {&#10;            RadioButton selectedButton = findViewById(rgCorrectAnswer.getCheckedRadioButtonId());&#10;            // Logic to determine correct answer index&#10;        }&#10;&#10;        // Add question to list (implementation would involve adapter)&#10;        Toast.makeText(this, &quot;Câu hỏi đã được thêm&quot;, Toast.LENGTH_SHORT).show();&#10;        clearQuestionForm();&#10;    }&#10;&#10;    private void saveQuiz() {&#10;        // Implementation similar to saveLesson&#10;        Toast.makeText(this, &quot;Quiz đã được lưu&quot;, Toast.LENGTH_SHORT).show();&#10;    }&#10;&#10;    private void previewQuiz() {&#10;        Intent intent = new Intent(this, QuizActivity.class);&#10;        intent.putExtra(&quot;mode&quot;, &quot;preview&quot;);&#10;        startActivity(intent);&#10;    }&#10;&#10;    private void addWord() {&#10;        String word = etWord != null ? etWord.getText().toString().trim() : &quot;&quot;;&#10;        String meaning = etMeaning != null ? etMeaning.getText().toString().trim() : &quot;&quot;;&#10;        String example = etExample != null ? etExample.getText().toString().trim() : &quot;&quot;;&#10;&#10;        if (word.isEmpty() || meaning.isEmpty()) {&#10;            Toast.makeText(this, &quot;Vui lòng nhập từ và nghĩa&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        // Add word to vocabulary list&#10;        Toast.makeText(this, &quot;Từ vựng đã được thêm&quot;, Toast.LENGTH_SHORT).show();&#10;        clearVocabularyForm();&#10;    }&#10;&#10;    private void saveVocabularyList() {&#10;        Toast.makeText(this, &quot;Danh sách từ vựng đã được lưu&quot;, Toast.LENGTH_SHORT).show();&#10;    }&#10;&#10;    private void publishContent() {&#10;        android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this);&#10;        builder.setTitle(&quot;Xuất bản nội dung&quot;)&#10;                .setMessage(&quot;Bạn có chắc chắn muốn xuất bản nội dung này? Học viên sẽ có thể truy cập.&quot;)&#10;                .setPositiveButton(&quot;Xuất bản&quot;, (dialog, which) -&gt; {&#10;                    Toast.makeText(this, &quot;Nội dung đã được xuất bản!&quot;, Toast.LENGTH_SHORT).show();&#10;                })&#10;                .setNegativeButton(&quot;Hủy&quot;, null)&#10;                .show();&#10;    }&#10;&#10;    private void clearLessonForm() {&#10;        if (etLessonTitle != null) etLessonTitle.setText(&quot;&quot;);&#10;        if (etLessonDescription != null) etLessonDescription.setText(&quot;&quot;);&#10;        if (etLessonContent != null) etLessonContent.setText(&quot;&quot;);&#10;    }&#10;&#10;    private void clearQuestionForm() {&#10;        if (etQuestion != null) etQuestion.setText(&quot;&quot;);&#10;        if (etOption1 != null) etOption1.setText(&quot;&quot;);&#10;        if (etOption2 != null) etOption2.setText(&quot;&quot;);&#10;        if (etOption3 != null) etOption3.setText(&quot;&quot;);&#10;        if (etOption4 != null) etOption4.setText(&quot;&quot;);&#10;        if (rgCorrectAnswer != null) rgCorrectAnswer.clearCheck();&#10;    }&#10;&#10;    private void clearVocabularyForm() {&#10;        if (etWord != null) etWord.setText(&quot;&quot;);&#10;        if (etMeaning != null) etMeaning.setText(&quot;&quot;);&#10;        if (etExample != null) etExample.setText(&quot;&quot;);&#10;        if (etPronunciation != null) etPronunciation.setText(&quot;&quot;);&#10;    }&#10;&#10;    private void loadExistingContent() {&#10;        updateContentCount();&#10;    }&#10;&#10;    private void updateContentCount() {&#10;        if (teacherId != null) {&#10;            db.collection(&quot;content&quot;)&#10;                    .whereEqualTo(&quot;teacherId&quot;, teacherId)&#10;                    .get()&#10;                    .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#10;                        int count = queryDocumentSnapshots.size();&#10;                        if (tvContentCount != null) {&#10;                            tvContentCount.setText(&quot;Đã tạo: &quot; + count + &quot; nội dung&quot;);&#10;                        }&#10;                    });&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(MenuItem item) {&#10;        if (item.getItemId() == android.R.id.home) {&#10;            onBackPressed();&#10;            return true;&#10;        }&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;&#10;    @Override&#10;    public void onBackPressed() {&#10;        Intent intent = new Intent(this, TeacherDashboardActivity.class);&#10;        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.vantinh.tienganh;&#13;&#10;&#13;&#10;import android.content.Intent;&#13;&#10;import android.os.Bundle;&#13;&#10;import android.view.MenuItem;&#13;&#10;import android.view.View;&#13;&#10;import android.widget.Button;&#13;&#10;import android.widget.EditText;&#13;&#10;import android.widget.LinearLayout;&#13;&#10;import android.widget.RadioButton;&#13;&#10;import android.widget.RadioGroup;&#13;&#10;import android.widget.Spinner;&#13;&#10;import android.widget.TextView;&#13;&#10;import android.widget.Toast;&#13;&#10;import androidx.appcompat.widget.Toolbar;&#13;&#10;import androidx.cardview.widget.CardView;&#13;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#13;&#10;import androidx.recyclerview.widget.RecyclerView;&#13;&#10;&#13;&#10;import androidx.appcompat.app.AppCompatActivity;&#13;&#10;import com.google.android.material.floatingactionbutton.FloatingActionButton;&#13;&#10;import com.google.android.material.tabs.TabLayout;&#13;&#10;import com.google.firebase.auth.FirebaseAuth;&#13;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#13;&#10;&#13;&#10;import java.util.HashMap;&#13;&#10;import java.util.Map;&#13;&#10;&#13;&#10;public class ContentCreationActivity extends AppCompatActivity {&#13;&#10;&#13;&#10;    private Toolbar toolbar;&#13;&#10;    private TabLayout tabLayout;&#13;&#10;    private CardView cardLessonCreation, cardQuizCreation, cardVocabularyList;&#13;&#10;    private LinearLayout layoutLessonForm, layoutQuizForm, layoutVocabularyForm;&#13;&#10;&#13;&#10;    // Lesson creation components&#13;&#10;    private EditText etLessonTitle, etLessonDescription, etLessonContent;&#13;&#10;    private Spinner spinnerLessonCategory, spinnerDifficulty;&#13;&#10;    private Button btnSaveLesson, btnPreviewLesson;&#13;&#10;&#13;&#10;    // Quiz creation components&#13;&#10;    private EditText etQuizTitle, etQuizDescription;&#13;&#10;    private EditText etQuestion, etOption1, etOption2, etOption3, etOption4;&#13;&#10;    private RadioGroup rgCorrectAnswer;&#13;&#10;    private RecyclerView rvQuestions;&#13;&#10;    private Button btnAddQuestion, btnSaveQuiz, btnPreviewQuiz;&#13;&#10;&#13;&#10;    // Vocabulary components&#13;&#10;    private EditText etWord, etMeaning, etExample, etPronunciation;&#13;&#10;    private Spinner spinnerWordCategory;&#13;&#10;    private Button btnAddWord, btnSaveVocabulary;&#13;&#10;    private RecyclerView rvVocabularyList;&#13;&#10;&#13;&#10;    private FloatingActionButton fabPublish;&#13;&#10;    private TextView tvContentCount;&#13;&#10;&#13;&#10;    private FirebaseAuth mAuth;&#13;&#10;    private FirebaseFirestore db;&#13;&#10;    private String mode; // &quot;lesson&quot;, &quot;quiz&quot;, &quot;vocabulary&quot;&#13;&#10;    private String teacherId;&#13;&#10;&#13;&#10;    @Override&#13;&#10;    protected void onCreate(Bundle savedInstanceState) {&#13;&#10;        super.onCreate(savedInstanceState);&#13;&#10;        setContentView(R.layout.activity_content_creation);&#13;&#10;&#13;&#10;        // Get mode from intent&#13;&#10;        mode = getIntent().getStringExtra(&quot;mode&quot;);&#13;&#10;&#13;&#10;        mAuth = FirebaseAuth.getInstance();&#13;&#10;        db = FirebaseFirestore.getInstance();&#13;&#10;&#13;&#10;        if (mAuth.getCurrentUser() != null) {&#13;&#10;            teacherId = mAuth.getCurrentUser().getUid();&#13;&#10;        }&#13;&#10;&#13;&#10;        initViews();&#13;&#10;        setupToolbar();&#13;&#10;        setupTabs();&#13;&#10;        setupClickListeners();&#13;&#10;        handleModeSpecificSetup();&#13;&#10;        loadExistingContent();&#13;&#10;    }&#13;&#10;&#13;&#10;    private void initViews() {&#13;&#10;        toolbar = findViewById(R.id.toolbar);&#13;&#10;        tabLayout = findViewById(R.id.tab_layout);&#13;&#10;&#13;&#10;        // Cards&#13;&#10;        cardLessonCreation = findViewById(R.id.card_lesson_creation);&#13;&#10;        cardQuizCreation = findViewById(R.id.card_quiz_creation);&#13;&#10;        cardVocabularyList = findViewById(R.id.card_vocabulary_list);&#13;&#10;&#13;&#10;        // Layouts&#13;&#10;        layoutLessonForm = findViewById(R.id.layout_lesson_form);&#13;&#10;        layoutQuizForm = findViewById(R.id.layout_quiz_form);&#13;&#10;        layoutVocabularyForm = findViewById(R.id.layout_vocabulary_form);&#13;&#10;&#13;&#10;        // Lesson creation&#13;&#10;        etLessonTitle = findViewById(R.id.et_lesson_title);&#13;&#10;        etLessonDescription = findViewById(R.id.et_lesson_description);&#13;&#10;        etLessonContent = findViewById(R.id.et_lesson_content);&#13;&#10;        spinnerLessonCategory = findViewById(R.id.spinner_lesson_category);&#13;&#10;        spinnerDifficulty = findViewById(R.id.spinner_difficulty);&#13;&#10;        btnSaveLesson = findViewById(R.id.btn_save_lesson);&#13;&#10;        btnPreviewLesson = findViewById(R.id.btn_preview_lesson);&#13;&#10;&#13;&#10;        // Quiz creation&#13;&#10;        etQuizTitle = findViewById(R.id.et_quiz_title);&#13;&#10;        etQuizDescription = findViewById(R.id.et_quiz_description);&#13;&#10;        etQuestion = findViewById(R.id.et_question);&#13;&#10;        etOption1 = findViewById(R.id.et_option1);&#13;&#10;        etOption2 = findViewById(R.id.et_option2);&#13;&#10;        etOption3 = findViewById(R.id.et_option3);&#13;&#10;        etOption4 = findViewById(R.id.et_option4);&#13;&#10;        rgCorrectAnswer = findViewById(R.id.rg_correct_answer);&#13;&#10;        rvQuestions = findViewById(R.id.rv_questions);&#13;&#10;        btnAddQuestion = findViewById(R.id.btn_add_question);&#13;&#10;        btnSaveQuiz = findViewById(R.id.btn_save_quiz);&#13;&#10;        btnPreviewQuiz = findViewById(R.id.btn_preview_quiz);&#13;&#10;&#13;&#10;        // Vocabulary&#13;&#10;        etWord = findViewById(R.id.et_word);&#13;&#10;        etMeaning = findViewById(R.id.et_meaning);&#13;&#10;        etExample = findViewById(R.id.et_example);&#13;&#10;        etPronunciation = findViewById(R.id.et_pronunciation);&#13;&#10;        spinnerWordCategory = findViewById(R.id.spinner_word_category);&#13;&#10;        btnAddWord = findViewById(R.id.btn_add_word);&#13;&#10;        btnSaveVocabulary = findViewById(R.id.btn_save_vocabulary);&#13;&#10;        rvVocabularyList = findViewById(R.id.rv_vocabulary_list);&#13;&#10;&#13;&#10;        // Other components&#13;&#10;        fabPublish = findViewById(R.id.fab_publish);&#13;&#10;        tvContentCount = findViewById(R.id.tv_content_count);&#13;&#10;&#13;&#10;        // Setup RecyclerViews&#13;&#10;        if (rvQuestions != null) {&#13;&#10;            rvQuestions.setLayoutManager(new LinearLayoutManager(this));&#13;&#10;        }&#13;&#10;        if (rvVocabularyList != null) {&#13;&#10;            rvVocabularyList.setLayoutManager(new LinearLayoutManager(this));&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    private void setupToolbar() {&#13;&#10;        setSupportActionBar(toolbar);&#13;&#10;        if (getSupportActionBar() != null) {&#13;&#10;            getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#13;&#10;            getSupportActionBar().setDisplayShowHomeEnabled(true);&#13;&#10;            getSupportActionBar().setTitle(&quot;Tạo nội dung&quot;);&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    private void setupTabs() {&#13;&#10;        if (tabLayout != null) {&#13;&#10;            tabLayout.addTab(tabLayout.newTab().setText(&quot;Bài học&quot;));&#13;&#10;            tabLayout.addTab(tabLayout.newTab().setText(&quot;Quiz&quot;));&#13;&#10;            tabLayout.addTab(tabLayout.newTab().setText(&quot;Từ vựng&quot;));&#13;&#10;&#13;&#10;            tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {&#13;&#10;                @Override&#13;&#10;                public void onTabSelected(TabLayout.Tab tab) {&#13;&#10;                    switchContentType(tab.getPosition());&#13;&#10;                }&#13;&#10;&#13;&#10;                @Override&#13;&#10;                public void onTabUnselected(TabLayout.Tab tab) {}&#13;&#10;&#13;&#10;                @Override&#13;&#10;                public void onTabReselected(TabLayout.Tab tab) {}&#13;&#10;            });&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    private void setupClickListeners() {&#13;&#10;        // Lesson creation&#13;&#10;        if (btnSaveLesson != null) {&#13;&#10;            btnSaveLesson.setOnClickListener(v -&gt; saveLesson());&#13;&#10;        }&#13;&#10;        if (btnPreviewLesson != null) {&#13;&#10;            btnPreviewLesson.setOnClickListener(v -&gt; previewLesson());&#13;&#10;        }&#13;&#10;&#13;&#10;        // Quiz creation&#13;&#10;        if (btnAddQuestion != null) {&#13;&#10;            btnAddQuestion.setOnClickListener(v -&gt; addQuestion());&#13;&#10;        }&#13;&#10;        if (btnSaveQuiz != null) {&#13;&#10;            btnSaveQuiz.setOnClickListener(v -&gt; saveQuiz());&#13;&#10;        }&#13;&#10;        if (btnPreviewQuiz != null) {&#13;&#10;            btnPreviewQuiz.setOnClickListener(v -&gt; previewQuiz());&#13;&#10;        }&#13;&#10;&#13;&#10;        // Vocabulary&#13;&#10;        if (btnAddWord != null) {&#13;&#10;            btnAddWord.setOnClickListener(v -&gt; addWord());&#13;&#10;        }&#13;&#10;        if (btnSaveVocabulary != null) {&#13;&#10;            btnSaveVocabulary.setOnClickListener(v -&gt; saveVocabularyList());&#13;&#10;        }&#13;&#10;&#13;&#10;        // FAB&#13;&#10;        if (fabPublish != null) {&#13;&#10;            fabPublish.setOnClickListener(v -&gt; publishContent());&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    private void handleModeSpecificSetup() {&#13;&#10;        if (&quot;lesson&quot;.equals(mode) &amp;&amp; tabLayout != null) {&#13;&#10;            tabLayout.getTabAt(0).select();&#13;&#10;            switchContentType(0);&#13;&#10;        } else if (&quot;quiz&quot;.equals(mode) &amp;&amp; tabLayout != null) {&#13;&#10;            tabLayout.getTabAt(1).select();&#13;&#10;            switchContentType(1);&#13;&#10;        } else if (&quot;vocabulary&quot;.equals(mode) &amp;&amp; tabLayout != null) {&#13;&#10;            tabLayout.getTabAt(2).select();&#13;&#10;            switchContentType(2);&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    private void switchContentType(int position) {&#13;&#10;        // Hide all layouts first&#13;&#10;        hideAllLayouts();&#13;&#10;&#13;&#10;        switch (position) {&#13;&#10;            case 0: // Lesson&#13;&#10;                if (layoutLessonForm != null) {&#13;&#10;                    layoutLessonForm.setVisibility(View.VISIBLE);&#13;&#10;                }&#13;&#10;                break;&#13;&#10;            case 1: // Quiz&#13;&#10;                if (layoutQuizForm != null) {&#13;&#10;                    layoutQuizForm.setVisibility(View.VISIBLE);&#13;&#10;                }&#13;&#10;                break;&#13;&#10;            case 2: // Vocabulary&#13;&#10;                if (layoutVocabularyForm != null) {&#13;&#10;                    layoutVocabularyForm.setVisibility(View.VISIBLE);&#13;&#10;                }&#13;&#10;                break;&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    private void hideAllLayouts() {&#13;&#10;        if (layoutLessonForm != null) layoutLessonForm.setVisibility(View.GONE);&#13;&#10;        if (layoutQuizForm != null) layoutQuizForm.setVisibility(View.GONE);&#13;&#10;        if (layoutVocabularyForm != null) layoutVocabularyForm.setVisibility(View.GONE);&#13;&#10;    }&#13;&#10;&#13;&#10;    private void saveLesson() {&#13;&#10;        if (teacherId == null) {&#13;&#10;            Toast.makeText(this, &quot;Lỗi: Không thể xác định giáo viên&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;            return;&#13;&#10;        }&#13;&#10;&#13;&#10;        String title = etLessonTitle != null ? etLessonTitle.getText().toString().trim() : &quot;&quot;;&#13;&#10;        String description = etLessonDescription != null ? etLessonDescription.getText().toString().trim() : &quot;&quot;;&#13;&#10;        String content = etLessonContent != null ? etLessonContent.getText().toString().trim() : &quot;&quot;;&#13;&#10;&#13;&#10;        if (title.isEmpty() || content.isEmpty()) {&#13;&#10;            Toast.makeText(this, &quot;Vui lòng nhập đầy đủ tiêu đề và nội dung&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;            return;&#13;&#10;        }&#13;&#10;&#13;&#10;        Map&lt;String, Object&gt; lessonData = new HashMap&lt;&gt;();&#13;&#10;        lessonData.put(&quot;teacherId&quot;, teacherId);&#13;&#10;        lessonData.put(&quot;title&quot;, title);&#13;&#10;        lessonData.put(&quot;description&quot;, description);&#13;&#10;        lessonData.put(&quot;content&quot;, content);&#13;&#10;        lessonData.put(&quot;type&quot;, &quot;lesson&quot;);&#13;&#10;        lessonData.put(&quot;createdAt&quot;, System.currentTimeMillis());&#13;&#10;        lessonData.put(&quot;status&quot;, &quot;draft&quot;);&#13;&#10;&#13;&#10;        db.collection(&quot;content&quot;)&#13;&#10;                .add(lessonData)&#13;&#10;                .addOnSuccessListener(documentReference -&gt; {&#13;&#10;                    Toast.makeText(this, &quot;Bài học đã được lưu thành công!&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;                    clearLessonForm();&#13;&#10;                    updateContentCount();&#13;&#10;                })&#13;&#10;                .addOnFailureListener(e -&gt; {&#13;&#10;                    Toast.makeText(this, &quot;Lỗi khi lưu: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#13;&#10;                });&#13;&#10;    }&#13;&#10;&#13;&#10;    private void previewLesson() {&#13;&#10;        Intent intent = new Intent(this, CourseListActivity.class);&#13;&#10;        intent.putExtra(&quot;mode&quot;, &quot;preview&quot;);&#13;&#10;        intent.putExtra(&quot;title&quot;, etLessonTitle != null ? etLessonTitle.getText().toString() : &quot;&quot;);&#13;&#10;        startActivity(intent);&#13;&#10;    }&#13;&#10;&#13;&#10;    private void addQuestion() {&#13;&#10;        String question = etQuestion != null ? etQuestion.getText().toString().trim() : &quot;&quot;;&#13;&#10;        String option1 = etOption1 != null ? etOption1.getText().toString().trim() : &quot;&quot;;&#13;&#10;        String option2 = etOption2 != null ? etOption2.getText().toString().trim() : &quot;&quot;;&#13;&#10;        String option3 = etOption3 != null ? etOption3.getText().toString().trim() : &quot;&quot;;&#13;&#10;        String option4 = etOption4 != null ? etOption4.getText().toString().trim() : &quot;&quot;;&#13;&#10;&#13;&#10;        if (question.isEmpty() || option1.isEmpty() || option2.isEmpty()) {&#13;&#10;            Toast.makeText(this, &quot;Vui lòng nhập câu hỏi và ít nhất 2 đáp án&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;            return;&#13;&#10;        }&#13;&#10;&#13;&#10;        int correctAnswer = 0;&#13;&#10;        if (rgCorrectAnswer != null &amp;&amp; rgCorrectAnswer.getCheckedRadioButtonId() != -1) {&#13;&#10;            RadioButton selectedButton = findViewById(rgCorrectAnswer.getCheckedRadioButtonId());&#13;&#10;            // Logic to determine correct answer index&#13;&#10;        }&#13;&#10;&#13;&#10;        // Add question to list (implementation would involve adapter)&#13;&#10;        Toast.makeText(this, &quot;Câu hỏi đã được thêm&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;        clearQuestionForm();&#13;&#10;    }&#13;&#10;&#13;&#10;    private void saveQuiz() {&#13;&#10;        // Implementation similar to saveLesson&#13;&#10;        Toast.makeText(this, &quot;Quiz đã được lưu&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;    }&#13;&#10;&#13;&#10;    private void previewQuiz() {&#13;&#10;        Intent intent = new Intent(this, QuizActivity.class);&#13;&#10;        intent.putExtra(&quot;mode&quot;, &quot;preview&quot;);&#13;&#10;        startActivity(intent);&#13;&#10;    }&#13;&#10;&#13;&#10;    private void addWord() {&#13;&#10;        String word = etWord != null ? etWord.getText().toString().trim() : &quot;&quot;;&#13;&#10;        String meaning = etMeaning != null ? etMeaning.getText().toString().trim() : &quot;&quot;;&#13;&#10;        String example = etExample != null ? etExample.getText().toString().trim() : &quot;&quot;;&#13;&#10;&#13;&#10;        if (word.isEmpty() || meaning.isEmpty()) {&#13;&#10;            Toast.makeText(this, &quot;Vui lòng nhập từ và nghĩa&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;            return;&#13;&#10;        }&#13;&#10;&#13;&#10;        // Add word to vocabulary list&#13;&#10;        Toast.makeText(this, &quot;Từ vựng đã được thêm&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;        clearVocabularyForm();&#13;&#10;    }&#13;&#10;&#13;&#10;    private void saveVocabularyList() {&#13;&#10;        Toast.makeText(this, &quot;Danh sách từ vựng đã được lưu&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;    }&#13;&#10;&#13;&#10;    private void publishContent() {&#13;&#10;        android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this);&#13;&#10;        builder.setTitle(&quot;Xuất bản nội dung&quot;)&#13;&#10;                .setMessage(&quot;Bạn có chắc chắn muốn xuất bản nội dung này? Học viên sẽ có thể truy cập.&quot;)&#13;&#10;                .setPositiveButton(&quot;Xuất bản&quot;, (dialog, which) -&gt; {&#13;&#10;                    Toast.makeText(this, &quot;Nội dung đã được xuất bản!&quot;, Toast.LENGTH_SHORT).show();&#13;&#10;                })&#13;&#10;                .setNegativeButton(&quot;Hủy&quot;, null)&#13;&#10;                .show();&#13;&#10;    }&#13;&#10;&#13;&#10;    private void clearLessonForm() {&#13;&#10;        if (etLessonTitle != null) etLessonTitle.setText(&quot;&quot;);&#13;&#10;        if (etLessonDescription != null) etLessonDescription.setText(&quot;&quot;);&#13;&#10;        if (etLessonContent != null) etLessonContent.setText(&quot;&quot;);&#13;&#10;    }&#13;&#10;&#13;&#10;    private void clearQuestionForm() {&#13;&#10;        if (etQuestion != null) etQuestion.setText(&quot;&quot;);&#13;&#10;        if (etOption1 != null) etOption1.setText(&quot;&quot;);&#13;&#10;        if (etOption2 != null) etOption2.setText(&quot;&quot;);&#13;&#10;        if (etOption3 != null) etOption3.setText(&quot;&quot;);&#13;&#10;        if (etOption4 != null) etOption4.setText(&quot;&quot;);&#13;&#10;        if (rgCorrectAnswer != null) rgCorrectAnswer.clearCheck();&#13;&#10;    }&#13;&#10;&#13;&#10;    private void clearVocabularyForm() {&#13;&#10;        if (etWord != null) etWord.setText(&quot;&quot;);&#13;&#10;        if (etMeaning != null) etMeaning.setText(&quot;&quot;);&#13;&#10;        if (etExample != null) etExample.setText(&quot;&quot;);&#13;&#10;        if (etPronunciation != null) etPronunciation.setText(&quot;&quot;);&#13;&#10;    }&#13;&#10;&#13;&#10;    private void loadExistingContent() {&#13;&#10;        updateContentCount();&#13;&#10;    }&#13;&#10;&#13;&#10;    private void updateContentCount() {&#13;&#10;        if (teacherId != null) {&#13;&#10;            db.collection(&quot;content&quot;)&#13;&#10;                    .whereEqualTo(&quot;teacherId&quot;, teacherId)&#13;&#10;                    .get()&#13;&#10;                    .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#13;&#10;                        int count = queryDocumentSnapshots.size();&#13;&#10;                        if (tvContentCount != null) {&#13;&#10;                            tvContentCount.setText(&quot;Đã tạo: &quot; + count + &quot; nội dung&quot;);&#13;&#10;                        }&#13;&#10;                    });&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public boolean onOptionsItemSelected(MenuItem item) {&#13;&#10;        if (item.getItemId() == android.R.id.home) {&#13;&#10;            onBackPressed();&#13;&#10;            return true;&#13;&#10;        }&#13;&#10;        return super.onOptionsItemSelected(item);&#13;&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public void onBackPressed() {&#13;&#10;        super.onBackPressed();&#13;&#10;        Intent intent = new Intent(this, TeacherDashboardActivity.class);&#13;&#10;        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);&#13;&#10;        startActivity(intent);&#13;&#10;        finish();&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/CourseAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/CourseAdapter.java" />
              <option name="originalContent" value="package com.vantinh.tienganh;&#10;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.Button;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import androidx.annotation.NonNull;&#10;import androidx.cardview.widget.CardView;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import java.text.SimpleDateFormat;&#10;import java.util.List;&#10;import java.util.Locale;&#10;&#10;public class CourseAdapter extends RecyclerView.Adapter&lt;CourseAdapter.CourseViewHolder&gt; {&#10;&#10;    private List&lt;Course&gt; courseList;&#10;    private OnCourseClickListener listener;&#10;&#10;    public interface OnCourseClickListener {&#10;        void onCourseClick(Course course);&#10;        void onManageLessons(Course course);&#10;        void onEditCourse(Course course);&#10;    }&#10;&#10;    public CourseAdapter(List&lt;Course&gt; courseList, OnCourseClickListener listener) {&#10;        this.courseList = courseList;&#10;        this.listener = listener;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public CourseViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext())&#10;                .inflate(R.layout.item_course, parent, false);&#10;        return new CourseViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull CourseViewHolder holder, int position) {&#10;        Course course = courseList.get(position);&#10;        holder.bind(course);&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return courseList.size();&#10;    }&#10;&#10;    class CourseViewHolder extends RecyclerView.ViewHolder {&#10;        private CardView cardCourse;&#10;        private ImageView ivCourseImage;&#10;        private TextView tvCourseTitle;&#10;        private TextView tvCourseDescription;&#10;        private TextView tvCourseLevel;&#10;        private TextView tvCourseCategory;&#10;        private TextView tvCourseDuration;&#10;        private TextView tvEnrolledStudents;&#10;        private TextView tvCourseRating;&#10;        private TextView tvCreatedDate;&#10;        private Button btnManageLessons;&#10;        private Button btnEditCourse;&#10;&#10;        public CourseViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            cardCourse = itemView.findViewById(R.id.card_course);&#10;            ivCourseImage = itemView.findViewById(R.id.iv_course_image);&#10;            tvCourseTitle = itemView.findViewById(R.id.tv_course_title);&#10;            tvCourseDescription = itemView.findViewById(R.id.tv_course_description);&#10;            tvCourseLevel = itemView.findViewById(R.id.tv_course_level);&#10;            tvCourseCategory = itemView.findViewById(R.id.tv_course_category);&#10;            tvCourseDuration = itemView.findViewById(R.id.tv_course_duration);&#10;            tvEnrolledStudents = itemView.findViewById(R.id.tv_enrolled_students);&#10;            tvCourseRating = itemView.findViewById(R.id.tv_course_rating);&#10;            tvCreatedDate = itemView.findViewById(R.id.tv_created_date);&#10;            btnManageLessons = itemView.findViewById(R.id.btn_manage_lessons);&#10;            btnEditCourse = itemView.findViewById(R.id.btn_edit_course);&#10;        }&#10;&#10;        public void bind(Course course) {&#10;            tvCourseTitle.setText(course.getTitle());&#10;            tvCourseDescription.setText(course.getDescription());&#10;            tvCourseLevel.setText(course.getLevel());&#10;            tvCourseCategory.setText(course.getCategory());&#10;            tvCourseDuration.setText(course.getDuration() + &quot; giờ&quot;);&#10;            tvEnrolledStudents.setText(course.getEnrolledStudents() + &quot; học viên&quot;);&#10;            tvCourseRating.setText(String.format(Locale.getDefault(), &quot;%.1f★&quot;, course.getRating()));&#10;&#10;            if (course.getCreatedAt() != null) {&#10;                SimpleDateFormat sdf = new SimpleDateFormat(&quot;dd/MM/yyyy&quot;, Locale.getDefault());&#10;                tvCreatedDate.setText(&quot;Tạo: &quot; + sdf.format(course.getCreatedAt()));&#10;            }&#10;&#10;            // Set course image (placeholder for now)&#10;            ivCourseImage.setImageResource(R.drawable.ic_course_default);&#10;&#10;            // Set up click listeners&#10;            cardCourse.setOnClickListener(v -&gt; {&#10;                if (listener != null) {&#10;                    listener.onCourseClick(course);&#10;                }&#10;            });&#10;&#10;            btnManageLessons.setOnClickListener(v -&gt; {&#10;                if (listener != null) {&#10;                    listener.onManageLessons(course);&#10;                }&#10;            });&#10;&#10;            btnEditCourse.setOnClickListener(v -&gt; {&#10;                if (listener != null) {&#10;                    listener.onEditCourse(course);&#10;                }&#10;            });&#10;&#10;            // Add animation&#10;            cardCourse.setOnTouchListener((v, event) -&gt; {&#10;                switch (event.getAction()) {&#10;                    case android.view.MotionEvent.ACTION_DOWN:&#10;                        v.animate().scaleX(0.95f).scaleY(0.95f).setDuration(100).start();&#10;                        break;&#10;                    case android.view.MotionEvent.ACTION_UP:&#10;                    case android.view.MotionEvent.ACTION_CANCEL:&#10;                        v.animate().scaleX(1.0f).scaleY(1.0f).setDuration(100).start();&#10;                        break;&#10;                }&#10;                return false;&#10;            });&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.vantinh.tienganh;&#13;&#10;&#13;&#10;import android.view.LayoutInflater;&#13;&#10;import android.view.View;&#13;&#10;import android.view.ViewGroup;&#13;&#10;import android.widget.Button;&#13;&#10;import android.widget.ImageView;&#13;&#10;import android.widget.TextView;&#13;&#10;import androidx.annotation.NonNull;&#13;&#10;import androidx.cardview.widget.CardView;&#13;&#10;import androidx.recyclerview.widget.RecyclerView;&#13;&#10;import java.text.SimpleDateFormat;&#13;&#10;import java.util.List;&#13;&#10;import java.util.Locale;&#13;&#10;&#13;&#10;public class CourseAdapter extends RecyclerView.Adapter&lt;CourseAdapter.CourseViewHolder&gt; {&#13;&#10;&#13;&#10;    private List&lt;Course&gt; courseList;&#13;&#10;    private OnCourseClickListener listener;&#13;&#10;&#13;&#10;    public interface OnCourseClickListener {&#13;&#10;        void onCourseClick(Course course);&#13;&#10;        void onManageLessons(Course course);&#13;&#10;        void onEditCourse(Course course);&#13;&#10;    }&#13;&#10;&#13;&#10;    public CourseAdapter(List&lt;Course&gt; courseList, OnCourseClickListener listener) {&#13;&#10;        this.courseList = courseList;&#13;&#10;        this.listener = listener;&#13;&#10;    }&#13;&#10;&#13;&#10;    // Method to update course list for filtering&#13;&#10;    public void updateCourseList(List&lt;Course&gt; newCourseList) {&#13;&#10;        this.courseList = newCourseList;&#13;&#10;        notifyDataSetChanged();&#13;&#10;    }&#13;&#10;&#13;&#10;    @NonNull&#13;&#10;    @Override&#13;&#10;    public CourseViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#13;&#10;        View view = LayoutInflater.from(parent.getContext())&#13;&#10;                .inflate(R.layout.item_course, parent, false);&#13;&#10;        return new CourseViewHolder(view);&#13;&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public void onBindViewHolder(@NonNull CourseViewHolder holder, int position) {&#13;&#10;        Course course = courseList.get(position);&#13;&#10;        holder.bind(course);&#13;&#10;    }&#13;&#10;&#13;&#10;    @Override&#13;&#10;    public int getItemCount() {&#13;&#10;        return courseList.size();&#13;&#10;    }&#13;&#10;&#13;&#10;    class CourseViewHolder extends RecyclerView.ViewHolder {&#13;&#10;        private CardView cardCourse;&#13;&#10;        private ImageView ivCourseImage;&#13;&#10;        private TextView tvCourseTitle;&#13;&#10;        private TextView tvCourseDescription;&#13;&#10;        private TextView tvCourseLevel;&#13;&#10;        private TextView tvCourseCategory;&#13;&#10;        private TextView tvCourseDuration;&#13;&#10;        private TextView tvEnrolledStudents;&#13;&#10;        private TextView tvCourseRating;&#13;&#10;        private TextView tvCreatedDate;&#13;&#10;        private Button btnManageLessons;&#13;&#10;        private Button btnEditCourse;&#13;&#10;&#13;&#10;        public CourseViewHolder(@NonNull View itemView) {&#13;&#10;            super(itemView);&#13;&#10;            cardCourse = itemView.findViewById(R.id.card_course);&#13;&#10;            ivCourseImage = itemView.findViewById(R.id.iv_course_image);&#13;&#10;            tvCourseTitle = itemView.findViewById(R.id.tv_course_title);&#13;&#10;            tvCourseDescription = itemView.findViewById(R.id.tv_course_description);&#13;&#10;            tvCourseLevel = itemView.findViewById(R.id.tv_course_level);&#13;&#10;            tvCourseCategory = itemView.findViewById(R.id.tv_course_category);&#13;&#10;            tvCourseDuration = itemView.findViewById(R.id.tv_course_duration);&#13;&#10;            tvEnrolledStudents = itemView.findViewById(R.id.tv_enrolled_students);&#13;&#10;            tvCourseRating = itemView.findViewById(R.id.tv_course_rating);&#13;&#10;            tvCreatedDate = itemView.findViewById(R.id.tv_created_date);&#13;&#10;            btnManageLessons = itemView.findViewById(R.id.btn_manage_lessons);&#13;&#10;            btnEditCourse = itemView.findViewById(R.id.btn_edit_course);&#13;&#10;        }&#13;&#10;&#13;&#10;        public void bind(Course course) {&#13;&#10;            tvCourseTitle.setText(course.getTitle());&#13;&#10;            tvCourseDescription.setText(course.getDescription());&#13;&#10;            tvCourseLevel.setText(course.getLevel());&#13;&#10;            tvCourseCategory.setText(course.getCategory());&#13;&#10;            tvCourseDuration.setText(course.getDuration() + &quot; giờ&quot;);&#13;&#10;            tvEnrolledStudents.setText(course.getEnrolledStudents() + &quot; học viên&quot;);&#13;&#10;            tvCourseRating.setText(String.format(Locale.getDefault(), &quot;%.1f★&quot;, course.getRating()));&#13;&#10;&#13;&#10;            if (course.getCreatedAt() != null) {&#13;&#10;                SimpleDateFormat sdf = new SimpleDateFormat(&quot;dd/MM/yyyy&quot;, Locale.getDefault());&#13;&#10;                tvCreatedDate.setText(&quot;Tạo: &quot; + sdf.format(course.getCreatedAt()));&#13;&#10;            }&#13;&#10;&#13;&#10;            // Set course image (placeholder for now)&#13;&#10;            ivCourseImage.setImageResource(R.drawable.ic_course_default);&#13;&#10;&#13;&#10;            // Set up click listeners&#13;&#10;            cardCourse.setOnClickListener(v -&gt; {&#13;&#10;                if (listener != null) {&#13;&#10;                    listener.onCourseClick(course);&#13;&#10;                }&#13;&#10;            });&#13;&#10;&#13;&#10;            btnManageLessons.setOnClickListener(v -&gt; {&#13;&#10;                if (listener != null) {&#13;&#10;                    listener.onManageLessons(course);&#13;&#10;                }&#13;&#10;            });&#13;&#10;&#13;&#10;            btnEditCourse.setOnClickListener(v -&gt; {&#13;&#10;                if (listener != null) {&#13;&#10;                    listener.onEditCourse(course);&#13;&#10;                }&#13;&#10;            });&#13;&#10;&#13;&#10;            // Add animation&#13;&#10;            cardCourse.setOnTouchListener((v, event) -&gt; {&#13;&#10;                switch (event.getAction()) {&#13;&#10;                    case android.view.MotionEvent.ACTION_DOWN:&#13;&#10;                        v.animate().scaleX(0.95f).scaleY(0.95f).setDuration(100).start();&#13;&#10;                        break;&#13;&#10;                    case android.view.MotionEvent.ACTION_UP:&#13;&#10;                    case android.view.MotionEvent.ACTION_CANCEL:&#13;&#10;                        v.animate().scaleX(1.0f).scaleY(1.0f).setDuration(100).start();&#13;&#10;                        break;&#13;&#10;                }&#13;&#10;                return false;&#13;&#10;            });&#13;&#10;        }&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/CourseManagementActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/CourseManagementActivity.java" />
              <option name="originalContent" value="package com.vantinh.tienganh;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.Menu;&#10;import android.view.MenuItem;&#10;import android.view.View;&#10;import android.widget.LinearLayout;&#10;import android.widget.Toast;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import com.google.android.material.floatingactionbutton.FloatingActionButton;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;import com.google.firebase.firestore.QueryDocumentSnapshot;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class CourseManagementActivity extends AppCompatActivity {&#10;&#10;    private RecyclerView rvCourses;&#10;    private FloatingActionButton fabAddCourse;&#10;    private LinearLayout tvNoCourses; // Changed from TextView to LinearLayout&#10;    private Toolbar toolbar;&#10;&#10;    private FirebaseAuth mAuth;&#10;    private FirebaseFirestore db;&#10;    private List&lt;Course&gt; courseList;&#10;    private CourseAdapter courseAdapter;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_course_management);&#10;&#10;        mAuth = FirebaseAuth.getInstance();&#10;        db = FirebaseFirestore.getInstance();&#10;        courseList = new ArrayList&lt;&gt;();&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        setupRecyclerView();&#10;        setupClickListeners();&#10;        loadCourses();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        rvCourses = findViewById(R.id.rv_courses);&#10;        fabAddCourse = findViewById(R.id.fab_add_course);&#10;        tvNoCourses = findViewById(R.id.tv_no_courses);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setTitle(&quot;Quản lý khóa học&quot;);&#10;            getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#10;        }&#10;    }&#10;&#10;    private void setupRecyclerView() {&#10;        courseAdapter = new CourseAdapter(courseList, new CourseAdapter.OnCourseClickListener() {&#10;            @Override&#10;            public void onCourseClick(Course course) {&#10;                // Xem chi tiết khóa học&#10;                Intent intent = new Intent(CourseManagementActivity.this, EditCourseActivity.class);&#10;                intent.putExtra(&quot;courseId&quot;, course.getId());&#10;                startActivity(intent);&#10;            }&#10;&#10;            @Override&#10;            public void onManageLessons(Course course) {&#10;                // Chuyển đến quản lý bài học&#10;                Intent intent = new Intent(CourseManagementActivity.this, LessonManagementActivity.class);&#10;                intent.putExtra(&quot;courseId&quot;, course.getId());&#10;                intent.putExtra(&quot;courseTitle&quot;, course.getTitle());&#10;                intent.putExtra(&quot;courseCategory&quot;, course.getCategory());&#10;                startActivity(intent);&#10;            }&#10;&#10;            @Override&#10;            public void onEditCourse(Course course) {&#10;                // Chỉnh sửa khóa học&#10;                Intent intent = new Intent(CourseManagementActivity.this, EditCourseActivity.class);&#10;                intent.putExtra(&quot;courseId&quot;, course.getId());&#10;                startActivity(intent);&#10;            }&#10;        });&#10;        rvCourses.setLayoutManager(new LinearLayoutManager(this));&#10;        rvCourses.setAdapter(courseAdapter);&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        fabAddCourse.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(this, CreateCourseActivity.class);&#10;            startActivity(intent);&#10;        });&#10;    }&#10;&#10;    private void loadCourses() {&#10;        // Check if user is authenticated&#10;        if (mAuth.getCurrentUser() == null) {&#10;            Toast.makeText(this, &quot;Bạn cần đăng nhập để xem khóa học&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        String currentUserId = mAuth.getCurrentUser().getUid();&#10;&#10;        // Add debug logging&#10;        android.util.Log.d(&quot;CourseManagement&quot;, &quot;Loading courses for user: &quot; + currentUserId);&#10;&#10;        db.collection(&quot;courses&quot;)&#10;            .whereEqualTo(&quot;teacherId&quot;, currentUserId)&#10;            .get()&#10;            .addOnCompleteListener(task -&gt; {&#10;                if (task.isSuccessful()) {&#10;                    courseList.clear();&#10;                    android.util.Log.d(&quot;CourseManagement&quot;, &quot;Found &quot; + task.getResult().size() + &quot; courses&quot;);&#10;&#10;                    for (QueryDocumentSnapshot document : task.getResult()) {&#10;                        Course course = document.toObject(Course.class);&#10;                        course.setId(document.getId());&#10;                        courseList.add(course);&#10;                    }&#10;&#10;                    if (courseList.isEmpty()) {&#10;                        tvNoCourses.setVisibility(View.VISIBLE);&#10;                        rvCourses.setVisibility(View.GONE);&#10;                    } else {&#10;                        tvNoCourses.setVisibility(View.GONE);&#10;                        rvCourses.setVisibility(View.VISIBLE);&#10;                    }&#10;&#10;                    courseAdapter.notifyDataSetChanged();&#10;                } else {&#10;                    android.util.Log.e(&quot;CourseManagement&quot;, &quot;Error loading courses&quot;, task.getException());&#10;                    Toast.makeText(this, &quot;Lỗi khi tải khóa học: &quot; + task.getException().getMessage(), Toast.LENGTH_SHORT).show();&#10;                }&#10;            });&#10;    }&#10;&#10;    @Override&#10;    public boolean onCreateOptionsMenu(Menu menu) {&#10;        getMenuInflater().inflate(R.menu.course_management_menu, menu);&#10;        return true;&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(@NonNull MenuItem item) {&#10;        int itemId = item.getItemId();&#10;&#10;        if (itemId == android.R.id.home) {&#10;            finish();&#10;            return true;&#10;        } else if (itemId == R.id.action_refresh) {&#10;            loadCourses();&#10;            return true;&#10;        } else if (itemId == R.id.action_search) {&#10;            // Implement search functionality&#10;            return true;&#10;        }&#10;&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        loadCourses(); // Refresh data when returning to this activity&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.vantinh.tienganh;&#10;&#10;import android.app.AlertDialog;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.text.Editable;&#10;import android.text.TextWatcher;&#10;import android.view.Menu;&#10;import android.view.MenuItem;&#10;import android.view.View;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.LinearLayout;&#10;import android.widget.Spinner;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import com.google.android.material.button.MaterialButton;&#10;import com.google.android.material.floatingactionbutton.FloatingActionButton;&#10;import com.google.android.material.textfield.TextInputEditText;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;import com.google.firebase.firestore.QueryDocumentSnapshot;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class CourseManagementActivity extends AppCompatActivity {&#10;&#10;    private RecyclerView rvCourses;&#10;    private FloatingActionButton fabAddCourse;&#10;    private LinearLayout tvNoCourses;&#10;    private Toolbar toolbar;&#10;    private TextInputEditText etSearch;&#10;    private MaterialButton btnFilter;&#10;    private TextView tvTotalCourses, tvTotalStudents, tvAvgRating, tvCourseCount;&#10;&#10;    private FirebaseAuth mAuth;&#10;    private FirebaseFirestore db;&#10;    private List&lt;Course&gt; courseList;&#10;    private List&lt;Course&gt; filteredCourseList;&#10;    private CourseAdapter courseAdapter;&#10;&#10;    // Filter variables&#10;    private String selectedCategory = &quot;Tất cả&quot;;&#10;    private String selectedLevel = &quot;Tất cả&quot;;&#10;    private String searchQuery = &quot;&quot;;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_course_management);&#10;&#10;        mAuth = FirebaseAuth.getInstance();&#10;        db = FirebaseFirestore.getInstance();&#10;        courseList = new ArrayList&lt;&gt;();&#10;        filteredCourseList = new ArrayList&lt;&gt;();&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        setupRecyclerView();&#10;        setupSearchAndFilter();&#10;        setupClickListeners();&#10;        loadCourses();&#10;        loadStatistics();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        rvCourses = findViewById(R.id.rv_courses);&#10;        fabAddCourse = findViewById(R.id.fab_add_course);&#10;        tvNoCourses = findViewById(R.id.tv_no_courses);&#10;        etSearch = findViewById(R.id.et_search);&#10;        btnFilter = findViewById(R.id.btn_filter);&#10;        tvTotalCourses = findViewById(R.id.tv_total_courses);&#10;        tvTotalStudents = findViewById(R.id.tv_total_students);&#10;        tvAvgRating = findViewById(R.id.tv_avg_rating);&#10;        tvCourseCount = findViewById(R.id.tv_course_count);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setTitle(&quot;Quản lý khóa học&quot;);&#10;            getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#10;        }&#10;    }&#10;&#10;    private void setupRecyclerView() {&#10;        courseAdapter = new CourseAdapter(courseList, new CourseAdapter.OnCourseClickListener() {&#10;            @Override&#10;            public void onCourseClick(Course course) {&#10;                // Xem chi tiết khóa học&#10;                Intent intent = new Intent(CourseManagementActivity.this, EditCourseActivity.class);&#10;                intent.putExtra(&quot;courseId&quot;, course.getId());&#10;                startActivity(intent);&#10;            }&#10;&#10;            @Override&#10;            public void onManageLessons(Course course) {&#10;                // Chuyển đến quản lý bài học&#10;                Intent intent = new Intent(CourseManagementActivity.this, LessonManagementActivity.class);&#10;                intent.putExtra(&quot;courseId&quot;, course.getId());&#10;                intent.putExtra(&quot;courseTitle&quot;, course.getTitle());&#10;                intent.putExtra(&quot;courseCategory&quot;, course.getCategory());&#10;                startActivity(intent);&#10;            }&#10;&#10;            @Override&#10;            public void onEditCourse(Course course) {&#10;                // Chỉnh sửa khóa học&#10;                Intent intent = new Intent(CourseManagementActivity.this, EditCourseActivity.class);&#10;                intent.putExtra(&quot;courseId&quot;, course.getId());&#10;                startActivity(intent);&#10;            }&#10;        });&#10;        rvCourses.setLayoutManager(new LinearLayoutManager(this));&#10;        rvCourses.setAdapter(courseAdapter);&#10;    }&#10;&#10;    private void setupSearchAndFilter() {&#10;        // Setup search functionality&#10;        if (etSearch != null) {&#10;            etSearch.addTextChangedListener(new TextWatcher() {&#10;                @Override&#10;                public void beforeTextChanged(CharSequence s, int start, int count, int after) {}&#10;&#10;                @Override&#10;                public void onTextChanged(CharSequence s, int start, int before, int count) {&#10;                    searchQuery = s.toString().trim();&#10;                    filterCourses();&#10;                }&#10;&#10;                @Override&#10;                public void afterTextChanged(Editable s) {}&#10;            });&#10;        }&#10;&#10;        // Setup filter button&#10;        if (btnFilter != null) {&#10;            btnFilter.setOnClickListener(v -&gt; showFilterDialog());&#10;        }&#10;    }&#10;&#10;    private void showFilterDialog() {&#10;        AlertDialog.Builder builder = new AlertDialog.Builder(this);&#10;        View dialogView = getLayoutInflater().inflate(R.layout.dialog_course_filter, null);&#10;        &#10;        Spinner spinnerCategory = dialogView.findViewById(R.id.spinner_category);&#10;        Spinner spinnerLevel = dialogView.findViewById(R.id.spinner_level);&#10;        MaterialButton btnApply = dialogView.findViewById(R.id.btn_apply_filter);&#10;        MaterialButton btnReset = dialogView.findViewById(R.id.btn_reset_filter);&#10;&#10;        // Setup category spinner&#10;        String[] categories = {&quot;Tất cả&quot;, &quot;Ngữ pháp&quot;, &quot;Từ vựng&quot;, &quot;Phát âm&quot;, &quot;Nghe&quot;, &quot;Nói&quot;, &quot;Đọc&quot;, &quot;Viết&quot;};&#10;        ArrayAdapter&lt;String&gt; categoryAdapter = new ArrayAdapter&lt;&gt;(this, android.R.layout.simple_spinner_item, categories);&#10;        categoryAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerCategory.setAdapter(categoryAdapter);&#10;&#10;        // Setup level spinner&#10;        String[] levels = {&quot;Tất cả&quot;, &quot;Beginner&quot;, &quot;Intermediate&quot;, &quot;Advanced&quot;};&#10;        ArrayAdapter&lt;String&gt; levelAdapter = new ArrayAdapter&lt;&gt;(this, android.R.layout.simple_spinner_item, levels);&#10;        levelAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerLevel.setAdapter(levelAdapter);&#10;&#10;        // Set current selections&#10;        spinnerCategory.setSelection(getCategoryPosition(selectedCategory));&#10;        spinnerLevel.setSelection(getLevelPosition(selectedLevel));&#10;&#10;        AlertDialog dialog = builder.setView(dialogView).create();&#10;&#10;        btnApply.setOnClickListener(v -&gt; {&#10;            selectedCategory = spinnerCategory.getSelectedItem().toString();&#10;            selectedLevel = spinnerLevel.getSelectedItem().toString();&#10;            filterCourses();&#10;            updateFilterButtonText();&#10;            dialog.dismiss();&#10;            Toast.makeText(this, &quot;Đã áp dụng bộ lọc&quot;, Toast.LENGTH_SHORT).show();&#10;        });&#10;&#10;        btnReset.setOnClickListener(v -&gt; {&#10;            selectedCategory = &quot;Tất cả&quot;;&#10;            selectedLevel = &quot;Tất cả&quot;;&#10;            spinnerCategory.setSelection(0);&#10;            spinnerLevel.setSelection(0);&#10;            filterCourses();&#10;            updateFilterButtonText();&#10;            dialog.dismiss();&#10;            Toast.makeText(this, &quot;Đã reset bộ lọc&quot;, Toast.LENGTH_SHORT).show();&#10;        });&#10;&#10;        dialog.show();&#10;    }&#10;&#10;    private int getCategoryPosition(String category) {&#10;        String[] categories = {&quot;Tất cả&quot;, &quot;Ngữ pháp&quot;, &quot;Từ vựng&quot;, &quot;Phát âm&quot;, &quot;Nghe&quot;, &quot;Nói&quot;, &quot;Đọc&quot;, &quot;Viết&quot;};&#10;        for (int i = 0; i &lt; categories.length; i++) {&#10;            if (categories[i].equals(category)) {&#10;                return i;&#10;            }&#10;        }&#10;        return 0;&#10;    }&#10;&#10;    private int getLevelPosition(String level) {&#10;        String[] levels = {&quot;Tất cả&quot;, &quot;Beginner&quot;, &quot;Intermediate&quot;, &quot;Advanced&quot;};&#10;        for (int i = 0; i &lt; levels.length; i++) {&#10;            if (levels[i].equals(level)) {&#10;                return i;&#10;            }&#10;        }&#10;        return 0;&#10;    }&#10;&#10;    private void updateFilterButtonText() {&#10;        boolean hasFilters = !selectedCategory.equals(&quot;Tất cả&quot;) || !selectedLevel.equals(&quot;Tất cả&quot;);&#10;        if (hasFilters) {&#10;            btnFilter.setText(&quot; Lọc (&quot; + getActiveFilterCount() + &quot;)&quot;);&#10;        } else {&#10;            btnFilter.setText(&quot; Lọc&quot;);&#10;        }&#10;    }&#10;&#10;    private int getActiveFilterCount() {&#10;        int count = 0;&#10;        if (!selectedCategory.equals(&quot;Tất cả&quot;)) count++;&#10;        if (!selectedLevel.equals(&quot;Tất cả&quot;)) count++;&#10;        return count;&#10;    }&#10;&#10;    private void filterCourses() {&#10;        filteredCourseList.clear();&#10;&#10;        for (Course course : courseList) {&#10;            boolean matchesSearch = searchQuery.isEmpty() || &#10;                course.getTitle().toLowerCase().contains(searchQuery.toLowerCase()) ||&#10;                course.getDescription().toLowerCase().contains(searchQuery.toLowerCase());&#10;&#10;            boolean matchesCategory = selectedCategory.equals(&quot;Tất cả&quot;) || &#10;                course.getCategory().equals(selectedCategory);&#10;&#10;            boolean matchesLevel = selectedLevel.equals(&quot;Tất cả&quot;) || &#10;                course.getLevel().equals(selectedLevel);&#10;&#10;            if (matchesSearch &amp;&amp; matchesCategory &amp;&amp; matchesLevel) {&#10;                filteredCourseList.add(course);&#10;            }&#10;        }&#10;&#10;        // Update adapter with filtered list&#10;        courseAdapter.updateCourseList(filteredCourseList);&#10;        updateUI();&#10;    }&#10;&#10;    private void updateUI() {&#10;        if (filteredCourseList.isEmpty()) {&#10;            tvNoCourses.setVisibility(View.VISIBLE);&#10;            rvCourses.setVisibility(View.GONE);&#10;        } else {&#10;            tvNoCourses.setVisibility(View.GONE);&#10;            rvCourses.setVisibility(View.VISIBLE);&#10;        }&#10;&#10;        // Update course count&#10;        if (tvCourseCount != null) {&#10;            String countText = filteredCourseList.size() + &quot; khóa học&quot;;&#10;            if (!searchQuery.isEmpty() || !selectedCategory.equals(&quot;Tất cả&quot;) || !selectedLevel.equals(&quot;Tất cả&quot;)) {&#10;                countText += &quot; (đã lọc)&quot;;&#10;            }&#10;            tvCourseCount.setText(countText);&#10;        }&#10;    }&#10;&#10;    private void loadStatistics() {&#10;        if (mAuth.getCurrentUser() == null) return;&#10;&#10;        String currentUserId = mAuth.getCurrentUser().getUid();&#10;&#10;        // Load total students count&#10;        db.collection(&quot;enrollments&quot;)&#10;            .whereEqualTo(&quot;teacherId&quot;, currentUserId)&#10;            .get()&#10;            .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#10;                if (tvTotalStudents != null) {&#10;                    tvTotalStudents.setText(String.valueOf(queryDocumentSnapshots.size()));&#10;                }&#10;            });&#10;&#10;        // Set average rating (placeholder)&#10;        if (tvAvgRating != null) {&#10;            tvAvgRating.setText(&quot;4.8&quot;);&#10;        }&#10;    }&#10;&#10;    private void loadCourses() {&#10;        // Check if user is authenticated&#10;        if (mAuth.getCurrentUser() == null) {&#10;            Toast.makeText(this, &quot;Bạn cần đăng nhập để xem khóa học&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        String currentUserId = mAuth.getCurrentUser().getUid();&#10;&#10;        db.collection(&quot;courses&quot;)&#10;            .whereEqualTo(&quot;teacherId&quot;, currentUserId)&#10;            .get()&#10;            .addOnCompleteListener(task -&gt; {&#10;                if (task.isSuccessful()) {&#10;                    courseList.clear();&#10;&#10;                    for (QueryDocumentSnapshot document : task.getResult()) {&#10;                        Course course = document.toObject(Course.class);&#10;                        course.setId(document.getId());&#10;                        courseList.add(course);&#10;                    }&#10;&#10;                    // Update total courses count&#10;                    if (tvTotalCourses != null) {&#10;                        tvTotalCourses.setText(String.valueOf(courseList.size()));&#10;                    }&#10;&#10;                    // Apply current filters&#10;                    filterCourses();&#10;                    &#10;                } else {&#10;                    android.util.Log.e(&quot;CourseManagement&quot;, &quot;Error loading courses&quot;, task.getException());&#10;                    Toast.makeText(this, &quot;Lỗi khi tải khóa học: &quot; + task.getException().getMessage(), Toast.LENGTH_SHORT).show();&#10;                }&#10;            });&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        fabAddCourse.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(this, CreateCourseActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        // Add click listener for create first course button in empty state&#10;        MaterialButton btnCreateFirstCourse = findViewById(R.id.btn_create_first_course);&#10;        if (btnCreateFirstCourse != null) {&#10;            btnCreateFirstCourse.setOnClickListener(v -&gt; {&#10;                Intent intent = new Intent(this, CreateCourseActivity.class);&#10;                startActivity(intent);&#10;            });&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public boolean onCreateOptionsMenu(Menu menu) {&#10;        getMenuInflater().inflate(R.menu.course_management_menu, menu);&#10;        return true;&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(@NonNull MenuItem item) {&#10;        int itemId = item.getItemId();&#10;&#10;        if (itemId == android.R.id.home) {&#10;            finish();&#10;            return true;&#10;        } else if (itemId == R.id.action_refresh) {&#10;            loadCourses();&#10;            return true;&#10;        } else if (itemId == R.id.action_search) {&#10;            // Focus on search input&#10;            if (etSearch != null) {&#10;                etSearch.requestFocus();&#10;            }&#10;            return true;&#10;        }&#10;&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        loadCourses(); // Refresh data when returning to this activity&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/SelectCourseForQuizActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/SelectCourseForQuizActivity.java" />
              <option name="updatedContent" value="package com.vantinh.tienganh;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.widget.Toast;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;import com.google.firebase.firestore.QueryDocumentSnapshot;&#10;import com.vantinh.tienganh.adapters.CourseSelectAdapter;&#10;import com.vantinh.tienganh.models.Course;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class SelectCourseForQuizActivity extends AppCompatActivity implements CourseSelectAdapter.OnCourseSelectListener {&#10;&#10;    private RecyclerView rvCourses;&#10;    private CourseSelectAdapter courseAdapter;&#10;    private List&lt;Course&gt; courseList;&#10;    private FirebaseFirestore db;&#10;    private FirebaseAuth mAuth;&#10;    private Toolbar toolbar;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_select_course_for_quiz);&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        initFirebase();&#10;        setupRecyclerView();&#10;        loadCourses();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        rvCourses = findViewById(R.id.rv_courses);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setTitle(&quot;Chọn khóa học&quot;);&#10;            getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#10;        }&#10;    }&#10;&#10;    private void initFirebase() {&#10;        db = FirebaseFirestore.getInstance();&#10;        mAuth = FirebaseAuth.getInstance();&#10;    }&#10;&#10;    private void setupRecyclerView() {&#10;        courseList = new ArrayList&lt;&gt;();&#10;        courseAdapter = new CourseSelectAdapter(courseList, this);&#10;        rvCourses.setLayoutManager(new LinearLayoutManager(this));&#10;        rvCourses.setAdapter(courseAdapter);&#10;    }&#10;&#10;    private void loadCourses() {&#10;        String teacherId = mAuth.getCurrentUser().getUid();&#10;        &#10;        db.collection(&quot;courses&quot;)&#10;                .whereEqualTo(&quot;teacherId&quot;, teacherId)&#10;                .get()&#10;                .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#10;                    courseList.clear();&#10;                    for (QueryDocumentSnapshot document : queryDocumentSnapshots) {&#10;                        Course course = document.toObject(Course.class);&#10;                        course.setId(document.getId());&#10;                        courseList.add(course);&#10;                    }&#10;                    courseAdapter.notifyDataSetChanged();&#10;&#10;                    if (courseList.isEmpty()) {&#10;                        Toast.makeText(this, &quot;Bạn chưa có khóa học nào. Vui lòng tạo khóa học trước.&quot;, Toast.LENGTH_LONG).show();&#10;                        finish();&#10;                    }&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    Toast.makeText(this, &quot;Lỗi khi tải danh sách khóa học&quot;, Toast.LENGTH_SHORT).show();&#10;                });&#10;    }&#10;&#10;    @Override&#10;    public void onCourseSelected(Course course) {&#10;        Intent intent = new Intent(this, CreateQuizActivity.class);&#10;        intent.putExtra(&quot;courseId&quot;, course.getId());&#10;        intent.putExtra(&quot;courseName&quot;, course.getCourseName());&#10;        startActivity(intent);&#10;    }&#10;&#10;    @Override&#10;    public boolean onSupportNavigateUp() {&#10;        onBackPressed();&#10;        return true;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/StudentCourseDetailActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/StudentCourseDetailActivity.java" />
              <option name="originalContent" value="package com.vantinh.tienganh;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.MenuItem;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.ProgressBar;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;&#10;public class StudentCourseDetailActivity extends AppCompatActivity {&#10;&#10;    private TextView tvCourseTitle, tvCourseDescription, tvCourseCategory, tvCourseLevel;&#10;    private TextView tvCourseDuration, tvTotalLessons, tvCompletedLessons;&#10;    private TextView tvEnrollmentDate, tvProgressPercentage;&#10;    private ProgressBar progressBarCompletion;&#10;    private Button btnStartLearning, btnViewLessons, btnViewProgress;&#10;    private Toolbar toolbar;&#10;&#10;    private FirebaseAuth mAuth;&#10;    private FirebaseFirestore db;&#10;    private String courseId, courseTitle, courseCategory, enrollmentId;&#10;    private Course currentCourse;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_student_course_detail);&#10;&#10;        // Get course info from intent&#10;        courseId = getIntent().getStringExtra(&quot;courseId&quot;);&#10;        courseTitle = getIntent().getStringExtra(&quot;courseTitle&quot;);&#10;        courseCategory = getIntent().getStringExtra(&quot;courseCategory&quot;);&#10;        enrollmentId = getIntent().getStringExtra(&quot;enrollmentId&quot;);&#10;&#10;        if (courseId == null) {&#10;            Toast.makeText(this, &quot;Lỗi: Không tìm thấy thông tin khóa học&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        mAuth = FirebaseAuth.getInstance();&#10;        db = FirebaseFirestore.getInstance();&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        setupClickListeners();&#10;        loadCourseData();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        tvCourseTitle = findViewById(R.id.tv_course_title);&#10;        tvCourseDescription = findViewById(R.id.tv_course_description);&#10;        tvCourseCategory = findViewById(R.id.tv_course_category);&#10;        tvCourseLevel = findViewById(R.id.tv_course_level);&#10;        tvCourseDuration = findViewById(R.id.tv_course_duration);&#10;        tvTotalLessons = findViewById(R.id.tv_total_lessons);&#10;        tvCompletedLessons = findViewById(R.id.tv_completed_lessons);&#10;        tvEnrollmentDate = findViewById(R.id.tv_enrollment_date);&#10;        tvProgressPercentage = findViewById(R.id.tv_progress_percentage);&#10;        progressBarCompletion = findViewById(R.id.progress_bar_completion);&#10;        btnStartLearning = findViewById(R.id.btn_start_learning);&#10;        btnViewLessons = findViewById(R.id.btn_view_lessons);&#10;        btnViewProgress = findViewById(R.id.btn_view_progress);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setTitle(&quot;Chi tiết khóa học&quot;);&#10;            getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#10;        }&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnStartLearning.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(this, StudentCourseLessonsActivity.class);&#10;            intent.putExtra(&quot;courseId&quot;, courseId);&#10;            intent.putExtra(&quot;courseTitle&quot;, courseTitle);&#10;            intent.putExtra(&quot;courseCategory&quot;, courseCategory);&#10;            startActivity(intent);&#10;        });&#10;&#10;        btnViewLessons.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(this, StudentCourseLessonsActivity.class);&#10;            intent.putExtra(&quot;courseId&quot;, courseId);&#10;            intent.putExtra(&quot;courseTitle&quot;, courseTitle);&#10;            intent.putExtra(&quot;courseCategory&quot;, courseCategory);&#10;            startActivity(intent);&#10;        });&#10;&#10;        btnViewProgress.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(this, StudentProgressDetailActivity.class);&#10;            intent.putExtra(&quot;courseId&quot;, courseId);&#10;            intent.putExtra(&quot;courseTitle&quot;, courseTitle);&#10;            startActivity(intent);&#10;        });&#10;    }&#10;&#10;    private void loadCourseData() {&#10;        db.collection(&quot;courses&quot;).document(courseId)&#10;            .get()&#10;            .addOnSuccessListener(documentSnapshot -&gt; {&#10;                if (documentSnapshot.exists()) {&#10;                    currentCourse = documentSnapshot.toObject(Course.class);&#10;                    if (currentCourse != null) {&#10;                        currentCourse.setId(documentSnapshot.getId());&#10;                        displayCourseInfo();&#10;                        loadProgressData();&#10;                    }&#10;                } else {&#10;                    Toast.makeText(this, &quot;Không tìm thấy khóa học&quot;, Toast.LENGTH_SHORT).show();&#10;                    finish();&#10;                }&#10;            })&#10;            .addOnFailureListener(e -&gt; {&#10;                android.util.Log.e(&quot;StudentCourseDetail&quot;, &quot;Error loading course&quot;, e);&#10;                Toast.makeText(this, &quot;Lỗi tải khóa học: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;            });&#10;    }&#10;&#10;    private void displayCourseInfo() {&#10;        tvCourseTitle.setText(currentCourse.getTitle());&#10;        tvCourseDescription.setText(currentCourse.getDescription());&#10;        tvCourseCategory.setText(currentCourse.getCategory());&#10;        tvCourseLevel.setText(currentCourse.getLevel());&#10;        tvCourseDuration.setText(currentCourse.getDuration() + &quot; giờ&quot;);&#10;    }&#10;&#10;    private void loadProgressData() {&#10;        // Load lesson count&#10;        db.collection(&quot;lessons&quot;)&#10;            .whereEqualTo(&quot;courseId&quot;, courseId)&#10;            .whereEqualTo(&quot;isPublished&quot;, true)&#10;            .get()&#10;            .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#10;                int totalLessons = queryDocumentSnapshots.size();&#10;                tvTotalLessons.setText(&quot;Tổng số bài: &quot; + totalLessons);&#10;&#10;&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD&#10;=======&#10;                // TODO: Load completed lessons count&#10;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 542cd6292b68990ee1f3d7aca232549a251d4232&#10;                int completedLessons = 0; // Placeholder&#10;                tvCompletedLessons.setText(&quot;Đã học: &quot; + completedLessons);&#10;&#10;                // Calculate progress&#10;                int progress = totalLessons &gt; 0 ? (completedLessons * 100) / totalLessons : 0;&#10;                progressBarCompletion.setProgress(progress);&#10;                tvProgressPercentage.setText(progress + &quot;% hoàn thành&quot;);&#10;            })&#10;            .addOnFailureListener(e -&gt; {&#10;                android.util.Log.e(&quot;StudentCourseDetail&quot;, &quot;Error loading lessons&quot;, e);&#10;                tvTotalLessons.setText(&quot;Tổng số bài: N/A&quot;);&#10;                tvCompletedLessons.setText(&quot;Đã học: N/A&quot;);&#10;            });&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(@NonNull MenuItem item) {&#10;        if (item.getItemId() == android.R.id.home) {&#10;            finish();&#10;            return true;&#10;        }&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.vantinh.tienganh;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.MenuItem;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.ProgressBar;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;&#10;public class StudentCourseDetailActivity extends AppCompatActivity {&#10;&#10;    private TextView tvCourseTitle, tvCourseDescription, tvCourseCategory, tvCourseLevel;&#10;    private TextView tvCourseDuration, tvTotalLessons, tvCompletedLessons;&#10;    private TextView tvEnrollmentDate, tvProgressPercentage;&#10;    private ProgressBar progressBarCompletion;&#10;    private Button btnStartLearning, btnViewLessons, btnViewProgress;&#10;    private Toolbar toolbar;&#10;&#10;    private FirebaseAuth mAuth;&#10;    private FirebaseFirestore db;&#10;    private String courseId, courseTitle, courseCategory, enrollmentId;&#10;    private Course currentCourse;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_student_course_detail);&#10;&#10;        // Get course info from intent&#10;        courseId = getIntent().getStringExtra(&quot;courseId&quot;);&#10;        courseTitle = getIntent().getStringExtra(&quot;courseTitle&quot;);&#10;        courseCategory = getIntent().getStringExtra(&quot;courseCategory&quot;);&#10;        enrollmentId = getIntent().getStringExtra(&quot;enrollmentId&quot;);&#10;&#10;        if (courseId == null) {&#10;            Toast.makeText(this, &quot;Lỗi: Không tìm thấy thông tin khóa học&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        mAuth = FirebaseAuth.getInstance();&#10;        db = FirebaseFirestore.getInstance();&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        setupClickListeners();&#10;        loadCourseData();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        tvCourseTitle = findViewById(R.id.tv_course_title);&#10;        tvCourseDescription = findViewById(R.id.tv_course_description);&#10;        tvCourseCategory = findViewById(R.id.tv_course_category);&#10;        tvCourseLevel = findViewById(R.id.tv_course_level);&#10;        tvCourseDuration = findViewById(R.id.tv_course_duration);&#10;        tvTotalLessons = findViewById(R.id.tv_total_lessons);&#10;        tvCompletedLessons = findViewById(R.id.tv_completed_lessons);&#10;        tvEnrollmentDate = findViewById(R.id.tv_enrollment_date);&#10;        tvProgressPercentage = findViewById(R.id.tv_progress_percentage);&#10;        progressBarCompletion = findViewById(R.id.progress_bar_completion);&#10;        btnStartLearning = findViewById(R.id.btn_start_learning);&#10;        btnViewLessons = findViewById(R.id.btn_view_lessons);&#10;        btnViewProgress = findViewById(R.id.btn_view_progress);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setTitle(&quot;Chi tiết khóa học&quot;);&#10;            getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#10;        }&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnStartLearning.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(this, StudentCourseLessonsActivity.class);&#10;            intent.putExtra(&quot;courseId&quot;, courseId);&#10;            intent.putExtra(&quot;courseTitle&quot;, courseTitle);&#10;            intent.putExtra(&quot;courseCategory&quot;, courseCategory);&#10;            startActivity(intent);&#10;        });&#10;&#10;        btnViewLessons.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(this, StudentCourseLessonsActivity.class);&#10;            intent.putExtra(&quot;courseId&quot;, courseId);&#10;            intent.putExtra(&quot;courseTitle&quot;, courseTitle);&#10;            intent.putExtra(&quot;courseCategory&quot;, courseCategory);&#10;            startActivity(intent);&#10;        });&#10;&#10;        btnViewProgress.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(this, StudentProgressDetailActivity.class);&#10;            intent.putExtra(&quot;courseId&quot;, courseId);&#10;            intent.putExtra(&quot;courseTitle&quot;, courseTitle);&#10;            startActivity(intent);&#10;        });&#10;    }&#10;&#10;    private void loadCourseData() {&#10;        db.collection(&quot;courses&quot;).document(courseId)&#10;            .get()&#10;            .addOnSuccessListener(documentSnapshot -&gt; {&#10;                if (documentSnapshot.exists()) {&#10;                    currentCourse = documentSnapshot.toObject(Course.class);&#10;                    if (currentCourse != null) {&#10;                        currentCourse.setId(documentSnapshot.getId());&#10;                        displayCourseInfo();&#10;                        loadProgressData();&#10;                    }&#10;                } else {&#10;                    Toast.makeText(this, &quot;Không tìm thấy khóa học&quot;, Toast.LENGTH_SHORT).show();&#10;                    finish();&#10;                }&#10;            })&#10;            .addOnFailureListener(e -&gt; {&#10;                android.util.Log.e(&quot;StudentCourseDetail&quot;, &quot;Error loading course&quot;, e);&#10;                Toast.makeText(this, &quot;Lỗi tải khóa học: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;            });&#10;    }&#10;&#10;    private void displayCourseInfo() {&#10;        tvCourseTitle.setText(currentCourse.getTitle());&#10;        tvCourseDescription.setText(currentCourse.getDescription());&#10;        tvCourseCategory.setText(currentCourse.getCategory());&#10;        tvCourseLevel.setText(currentCourse.getLevel());&#10;        tvCourseDuration.setText(currentCourse.getDuration() + &quot; giờ&quot;);&#10;    }&#10;&#10;    private void loadProgressData() {&#10;        // Load lesson count&#10;        db.collection(&quot;lessons&quot;)&#10;            .whereEqualTo(&quot;courseId&quot;, courseId)&#10;            .whereEqualTo(&quot;isPublished&quot;, true)&#10;            .get()&#10;            .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#10;                int totalLessons = queryDocumentSnapshots.size();&#10;                tvTotalLessons.setText(&quot;Tổng số bài: &quot; + totalLessons);&#10;&#10;                // TODO: Load completed lessons count&#10;                int completedLessons = 0; // Placeholder&#10;                tvCompletedLessons.setText(&quot;Đã học: &quot; + completedLessons);&#10;&#10;                // Calculate progress&#10;                int progress = totalLessons &gt; 0 ? (completedLessons * 100) / totalLessons : 0;&#10;                progressBarCompletion.setProgress(progress);&#10;                tvProgressPercentage.setText(progress + &quot;% hoàn thành&quot;);&#10;            })&#10;            .addOnFailureListener(e -&gt; {&#10;                android.util.Log.e(&quot;StudentCourseDetail&quot;, &quot;Error loading lessons&quot;, e);&#10;                tvTotalLessons.setText(&quot;Tổng số bài: N/A&quot;);&#10;                tvCompletedLessons.setText(&quot;Đã học: N/A&quot;);&#10;            });&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(@NonNull MenuItem item) {&#10;        if (item.getItemId() == android.R.id.home) {&#10;            finish();&#10;            return true;&#10;        }&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/StudentLessonLearningActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/StudentLessonLearningActivity.java" />
              <option name="originalContent" value="package com.vantinh.tienganh;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.MenuItem;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.LinearLayout;&#10;import android.widget.ScrollView;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;&#10;public class StudentLessonLearningActivity extends AppCompatActivity {&#10;&#10;    private ScrollView scrollViewContent;&#10;    private TextView tvLessonTitle, tvLessonType, tvEstimatedTime;&#10;    private TextView tvLessonContent;&#10;    private LinearLayout layoutGrammarContent;&#10;    private TextView tvGrammarRule, tvGrammarStructure;&#10;    private LinearLayout layoutExamples, layoutUsage, layoutNotes;&#10;    private Button btnMarkCompleted, btnNextLesson, btnPreviousLesson;&#10;    private Toolbar toolbar;&#10;&#10;    private FirebaseAuth mAuth;&#10;    private FirebaseFirestore db;&#10;    private String lessonId, lessonTitle, courseId, courseTitle, courseCategory;&#10;    private Lesson currentLesson;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_student_lesson_learning);&#10;&#10;        // Get lesson info from intent&#10;        lessonId = getIntent().getStringExtra(&quot;lessonId&quot;);&#10;        lessonTitle = getIntent().getStringExtra(&quot;lessonTitle&quot;);&#10;        courseId = getIntent().getStringExtra(&quot;courseId&quot;);&#10;        courseTitle = getIntent().getStringExtra(&quot;courseTitle&quot;);&#10;        courseCategory = getIntent().getStringExtra(&quot;courseCategory&quot;);&#10;&#10;        if (lessonId == null) {&#10;            Toast.makeText(this, &quot;Lỗi: Không tìm thấy thông tin bài học&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        mAuth = FirebaseAuth.getInstance();&#10;        db = FirebaseFirestore.getInstance();&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        setupClickListeners();&#10;        loadLessonData();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        scrollViewContent = findViewById(R.id.scroll_view_content);&#10;        tvLessonTitle = findViewById(R.id.tv_lesson_title);&#10;        tvLessonType = findViewById(R.id.tv_lesson_type);&#10;        tvEstimatedTime = findViewById(R.id.tv_estimated_time);&#10;        tvLessonContent = findViewById(R.id.tv_lesson_content);&#10;&#10;        // Grammar-specific views&#10;        layoutGrammarContent = findViewById(R.id.layout_grammar_content);&#10;        tvGrammarRule = findViewById(R.id.tv_grammar_rule);&#10;        tvGrammarStructure = findViewById(R.id.tv_grammar_structure);&#10;        layoutExamples = findViewById(R.id.layout_examples);&#10;        layoutUsage = findViewById(R.id.layout_usage);&#10;        layoutNotes = findViewById(R.id.layout_notes);&#10;&#10;        // Action buttons&#10;        btnMarkCompleted = findViewById(R.id.btn_mark_completed);&#10;        btnNextLesson = findViewById(R.id.btn_next_lesson);&#10;        btnPreviousLesson = findViewById(R.id.btn_previous_lesson);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setTitle(&quot;Học bài&quot;);&#10;            getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#10;        }&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnMarkCompleted.setOnClickListener(v -&gt; markLessonAsCompleted());&#10;        btnNextLesson.setOnClickListener(v -&gt; navigateToNextLesson());&#10;        btnPreviousLesson.setOnClickListener(v -&gt; navigateToPreviousLesson());&#10;    }&#10;&#10;    private void loadLessonData() {&#10;        db.collection(&quot;lessons&quot;).document(lessonId)&#10;            .get()&#10;            .addOnSuccessListener(documentSnapshot -&gt; {&#10;                if (documentSnapshot.exists()) {&#10;                    currentLesson = documentSnapshot.toObject(Lesson.class);&#10;                    if (currentLesson != null) {&#10;                        currentLesson.setId(documentSnapshot.getId());&#10;                        displayLessonContent();&#10;                    }&#10;                } else {&#10;                    Toast.makeText(this, &quot;Không tìm thấy bài học&quot;, Toast.LENGTH_SHORT).show();&#10;                    finish();&#10;                }&#10;            })&#10;            .addOnFailureListener(e -&gt; {&#10;                android.util.Log.e(&quot;StudentLessonLearning&quot;, &quot;Error loading lesson&quot;, e);&#10;                Toast.makeText(this, &quot;Lỗi tải bài học: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;            });&#10;    }&#10;&#10;    private void displayLessonContent() {&#10;        // Display basic lesson info&#10;        tvLessonTitle.setText(currentLesson.getTitle());&#10;        tvLessonType.setText(currentLesson.getTypeDisplayName());&#10;        tvEstimatedTime.setText(currentLesson.getEstimatedTimeString());&#10;        tvLessonContent.setText(currentLesson.getContent());&#10;&#10;        // Display Grammar-specific content if applicable&#10;        if (&quot;Grammar&quot;.equalsIgnoreCase(currentLesson.getCategory())) {&#10;            layoutGrammarContent.setVisibility(View.VISIBLE);&#10;            displayGrammarContent();&#10;        } else {&#10;            layoutGrammarContent.setVisibility(View.GONE);&#10;        }&#10;&#10;        // Set up lesson navigation&#10;        setupLessonNavigation();&#10;    }&#10;&#10;    private void displayGrammarContent() {&#10;        // Display grammar rule&#10;        if (currentLesson.getGrammarRule() != null &amp;&amp; !currentLesson.getGrammarRule().isEmpty()) {&#10;            tvGrammarRule.setText(currentLesson.getGrammarRule());&#10;            tvGrammarRule.setVisibility(View.VISIBLE);&#10;        } else {&#10;            tvGrammarRule.setVisibility(View.GONE);&#10;        }&#10;&#10;        // Display grammar structure&#10;        if (currentLesson.getGrammarStructure() != null &amp;&amp; !currentLesson.getGrammarStructure().isEmpty()) {&#10;            tvGrammarStructure.setText(currentLesson.getGrammarStructure());&#10;            tvGrammarStructure.setVisibility(View.VISIBLE);&#10;        } else {&#10;            tvGrammarStructure.setVisibility(View.GONE);&#10;        }&#10;&#10;        // Display examples&#10;        displayGrammarList(layoutExamples, currentLesson.getGrammarExamples(), &quot; Ví dụ:&quot;);&#10;&#10;        // Display usage notes&#10;        displayGrammarList(layoutUsage, currentLesson.getGrammarUsage(), &quot; Cách sử dụng:&quot;);&#10;&#10;        // Display notes&#10;        displayGrammarList(layoutNotes, currentLesson.getGrammarNotes(), &quot; Ghi chú:&quot;);&#10;    }&#10;&#10;    private void displayGrammarList(LinearLayout container, java.util.List&lt;String&gt; items, String title) {&#10;        container.removeAllViews();&#10;&#10;        if (items != null &amp;&amp; !items.isEmpty()) {&#10;            // Add title&#10;            TextView titleView = new TextView(this);&#10;            titleView.setText(title);&#10;            titleView.setTextSize(16);&#10;            titleView.setTextColor(getColor(android.R.color.holo_blue_dark));&#10;            titleView.setPadding(0, 16, 0, 8);&#10;            container.addView(titleView);&#10;&#10;            // Add items&#10;            for (int i = 0; i &lt; items.size(); i++) {&#10;                TextView itemView = new TextView(this);&#10;                itemView.setText((i + 1) + &quot;. &quot; + items.get(i));&#10;                itemView.setTextSize(14);&#10;                itemView.setPadding(16, 4, 0, 4);&#10;                container.addView(itemView);&#10;            }&#10;&#10;            container.setVisibility(View.VISIBLE);&#10;        } else {&#10;            container.setVisibility(View.GONE);&#10;        }&#10;    }&#10;&#10;    private void setupLessonNavigation() {&#10;&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD&#10;=======&#10;        // TODO: Implement lesson navigation logic&#10;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 542cd6292b68990ee1f3d7aca232549a251d4232&#10;        // For now, disable navigation buttons&#10;        btnNextLesson.setEnabled(false);&#10;        btnPreviousLesson.setEnabled(false);&#10;    }&#10;&#10;    private void markLessonAsCompleted() {&#10;        if (mAuth.getCurrentUser() == null) {&#10;            Toast.makeText(this, &quot;Vui lòng đăng nhập&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD&#10;=======&#10;        // TODO: Implement lesson completion tracking&#10;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 542cd6292b68990ee1f3d7aca232549a251d4232&#10;        Toast.makeText(this, &quot;Đã đánh dấu hoàn thành bài học!&quot;, Toast.LENGTH_SHORT).show();&#10;        btnMarkCompleted.setText(&quot;Đã hoàn thành&quot;);&#10;        btnMarkCompleted.setEnabled(false);&#10;    }&#10;&#10;    private void navigateToNextLesson() {&#10;        Toast.makeText(this, &quot;Chuyển đến bài học tiếp theo&quot;, Toast.LENGTH_SHORT).show();&#10;    }&#10;&#10;    private void navigateToPreviousLesson() {&#10;        Toast.makeText(this, &quot;Quay lại bài học trước&quot;, Toast.LENGTH_SHORT).show();&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(@NonNull MenuItem item) {&#10;        if (item.getItemId() == android.R.id.home) {&#10;            finish();&#10;            return true;&#10;        }&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.vantinh.tienganh;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.MenuItem;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.LinearLayout;&#10;import android.widget.ScrollView;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;&#10;public class StudentLessonLearningActivity extends AppCompatActivity {&#10;&#10;    private ScrollView scrollViewContent;&#10;    private TextView tvLessonTitle, tvLessonType, tvEstimatedTime;&#10;    private TextView tvLessonContent;&#10;    private LinearLayout layoutGrammarContent;&#10;    private TextView tvGrammarRule, tvGrammarStructure;&#10;    private LinearLayout layoutExamples, layoutUsage, layoutNotes;&#10;    private Button btnMarkCompleted, btnNextLesson, btnPreviousLesson;&#10;    private Toolbar toolbar;&#10;&#10;    private FirebaseAuth mAuth;&#10;    private FirebaseFirestore db;&#10;    private String lessonId, lessonTitle, courseId, courseTitle, courseCategory;&#10;    private Lesson currentLesson;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_student_lesson_learning);&#10;&#10;        // Get lesson info from intent&#10;        lessonId = getIntent().getStringExtra(&quot;lessonId&quot;);&#10;        lessonTitle = getIntent().getStringExtra(&quot;lessonTitle&quot;);&#10;        courseId = getIntent().getStringExtra(&quot;courseId&quot;);&#10;        courseTitle = getIntent().getStringExtra(&quot;courseTitle&quot;);&#10;        courseCategory = getIntent().getStringExtra(&quot;courseCategory&quot;);&#10;&#10;        if (lessonId == null) {&#10;            Toast.makeText(this, &quot;Lỗi: Không tìm thấy thông tin bài học&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        mAuth = FirebaseAuth.getInstance();&#10;        db = FirebaseFirestore.getInstance();&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        setupClickListeners();&#10;        loadLessonData();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        scrollViewContent = findViewById(R.id.scroll_view_content);&#10;        tvLessonTitle = findViewById(R.id.tv_lesson_title);&#10;        tvLessonType = findViewById(R.id.tv_lesson_type);&#10;        tvEstimatedTime = findViewById(R.id.tv_estimated_time);&#10;        tvLessonContent = findViewById(R.id.tv_lesson_content);&#10;&#10;        // Grammar-specific views&#10;        layoutGrammarContent = findViewById(R.id.layout_grammar_content);&#10;        tvGrammarRule = findViewById(R.id.tv_grammar_rule);&#10;        tvGrammarStructure = findViewById(R.id.tv_grammar_structure);&#10;        layoutExamples = findViewById(R.id.layout_examples);&#10;        layoutUsage = findViewById(R.id.layout_usage);&#10;        layoutNotes = findViewById(R.id.layout_notes);&#10;&#10;        // Action buttons&#10;        btnMarkCompleted = findViewById(R.id.btn_mark_completed);&#10;        btnNextLesson = findViewById(R.id.btn_next_lesson);&#10;        btnPreviousLesson = findViewById(R.id.btn_previous_lesson);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setTitle(&quot;Học bài&quot;);&#10;            getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#10;        }&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnMarkCompleted.setOnClickListener(v -&gt; markLessonAsCompleted());&#10;        btnNextLesson.setOnClickListener(v -&gt; navigateToNextLesson());&#10;        btnPreviousLesson.setOnClickListener(v -&gt; navigateToPreviousLesson());&#10;    }&#10;&#10;    private void loadLessonData() {&#10;        db.collection(&quot;lessons&quot;).document(lessonId)&#10;            .get()&#10;            .addOnSuccessListener(documentSnapshot -&gt; {&#10;                if (documentSnapshot.exists()) {&#10;                    currentLesson = documentSnapshot.toObject(Lesson.class);&#10;                    if (currentLesson != null) {&#10;                        currentLesson.setId(documentSnapshot.getId());&#10;                        displayLessonContent();&#10;                    }&#10;                } else {&#10;                    Toast.makeText(this, &quot;Không tìm thấy bài học&quot;, Toast.LENGTH_SHORT).show();&#10;                    finish();&#10;                }&#10;            })&#10;            .addOnFailureListener(e -&gt; {&#10;                android.util.Log.e(&quot;StudentLessonLearning&quot;, &quot;Error loading lesson&quot;, e);&#10;                Toast.makeText(this, &quot;Lỗi tải bài học: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;            });&#10;    }&#10;&#10;    private void displayLessonContent() {&#10;        // Display basic lesson info&#10;        tvLessonTitle.setText(currentLesson.getTitle());&#10;        tvLessonType.setText(currentLesson.getTypeDisplayName());&#10;        tvEstimatedTime.setText(currentLesson.getEstimatedTimeString());&#10;        tvLessonContent.setText(currentLesson.getContent());&#10;&#10;        // Display Grammar-specific content if applicable&#10;        if (&quot;Grammar&quot;.equalsIgnoreCase(currentLesson.getCategory())) {&#10;            layoutGrammarContent.setVisibility(View.VISIBLE);&#10;            displayGrammarContent();&#10;        } else {&#10;            layoutGrammarContent.setVisibility(View.GONE);&#10;        }&#10;&#10;        // Set up lesson navigation&#10;        setupLessonNavigation();&#10;    }&#10;&#10;    private void displayGrammarContent() {&#10;        // Display grammar rule&#10;        if (currentLesson.getGrammarRule() != null &amp;&amp; !currentLesson.getGrammarRule().isEmpty()) {&#10;            tvGrammarRule.setText(currentLesson.getGrammarRule());&#10;            tvGrammarRule.setVisibility(View.VISIBLE);&#10;        } else {&#10;            tvGrammarRule.setVisibility(View.GONE);&#10;        }&#10;&#10;        // Display grammar structure&#10;        if (currentLesson.getGrammarStructure() != null &amp;&amp; !currentLesson.getGrammarStructure().isEmpty()) {&#10;            tvGrammarStructure.setText(currentLesson.getGrammarStructure());&#10;            tvGrammarStructure.setVisibility(View.VISIBLE);&#10;        } else {&#10;            tvGrammarStructure.setVisibility(View.GONE);&#10;        }&#10;&#10;        // Display examples&#10;        displayGrammarList(layoutExamples, currentLesson.getGrammarExamples(), &quot; Ví dụ:&quot;);&#10;&#10;        // Display usage notes&#10;        displayGrammarList(layoutUsage, currentLesson.getGrammarUsage(), &quot; Cách sử dụng:&quot;);&#10;&#10;        // Display notes&#10;        displayGrammarList(layoutNotes, currentLesson.getGrammarNotes(), &quot; Ghi chú:&quot;);&#10;    }&#10;&#10;    private void displayGrammarList(LinearLayout container, java.util.List&lt;String&gt; items, String title) {&#10;        container.removeAllViews();&#10;&#10;        if (items != null &amp;&amp; !items.isEmpty()) {&#10;            // Add title&#10;            TextView titleView = new TextView(this);&#10;            titleView.setText(title);&#10;            titleView.setTextSize(16);&#10;            titleView.setTextColor(getColor(android.R.color.holo_blue_dark));&#10;            titleView.setPadding(0, 16, 0, 8);&#10;            container.addView(titleView);&#10;&#10;            // Add items&#10;            for (int i = 0; i &lt; items.size(); i++) {&#10;                TextView itemView = new TextView(this);&#10;                itemView.setText((i + 1) + &quot;. &quot; + items.get(i));&#10;                itemView.setTextSize(14);&#10;                itemView.setPadding(16, 4, 0, 4);&#10;                container.addView(itemView);&#10;            }&#10;&#10;            container.setVisibility(View.VISIBLE);&#10;        } else {&#10;            container.setVisibility(View.GONE);&#10;        }&#10;    }&#10;&#10;    private void setupLessonNavigation() {&#10;        // TODO: Implement lesson navigation logic&#10;        // For now, disable navigation buttons&#10;        btnNextLesson.setEnabled(false);&#10;        btnPreviousLesson.setEnabled(false);&#10;    }&#10;&#10;    private void markLessonAsCompleted() {&#10;        if (mAuth.getCurrentUser() == null) {&#10;            Toast.makeText(this, &quot;Vui lòng đăng nhập&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        // TODO: Implement lesson completion tracking&#10;        Toast.makeText(this, &quot;Đã đánh dấu hoàn thành bài học!&quot;, Toast.LENGTH_SHORT).show();&#10;        btnMarkCompleted.setText(&quot;Đã hoàn thành&quot;);&#10;        btnMarkCompleted.setEnabled(false);&#10;    }&#10;&#10;    private void navigateToNextLesson() {&#10;        Toast.makeText(this, &quot;Chuyển đến bài học tiếp theo&quot;, Toast.LENGTH_SHORT).show();&#10;    }&#10;&#10;    private void navigateToPreviousLesson() {&#10;        Toast.makeText(this, &quot;Quay lại bài học trước&quot;, Toast.LENGTH_SHORT).show();&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(@NonNull MenuItem item) {&#10;        if (item.getItemId() == android.R.id.home) {&#10;            finish();&#10;            return true;&#10;        }&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/StudentMyCoursesActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/StudentMyCoursesActivity.java" />
              <option name="originalContent" value="package com.vantinh.tienganh;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.MenuItem;&#10;import android.view.View;&#10;import android.widget.LinearLayout;&#10;import android.widget.Toast;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;import com.google.firebase.firestore.QueryDocumentSnapshot;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class StudentMyCoursesActivity extends AppCompatActivity implements StudentEnrolledCourseAdapter.OnCourseClickListener {&#10;&#10;    private RecyclerView rvMyCourses;&#10;    private LinearLayout layoutNoCourses;&#10;    private Toolbar toolbar;&#10;&#10;    private FirebaseAuth mAuth;&#10;    private FirebaseFirestore db;&#10;    private List&lt;EnrolledCourse&gt; enrolledCourseList;&#10;    private StudentEnrolledCourseAdapter courseAdapter;&#10;    private String currentStudentId;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_student_my_courses);&#10;&#10;        mAuth = FirebaseAuth.getInstance();&#10;        db = FirebaseFirestore.getInstance();&#10;        enrolledCourseList = new ArrayList&lt;&gt;();&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        setupRecyclerView();&#10;        getCurrentStudentId();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        rvMyCourses = findViewById(R.id.rv_my_courses);&#10;        layoutNoCourses = findViewById(R.id.layout_no_courses);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setTitle(&quot;Khóa học của tôi&quot;);&#10;            getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#10;        }&#10;    }&#10;&#10;    private void setupRecyclerView() {&#10;        courseAdapter = new StudentEnrolledCourseAdapter(enrolledCourseList, this);&#10;        rvMyCourses.setLayoutManager(new LinearLayoutManager(this));&#10;        rvMyCourses.setAdapter(courseAdapter);&#10;    }&#10;&#10;    private void getCurrentStudentId() {&#10;        if (mAuth.getCurrentUser() == null) {&#10;            Toast.makeText(this, &quot;Vui lòng đăng nhập&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        String firebaseUid = mAuth.getCurrentUser().getUid();&#10;        &#10;        // Get student info từ users collection&#10;        db.collection(&quot;users&quot;).document(firebaseUid)&#10;                .get()&#10;                .addOnSuccessListener(documentSnapshot -&gt; {&#10;                    if (documentSnapshot.exists()) {&#10;                        String userRole = documentSnapshot.getString(&quot;role&quot;);&#10;                        currentStudentId = documentSnapshot.getString(&quot;id&quot;);&#10;&#10;                        if (!&quot;student&quot;.equals(userRole)) {&#10;                            Toast.makeText(this, &quot;Chỉ học viên mới có thể xem khóa học của mình&quot;, Toast.LENGTH_SHORT).show();&#10;                            finish();&#10;                            return;&#10;                        }&#10;&#10;                        if (currentStudentId != null) {&#10;                            loadEnrolledCourses();&#10;                        } else {&#10;                            Toast.makeText(this, &quot;Không tìm thấy thông tin học viên&quot;, Toast.LENGTH_SHORT).show();&#10;                            finish();&#10;                        }&#10;                    } else {&#10;                        Toast.makeText(this, &quot;Không tìm thấy thông tin người dùng&quot;, Toast.LENGTH_SHORT).show();&#10;                        finish();&#10;                    }&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    android.util.Log.e(&quot;StudentMyCourses&quot;, &quot;Error loading user info&quot;, e);&#10;                    Toast.makeText(this, &quot;Lỗi tải thông tin: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;                    finish();&#10;                });&#10;    }&#10;&#10;    private void loadEnrolledCourses() {&#10;        layoutNoCourses.setVisibility(View.VISIBLE);&#10;        rvMyCourses.setVisibility(View.GONE);&#10;&#10;        android.util.Log.d(&quot;StudentMyCourses&quot;, &quot;Loading enrolled courses for student: &quot; + currentStudentId);&#10;&#10;        // Load approved enrollments từ collection &quot;enrollments&quot;&#10;        db.collection(&quot;enrollments&quot;)&#10;                .whereEqualTo(&quot;studentId&quot;, currentStudentId)&#10;                .get()&#10;                .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#10;                    enrolledCourseList.clear();&#10;&#10;                    android.util.Log.d(&quot;StudentMyCourses&quot;, &quot;Found &quot; + queryDocumentSnapshots.size() + &quot; enrollments&quot;);&#10;&#10;                    if (queryDocumentSnapshots.isEmpty()) {&#10;                        showEmptyState();&#10;                        return;&#10;                    }&#10;&#10;                    // Với mỗi enrollment, load thông tin course tương ứng&#10;                    for (QueryDocumentSnapshot enrollmentDoc : queryDocumentSnapshots) {&#10;                        String courseId = enrollmentDoc.getString(&quot;courseId&quot;);&#10;                        String courseName = enrollmentDoc.getString(&quot;courseName&quot;);&#10;                        String enrollmentDate = enrollmentDoc.getTimestamp(&quot;enrollmentDate&quot;) != null ?&#10;                            enrollmentDoc.getTimestamp(&quot;enrollmentDate&quot;).toDate().toString() : &quot;&quot;;&#10;&#10;                        if (courseId != null) {&#10;                            loadCourseDetails(courseId, courseName, enrollmentDate, enrollmentDoc.getId());&#10;                        }&#10;                    }&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    android.util.Log.e(&quot;StudentMyCourses&quot;, &quot;Error loading enrollments&quot;, e);&#10;                    Toast.makeText(this, &quot;Lỗi tải khóa học: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;                    showEmptyState();&#10;                });&#10;    }&#10;&#10;    private void loadCourseDetails(String courseId, String courseName, String enrollmentDate, String enrollmentId) {&#10;        db.collection(&quot;courses&quot;).document(courseId)&#10;                .get()&#10;                .addOnSuccessListener(courseDoc -&gt; {&#10;                    if (courseDoc.exists()) {&#10;                        Course course = courseDoc.toObject(Course.class);&#10;                        if (course != null) {&#10;                            course.setId(courseDoc.getId());&#10;&#10;                            // Tạo EnrolledCourse object&#10;                            EnrolledCourse enrolledCourse = new EnrolledCourse();&#10;                            enrolledCourse.setCourse(course);&#10;                            enrolledCourse.setEnrollmentId(enrollmentId);&#10;                            enrolledCourse.setEnrollmentDate(enrollmentDate);&#10;&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD&#10;                            enrolledCourse.setProgress(0); //&#10;=======&#10;                            enrolledCourse.setProgress(0); // TODO: Calculate actual progress&#10;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 542cd6292b68990ee1f3d7aca232549a251d4232&#10;&#10;                            enrolledCourseList.add(enrolledCourse);&#10;&#10;                            // Update UI&#10;                            updateUI();&#10;                        }&#10;                    }&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    android.util.Log.e(&quot;StudentMyCourses&quot;, &quot;Error loading course details for: &quot; + courseId, e);&#10;                });&#10;    }&#10;&#10;    private void updateUI() {&#10;        if (enrolledCourseList.isEmpty()) {&#10;            showEmptyState();&#10;        } else {&#10;            layoutNoCourses.setVisibility(View.GONE);&#10;            rvMyCourses.setVisibility(View.VISIBLE);&#10;            courseAdapter.notifyDataSetChanged();&#10;&#10;            android.util.Log.d(&quot;StudentMyCourses&quot;, &quot;Showing &quot; + enrolledCourseList.size() + &quot; enrolled courses&quot;);&#10;        }&#10;    }&#10;&#10;    private void showEmptyState() {&#10;        layoutNoCourses.setVisibility(View.VISIBLE);&#10;        rvMyCourses.setVisibility(View.GONE);&#10;    }&#10;&#10;    @Override&#10;    public void onCourseClick(EnrolledCourse enrolledCourse) {&#10;        // Navigate to course learning activity&#10;        Intent intent = new Intent(this, StudentCourseDetailActivity.class);&#10;        intent.putExtra(&quot;courseId&quot;, enrolledCourse.getCourse().getId());&#10;        intent.putExtra(&quot;courseTitle&quot;, enrolledCourse.getCourse().getTitle());&#10;        intent.putExtra(&quot;courseCategory&quot;, enrolledCourse.getCourse().getCategory());&#10;        intent.putExtra(&quot;enrollmentId&quot;, enrolledCourse.getEnrollmentId());&#10;        startActivity(intent);&#10;    }&#10;&#10;    @Override&#10;    public void onContinueLearning(EnrolledCourse enrolledCourse) {&#10;        // Navigate to lessons list&#10;        Intent intent = new Intent(this, StudentCourseLessonsActivity.class);&#10;        intent.putExtra(&quot;courseId&quot;, enrolledCourse.getCourse().getId());&#10;        intent.putExtra(&quot;courseTitle&quot;, enrolledCourse.getCourse().getTitle());&#10;        intent.putExtra(&quot;courseCategory&quot;, enrolledCourse.getCourse().getCategory());&#10;        startActivity(intent);&#10;    }&#10;&#10;    @Override&#10;    public void onViewProgress(EnrolledCourse enrolledCourse) {&#10;        // Navigate to progress view&#10;        Intent intent = new Intent(this, StudentProgressDetailActivity.class);&#10;        intent.putExtra(&quot;courseId&quot;, enrolledCourse.getCourse().getId());&#10;        intent.putExtra(&quot;courseTitle&quot;, enrolledCourse.getCourse().getTitle());&#10;        startActivity(intent);&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        if (currentStudentId != null) {&#10;            loadEnrolledCourses(); // Reload when returning to this activity&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(@NonNull MenuItem item) {&#10;        if (item.getItemId() == android.R.id.home) {&#10;            finish();&#10;            return true;&#10;        }&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.vantinh.tienganh;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.MenuItem;&#10;import android.view.View;&#10;import android.widget.LinearLayout;&#10;import android.widget.Toast;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;import com.google.firebase.firestore.QueryDocumentSnapshot;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class StudentMyCoursesActivity extends AppCompatActivity implements StudentEnrolledCourseAdapter.OnCourseClickListener {&#10;&#10;    private RecyclerView rvMyCourses;&#10;    private LinearLayout layoutNoCourses;&#10;    private Toolbar toolbar;&#10;&#10;    private FirebaseAuth mAuth;&#10;    private FirebaseFirestore db;&#10;    private List&lt;EnrolledCourse&gt; enrolledCourseList;&#10;    private StudentEnrolledCourseAdapter courseAdapter;&#10;    private String currentStudentId;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_student_my_courses);&#10;&#10;        mAuth = FirebaseAuth.getInstance();&#10;        db = FirebaseFirestore.getInstance();&#10;        enrolledCourseList = new ArrayList&lt;&gt;();&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        setupRecyclerView();&#10;        getCurrentStudentId();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        rvMyCourses = findViewById(R.id.rv_my_courses);&#10;        layoutNoCourses = findViewById(R.id.layout_no_courses);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setTitle(&quot;Khóa học của tôi&quot;);&#10;            getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#10;        }&#10;    }&#10;&#10;    private void setupRecyclerView() {&#10;        courseAdapter = new StudentEnrolledCourseAdapter(enrolledCourseList, this);&#10;        rvMyCourses.setLayoutManager(new LinearLayoutManager(this));&#10;        rvMyCourses.setAdapter(courseAdapter);&#10;    }&#10;&#10;    private void getCurrentStudentId() {&#10;        if (mAuth.getCurrentUser() == null) {&#10;            Toast.makeText(this, &quot;Vui lòng đăng nhập&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;&#10;        String firebaseUid = mAuth.getCurrentUser().getUid();&#10;        &#10;        // Get student info từ users collection&#10;        db.collection(&quot;users&quot;).document(firebaseUid)&#10;                .get()&#10;                .addOnSuccessListener(documentSnapshot -&gt; {&#10;                    if (documentSnapshot.exists()) {&#10;                        String userRole = documentSnapshot.getString(&quot;role&quot;);&#10;                        currentStudentId = documentSnapshot.getString(&quot;id&quot;);&#10;&#10;                        if (!&quot;student&quot;.equals(userRole)) {&#10;                            Toast.makeText(this, &quot;Chỉ học viên mới có thể xem khóa học của mình&quot;, Toast.LENGTH_SHORT).show();&#10;                            finish();&#10;                            return;&#10;                        }&#10;&#10;                        if (currentStudentId != null) {&#10;                            loadEnrolledCourses();&#10;                        } else {&#10;                            Toast.makeText(this, &quot;Không tìm thấy thông tin học viên&quot;, Toast.LENGTH_SHORT).show();&#10;                            finish();&#10;                        }&#10;                    } else {&#10;                        Toast.makeText(this, &quot;Không tìm thấy thông tin người dùng&quot;, Toast.LENGTH_SHORT).show();&#10;                        finish();&#10;                    }&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    android.util.Log.e(&quot;StudentMyCourses&quot;, &quot;Error loading user info&quot;, e);&#10;                    Toast.makeText(this, &quot;Lỗi tải thông tin: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;                    finish();&#10;                });&#10;    }&#10;&#10;    private void loadEnrolledCourses() {&#10;        layoutNoCourses.setVisibility(View.VISIBLE);&#10;        rvMyCourses.setVisibility(View.GONE);&#10;&#10;        android.util.Log.d(&quot;StudentMyCourses&quot;, &quot;Loading enrolled courses for student: &quot; + currentStudentId);&#10;&#10;        // Load approved enrollments từ collection &quot;enrollments&quot;&#10;        db.collection(&quot;enrollments&quot;)&#10;                .whereEqualTo(&quot;studentId&quot;, currentStudentId)&#10;                .get()&#10;                .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#10;                    enrolledCourseList.clear();&#10;&#10;                    android.util.Log.d(&quot;StudentMyCourses&quot;, &quot;Found &quot; + queryDocumentSnapshots.size() + &quot; enrollments&quot;);&#10;&#10;                    if (queryDocumentSnapshots.isEmpty()) {&#10;                        showEmptyState();&#10;                        return;&#10;                    }&#10;&#10;                    // Với mỗi enrollment, load thông tin course tương ứng&#10;                    for (QueryDocumentSnapshot enrollmentDoc : queryDocumentSnapshots) {&#10;                        String courseId = enrollmentDoc.getString(&quot;courseId&quot;);&#10;                        String courseName = enrollmentDoc.getString(&quot;courseName&quot;);&#10;                        String enrollmentDate = enrollmentDoc.getTimestamp(&quot;enrollmentDate&quot;) != null ?&#10;                            enrollmentDoc.getTimestamp(&quot;enrollmentDate&quot;).toDate().toString() : &quot;&quot;;&#10;&#10;                        if (courseId != null) {&#10;                            loadCourseDetails(courseId, courseName, enrollmentDate, enrollmentDoc.getId());&#10;                        }&#10;                    }&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    android.util.Log.e(&quot;StudentMyCourses&quot;, &quot;Error loading enrollments&quot;, e);&#10;                    Toast.makeText(this, &quot;Lỗi tải khóa học: &quot; + e.getMessage(), Toast.LENGTH_SHORT).show();&#10;                    showEmptyState();&#10;                });&#10;    }&#10;&#10;    private void loadCourseDetails(String courseId, String courseName, String enrollmentDate, String enrollmentId) {&#10;        db.collection(&quot;courses&quot;).document(courseId)&#10;                .get()&#10;                .addOnSuccessListener(courseDoc -&gt; {&#10;                    if (courseDoc.exists()) {&#10;                        Course course = courseDoc.toObject(Course.class);&#10;                        if (course != null) {&#10;                            course.setId(courseDoc.getId());&#10;&#10;                            // Tạo EnrolledCourse object&#10;                            EnrolledCourse enrolledCourse = new EnrolledCourse();&#10;                            enrolledCourse.setCourse(course);&#10;                            enrolledCourse.setEnrollmentId(enrollmentId);&#10;                            enrolledCourse.setEnrollmentDate(enrollmentDate);&#10;                            enrolledCourse.setProgress(0); // TODO: Calculate actual progress&#10;&#10;                            enrolledCourseList.add(enrolledCourse);&#10;&#10;                            // Update UI&#10;                            updateUI();&#10;                        }&#10;                    }&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    android.util.Log.e(&quot;StudentMyCourses&quot;, &quot;Error loading course details for: &quot; + courseId, e);&#10;                });&#10;    }&#10;&#10;    private void updateUI() {&#10;        if (enrolledCourseList.isEmpty()) {&#10;            showEmptyState();&#10;        } else {&#10;            layoutNoCourses.setVisibility(View.GONE);&#10;            rvMyCourses.setVisibility(View.VISIBLE);&#10;            courseAdapter.notifyDataSetChanged();&#10;&#10;            android.util.Log.d(&quot;StudentMyCourses&quot;, &quot;Showing &quot; + enrolledCourseList.size() + &quot; enrolled courses&quot;);&#10;        }&#10;    }&#10;&#10;    private void showEmptyState() {&#10;        layoutNoCourses.setVisibility(View.VISIBLE);&#10;        rvMyCourses.setVisibility(View.GONE);&#10;    }&#10;&#10;    @Override&#10;    public void onCourseClick(EnrolledCourse enrolledCourse) {&#10;        // Navigate to course learning activity&#10;        Intent intent = new Intent(this, StudentCourseDetailActivity.class);&#10;        intent.putExtra(&quot;courseId&quot;, enrolledCourse.getCourse().getId());&#10;        intent.putExtra(&quot;courseTitle&quot;, enrolledCourse.getCourse().getTitle());&#10;        intent.putExtra(&quot;courseCategory&quot;, enrolledCourse.getCourse().getCategory());&#10;        intent.putExtra(&quot;enrollmentId&quot;, enrolledCourse.getEnrollmentId());&#10;        startActivity(intent);&#10;    }&#10;&#10;    @Override&#10;    public void onContinueLearning(EnrolledCourse enrolledCourse) {&#10;        // Navigate to lessons list&#10;        Intent intent = new Intent(this, StudentCourseLessonsActivity.class);&#10;        intent.putExtra(&quot;courseId&quot;, enrolledCourse.getCourse().getId());&#10;        intent.putExtra(&quot;courseTitle&quot;, enrolledCourse.getCourse().getTitle());&#10;        intent.putExtra(&quot;courseCategory&quot;, enrolledCourse.getCourse().getCategory());&#10;        startActivity(intent);&#10;    }&#10;&#10;    @Override&#10;    public void onViewProgress(EnrolledCourse enrolledCourse) {&#10;        // Navigate to progress view&#10;        Intent intent = new Intent(this, StudentProgressDetailActivity.class);&#10;        intent.putExtra(&quot;courseId&quot;, enrolledCourse.getCourse().getId());&#10;        intent.putExtra(&quot;courseTitle&quot;, enrolledCourse.getCourse().getTitle());&#10;        startActivity(intent);&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        if (currentStudentId != null) {&#10;            loadEnrolledCourses(); // Reload when returning to this activity&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(@NonNull MenuItem item) {&#10;        if (item.getItemId() == android.R.id.home) {&#10;            finish();&#10;            return true;&#10;        }&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/TeacherDashboardActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/TeacherDashboardActivity.java" />
              <option name="originalContent" value="package com.vantinh.tienganh;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.Menu;&#10;import android.view.MenuItem;&#10;import android.widget.Button;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;import com.vantinh.tienganh.utils.RealtimeManager;&#10;&#10;public class TeacherDashboardActivity extends AppCompatActivity {&#10;&#10;    private Toolbar toolbar;&#10;    private TextView tvWelcome, tvCoursesCount, tvStudentsCount, tvPendingRequestsCount;&#10;    private Button btnManageCourses, btnViewRequests, btnViewStudents, btnCreateCourse;&#10;    private Button btnManageCourses, btnViewRequests, btnCreateQuiz, btnCreateCourse;&#10;=======&#10;    private Button btnManageCourses, btnViewRequests, btnViewStudents, btnCreateCourse;&#10;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 542cd6292b68990ee1f3d7aca232549a251d4232&#10;    private FirebaseAuth mAuth;&#10;    private FirebaseFirestore db;&#10;    private RealtimeManager realtimeManager;&#10;    private String currentTeacherId; // Đổi từ currentTeacherName sang currentTeacherId&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_teacher_dashboard);&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        initFirebase();&#10;        loadDashboardData();&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        tvWelcome = findViewById(R.id.tv_welcome);&#10;        tvCoursesCount = findViewById(R.id.tv_courses_count);&#10;        tvStudentsCount = findViewById(R.id.tv_students_count);&#10;        btnViewStudents = findViewById(R.id.btn_view_students);&#10;&#10;        btnManageCourses = findViewById(R.id.btn_manage_courses);&#10;        btnViewRequests = findViewById(R.id.btn_view_requests);&#10;&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD&#10;        btnCreateQuiz = findViewById(R.id.btn_create_quiz);&#10;=======&#10;        btnViewStudents = findViewById(R.id.btn_view_students);&#10;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 542cd6292b68990ee1f3d7aca232549a251d4232&#10;        btnCreateCourse = findViewById(R.id.btn_create_course);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setTitle(&quot;Bảng điều khiển giáo viên&quot;);&#10;        }&#10;    }&#10;&#10;    private void initFirebase() {&#10;        mAuth = FirebaseAuth.getInstance();&#10;        db = FirebaseFirestore.getInstance();&#10;        realtimeManager = RealtimeManager.getInstance();&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnManageCourses.setOnClickListener(v -&gt; {&#10;        btnViewStudents.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, EnrollmentManagementActivity.class));&#10;&#10;        // Thêm click listener cho nút &quot;View Requests&quot;&#10;        btnViewRequests.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, CourseRequestManagementActivity.class));&#10;        });&#10;&#10;&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD&#10;        btnCreateQuiz.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, SelectCourseForQuizActivity.class));&#10;=======&#10;        btnViewStudents.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, EnrollmentManagementActivity.class));&#10;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 542cd6292b68990ee1f3d7aca232549a251d4232&#10;        });&#10;&#10;        btnCreateCourse.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, CreateCourseActivity.class));&#10;        });&#10;    }&#10;&#10;    private void loadDashboardData() {&#10;        String teacherId = mAuth.getCurrentUser().getUid();&#10;        currentTeacherId = teacherId; // Lưu teacherId trực tiếp&#10;&#10;        // Load teacher info&#10;        db.collection(&quot;users&quot;).document(teacherId)&#10;                .get()&#10;                .addOnSuccessListener(documentSnapshot -&gt; {&#10;                    if (documentSnapshot.exists()) {&#10;                        String fullName = documentSnapshot.getString(&quot;fullName&quot;);&#10;                        tvWelcome.setText(&quot;Xin chào, &quot; + fullName);&#10;&#10;                        // Load counts với teacherId&#10;                        loadCoursesCount(teacherId);&#10;                        loadStudentsCount(teacherId);&#10;                        setupRealTimePendingRequestsCount(); // Sử dụng teacherId&#10;                    }&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    Toast.makeText(this, &quot;Lỗi khi tải thông tin&quot;, Toast.LENGTH_SHORT).show();&#10;                });&#10;    }&#10;&#10;    private void loadCoursesCount(String teacherId) {&#10;        db.collection(&quot;courses&quot;)&#10;                .whereEqualTo(&quot;teacherId&quot;, teacherId)&#10;                .get()&#10;                .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#10;                    int count = queryDocumentSnapshots.size();&#10;                    tvCoursesCount.setText(String.valueOf(count));&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    tvCoursesCount.setText(&quot;0&quot;);&#10;                });&#10;    }&#10;&#10;    private void loadStudentsCount(String teacherId) {&#10;        db.collection(&quot;enrollments&quot;)&#10;                .whereEqualTo(&quot;teacherId&quot;, teacherId)&#10;                .get()&#10;                .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#10;                    int count = queryDocumentSnapshots.size();&#10;                    tvStudentsCount.setText(String.valueOf(count));&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    tvStudentsCount.setText(&quot;0&quot;);&#10;                });&#10;    }&#10;&#10;    // Sửa để hiển thị TẤT CẢ pending requests (không filter theo teacherId)&#10;    private void setupRealTimePendingRequestsCount() {&#10;        // Đơn giản hóa - đếm tất cả pending requests&#10;        db.collection(&quot;courseRequests&quot;)&#10;                .whereEqualTo(&quot;status&quot;, &quot;pending&quot;)&#10;                .addSnapshotListener((queryDocumentSnapshots, e) -&gt; {&#10;                    if (e != null) {&#10;                        Log.e(&quot;TeacherDashboard&quot;, &quot;Error listening to pending requests&quot;, e);&#10;                        tvPendingRequestsCount.setText(&quot;0&quot;);&#10;                        return;&#10;                    }&#10;&#10;                    if (queryDocumentSnapshots != null) {&#10;                        int count = queryDocumentSnapshots.size();&#10;                        Log.d(&quot;TeacherDashboard&quot;, &quot;Real-time update: &quot; + count + &quot; pending requests total&quot;);&#10;&#10;                        runOnUiThread(() -&gt; {&#10;                            tvPendingRequestsCount.setText(String.valueOf(count));&#10;&#10;                            if (count &gt; 0) {&#10;                                btnViewRequests.setText(&quot;Xem yêu cầu (&quot; + count + &quot;)&quot;);&#10;                                // Animation nhấp nháy khi có yêu cầu mới&#10;                                btnViewRequests.animate()&#10;                                        .scaleX(1.1f)&#10;                                        .scaleY(1.1f)&#10;                                        .setDuration(200)&#10;                                        .withEndAction(() -&gt; {&#10;                                            btnViewRequests.animate()&#10;                                                    .scaleX(1f)&#10;                                                    .scaleY(1f)&#10;                                                    .setDuration(200)&#10;                                                    .start();&#10;                                        })&#10;                                        .start();&#10;                            } else {&#10;                                btnViewRequests.setText(&quot;Xem yêu cầu&quot;);&#10;                            }&#10;                        });&#10;                    }&#10;                });&#10;    }&#10;&#10;    @Override&#10;    public boolean onCreateOptionsMenu(Menu menu) {&#10;        getMenuInflater().inflate(R.menu.teacher_toolbar_menu, menu);&#10;        return true;&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(@NonNull MenuItem item) {&#10;        int itemId = item.getItemId();&#10;        if (itemId == R.id.action_logout) {&#10;            logout();&#10;            return true;&#10;        }&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;&#10;    private void logout() {&#10;        mAuth.signOut();&#10;        Intent intent = new Intent(this, LoginActivity.class);&#10;        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        // Refresh data khi quay lại activity&#10;        loadDashboardData();&#10;    }&#10;&#10;    @Override&#10;    protected void onDestroy() {&#10;        super.onDestroy();&#10;        // Cleanup listeners khi destroy activity&#10;        if (realtimeManager != null) {&#10;            realtimeManager.removeAllListeners();&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.vantinh.tienganh;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.Menu;&#10;import android.view.MenuItem;&#10;import android.widget.Button;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;import com.vantinh.tienganh.utils.RealtimeManager;&#10;&#10;public class TeacherDashboardActivity extends AppCompatActivity {&#10;&#10;    private Toolbar toolbar;&#10;    private TextView tvWelcome, tvCoursesCount, tvStudentsCount, tvPendingRequestsCount;&#10;    private Button btnManageCourses, btnViewRequests, btnCreateQuiz, btnCreateCourse;&#10;    private FirebaseAuth mAuth;&#10;    private FirebaseFirestore db;&#10;    private RealtimeManager realtimeManager;&#10;    private String currentTeacherId; // Đổi từ currentTeacherName sang currentTeacherId&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_teacher_dashboard);&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        initFirebase();&#10;        loadDashboardData();&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        tvWelcome = findViewById(R.id.tv_welcome);&#10;        tvCoursesCount = findViewById(R.id.tv_courses_count);&#10;        tvStudentsCount = findViewById(R.id.tv_students_count);&#10;        tvPendingRequestsCount = findViewById(R.id.tv_pending_requests_count);&#10;&#10;        btnManageCourses = findViewById(R.id.btn_manage_courses);&#10;        btnViewRequests = findViewById(R.id.btn_view_requests);&#10;        btnCreateQuiz = findViewById(R.id.btn_create_quiz);&#10;        btnCreateCourse = findViewById(R.id.btn_create_course);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setTitle(&quot;Bảng điều khiển giáo viên&quot;);&#10;        }&#10;    }&#10;&#10;    private void initFirebase() {&#10;        mAuth = FirebaseAuth.getInstance();&#10;        db = FirebaseFirestore.getInstance();&#10;        realtimeManager = RealtimeManager.getInstance();&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnManageCourses.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, CourseManagementActivity.class));&#10;        });&#10;&#10;        // Thêm click listener cho nút &quot;View Requests&quot;&#10;        btnViewRequests.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, CourseRequestManagementActivity.class));&#10;        });&#10;&#10;        btnCreateQuiz.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, SelectCourseForQuizActivity.class));&#10;        });&#10;&#10;        btnCreateCourse.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, CreateCourseActivity.class));&#10;        });&#10;    }&#10;&#10;    private void loadDashboardData() {&#10;        String teacherId = mAuth.getCurrentUser().getUid();&#10;        currentTeacherId = teacherId; // Lưu teacherId trực tiếp&#10;&#10;        // Load teacher info&#10;        db.collection(&quot;users&quot;).document(teacherId)&#10;                .get()&#10;                .addOnSuccessListener(documentSnapshot -&gt; {&#10;                    if (documentSnapshot.exists()) {&#10;                        String fullName = documentSnapshot.getString(&quot;fullName&quot;);&#10;                        tvWelcome.setText(&quot;Xin chào, &quot; + fullName);&#10;&#10;                        // Load counts với teacherId&#10;                        loadCoursesCount(teacherId);&#10;                        loadStudentsCount(teacherId);&#10;                        setupRealTimePendingRequestsCount(); // Sử dụng teacherId&#10;                    }&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    Toast.makeText(this, &quot;Lỗi khi tải thông tin&quot;, Toast.LENGTH_SHORT).show();&#10;                });&#10;    }&#10;&#10;    private void loadCoursesCount(String teacherId) {&#10;        db.collection(&quot;courses&quot;)&#10;                .whereEqualTo(&quot;teacherId&quot;, teacherId)&#10;                .get()&#10;                .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#10;                    int count = queryDocumentSnapshots.size();&#10;                    tvCoursesCount.setText(String.valueOf(count));&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    tvCoursesCount.setText(&quot;0&quot;);&#10;                });&#10;    }&#10;&#10;    private void loadStudentsCount(String teacherId) {&#10;        db.collection(&quot;enrollments&quot;)&#10;                .whereEqualTo(&quot;teacherId&quot;, teacherId)&#10;                .get()&#10;                .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#10;                    int count = queryDocumentSnapshots.size();&#10;                    tvStudentsCount.setText(String.valueOf(count));&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    tvStudentsCount.setText(&quot;0&quot;);&#10;                });&#10;    }&#10;&#10;    // Sửa để hiển thị TẤT CẢ pending requests (không filter theo teacherId)&#10;    private void setupRealTimePendingRequestsCount() {&#10;        // Đơn giản hóa - đếm tất cả pending requests&#10;        db.collection(&quot;courseRequests&quot;)&#10;                .whereEqualTo(&quot;status&quot;, &quot;pending&quot;)&#10;                .addSnapshotListener((queryDocumentSnapshots, e) -&gt; {&#10;                    if (e != null) {&#10;                        Log.e(&quot;TeacherDashboard&quot;, &quot;Error listening to pending requests&quot;, e);&#10;                        tvPendingRequestsCount.setText(&quot;0&quot;);&#10;                        return;&#10;                    }&#10;&#10;                    if (queryDocumentSnapshots != null) {&#10;                        int count = queryDocumentSnapshots.size();&#10;                        Log.d(&quot;TeacherDashboard&quot;, &quot;Real-time update: &quot; + count + &quot; pending requests total&quot;);&#10;&#10;                        runOnUiThread(() -&gt; {&#10;                            tvPendingRequestsCount.setText(String.valueOf(count));&#10;&#10;                            if (count &gt; 0) {&#10;                                btnViewRequests.setText(&quot;Xem yêu cầu (&quot; + count + &quot;)&quot;);&#10;                                // Animation nhấp nháy khi có yêu cầu mới&#10;                                btnViewRequests.animate()&#10;                                        .scaleX(1.1f)&#10;                                        .scaleY(1.1f)&#10;                                        .setDuration(200)&#10;                                        .withEndAction(() -&gt; {&#10;                                            btnViewRequests.animate()&#10;                                                    .scaleX(1f)&#10;                                                    .scaleY(1f)&#10;                                                    .setDuration(200)&#10;                                                    .start();&#10;                                        })&#10;                                        .start();&#10;                            } else {&#10;                                btnViewRequests.setText(&quot;Xem yêu cầu&quot;);&#10;                            }&#10;                        });&#10;                    }&#10;                });&#10;    }&#10;&#10;    @Override&#10;    public boolean onCreateOptionsMenu(Menu menu) {&#10;        getMenuInflater().inflate(R.menu.teacher_toolbar_menu, menu);&#10;        return true;&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(@NonNull MenuItem item) {&#10;        int itemId = item.getItemId();&#10;        if (itemId == R.id.action_logout) {&#10;            logout();&#10;            return true;&#10;        }&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;&#10;    private void logout() {&#10;        mAuth.signOut();&#10;        Intent intent = new Intent(this, LoginActivity.class);&#10;        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        // Refresh data khi quay lại activity&#10;        loadDashboardData();&#10;    }&#10;&#10;    @Override&#10;    protected void onDestroy() {&#10;        super.onDestroy();&#10;        // Cleanup listeners khi destroy activity&#10;        if (realtimeManager != null) {&#10;            realtimeManager.removeAllListeners();&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/adapters/CourseSelectAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/adapters/CourseSelectAdapter.java" />
              <option name="updatedContent" value="package com.vantinh.tienganh.adapters;&#10;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.TextView;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import com.vantinh.tienganh.R;&#10;import com.vantinh.tienganh.models.Course;&#10;import java.util.List;&#10;&#10;public class CourseSelectAdapter extends RecyclerView.Adapter&lt;CourseSelectAdapter.ViewHolder&gt; {&#10;&#10;    private List&lt;Course&gt; courses;&#10;    private OnCourseSelectListener listener;&#10;&#10;    public interface OnCourseSelectListener {&#10;        void onCourseSelected(Course course);&#10;    }&#10;&#10;    public CourseSelectAdapter(List&lt;Course&gt; courses, OnCourseSelectListener listener) {&#10;        this.courses = courses;&#10;        this.listener = listener;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext())&#10;                .inflate(R.layout.item_course_select, parent, false);&#10;        return new ViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {&#10;        Course course = courses.get(position);&#10;        holder.bind(course);&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return courses.size();&#10;    }&#10;&#10;    class ViewHolder extends RecyclerView.ViewHolder {&#10;        private TextView tvCourseName, tvCourseDescription;&#10;&#10;        public ViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            tvCourseName = itemView.findViewById(R.id.tv_course_name);&#10;            tvCourseDescription = itemView.findViewById(R.id.tv_course_description);&#10;&#10;            itemView.setOnClickListener(v -&gt; {&#10;                if (listener != null) {&#10;                    listener.onCourseSelected(courses.get(getAdapterPosition()));&#10;                }&#10;            });&#10;        }&#10;&#10;        public void bind(Course course) {&#10;            tvCourseName.setText(course.getCourseName());&#10;            tvCourseDescription.setText(course.getDescription());&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/models/Course.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/models/Course.java" />
              <option name="updatedContent" value="package com.vantinh.tienganh.models;&#10;&#10;import java.util.Date;&#10;import java.util.List;&#10;&#10;public class Course {&#10;    private String id;&#10;    private String title;&#10;    private String description;&#10;    private String teacherId;&#10;    private String imageUrl;&#10;    private String level; // Beginner, Intermediate, Advanced&#10;    private String category; // Grammar, Vocabulary, Listening, Speaking&#10;    private int duration; // in hours&#10;    private Date createdAt;&#10;    private Date updatedAt;&#10;    private boolean isActive;&#10;    private int enrolledStudents;&#10;    private double rating;&#10;    private List&lt;String&gt; tags;&#10;&#10;    public Course() {&#10;        // Required empty constructor for Firebase&#10;    }&#10;&#10;    public Course(String title, String description, String teacherId,&#10;                  String level, String category, int duration) {&#10;        this.title = title;&#10;        this.description = description;&#10;        this.teacherId = teacherId;&#10;        this.level = level;&#10;        this.category = category;&#10;        this.duration = duration;&#10;        this.createdAt = new Date();&#10;        this.updatedAt = new Date();&#10;        this.isActive = true;&#10;        this.enrolledStudents = 0;&#10;        this.rating = 0.0;&#10;    }&#10;&#10;    // Getters and Setters&#10;    public String getId() { return id; }&#10;    public void setId(String id) { this.id = id; }&#10;&#10;    public String getTitle() { return title; }&#10;    public void setTitle(String title) { this.title = title; }&#10;&#10;    public String getDescription() { return description; }&#10;    public void setDescription(String description) { this.description = description; }&#10;&#10;    public String getTeacherId() { return teacherId; }&#10;    public void setTeacherId(String teacherId) { this.teacherId = teacherId; }&#10;&#10;    public String getImageUrl() { return imageUrl; }&#10;    public void setImageUrl(String imageUrl) { this.imageUrl = imageUrl; }&#10;&#10;    public String getLevel() { return level; }&#10;    public void setLevel(String level) { this.level = level; }&#10;&#10;    public String getCategory() { return category; }&#10;    public void setCategory(String category) { this.category = category; }&#10;&#10;    public int getDuration() { return duration; }&#10;    public void setDuration(int duration) { this.duration = duration; }&#10;&#10;    public Date getCreatedAt() { return createdAt; }&#10;    public void setCreatedAt(Date createdAt) { this.createdAt = createdAt; }&#10;&#10;    public Date getUpdatedAt() { return updatedAt; }&#10;    public void setUpdatedAt(Date updatedAt) { this.updatedAt = updatedAt; }&#10;&#10;    public boolean isActive() { return isActive; }&#10;    public void setActive(boolean active) { isActive = active; }&#10;&#10;    public int getEnrolledStudents() { return enrolledStudents; }&#10;    public void setEnrolledStudents(int enrolledStudents) { this.enrolledStudents = enrolledStudents; }&#10;&#10;    public double getRating() { return rating; }&#10;    public void setRating(double rating) { this.rating = rating; }&#10;&#10;    public List&lt;String&gt; getTags() { return tags; }&#10;    public void setTags(List&lt;String&gt; tags) { this.tags = tags; }&#10;&#10;    // Thêm phương thức getCourseName() để tương thích với code hiện tại&#10;    public String getCourseName() {&#10;        return this.title;&#10;    }&#10;&#10;    public void setCourseName(String courseName) {&#10;        this.title = courseName;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/models/Quiz.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/models/Quiz.java" />
              <option name="updatedContent" value="package com.vantinh.tienganh.models;&#10;&#10;import java.util.Date;&#10;import java.util.List;&#10;&#10;public class Quiz {&#10;    private String id;&#10;    private String title;&#10;    private String courseId;&#10;    private String courseName;&#10;    private String teacherId;&#10;    private List&lt;QuizQuestion&gt; questions;&#10;    private Date createdAt;&#10;    private boolean active;&#10;&#10;    public Quiz() {&#10;        // Empty constructor required for Firestore&#10;    }&#10;&#10;    public Quiz(String title, String courseId, String courseName, String teacherId, &#10;                List&lt;QuizQuestion&gt; questions, Date createdAt, boolean active) {&#10;        this.title = title;&#10;        this.courseId = courseId;&#10;        this.courseName = courseName;&#10;        this.teacherId = teacherId;&#10;        this.questions = questions;&#10;        this.createdAt = createdAt;&#10;        this.active = active;&#10;    }&#10;&#10;    // Getters and Setters&#10;    public String getId() {&#10;        return id;&#10;    }&#10;&#10;    public void setId(String id) {&#10;        this.id = id;&#10;    }&#10;&#10;    public String getTitle() {&#10;        return title;&#10;    }&#10;&#10;    public void setTitle(String title) {&#10;        this.title = title;&#10;    }&#10;&#10;    public String getCourseId() {&#10;        return courseId;&#10;    }&#10;&#10;    public void setCourseId(String courseId) {&#10;        this.courseId = courseId;&#10;    }&#10;&#10;    public String getCourseName() {&#10;        return courseName;&#10;    }&#10;&#10;    public void setCourseName(String courseName) {&#10;        this.courseName = courseName;&#10;    }&#10;&#10;    public String getTeacherId() {&#10;        return teacherId;&#10;    }&#10;&#10;    public void setTeacherId(String teacherId) {&#10;        this.teacherId = teacherId;&#10;    }&#10;&#10;    public List&lt;QuizQuestion&gt; getQuestions() {&#10;        return questions;&#10;    }&#10;&#10;    public void setQuestions(List&lt;QuizQuestion&gt; questions) {&#10;        this.questions = questions;&#10;    }&#10;&#10;    public Date getCreatedAt() {&#10;        return createdAt;&#10;    }&#10;&#10;    public void setCreatedAt(Date createdAt) {&#10;        this.createdAt = createdAt;&#10;    }&#10;&#10;    public boolean isActive() {&#10;        return active;&#10;    }&#10;&#10;    public void setActive(boolean active) {&#10;        this.active = active;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/models/QuizQuestion.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/models/QuizQuestion.java" />
              <option name="originalContent" value="package com.vantinh.tienganh.models;&#10;&#10;import java.util.List;&#10;&#10;public class QuizQuestion {&#10;    private String questionText;&#10;    private List&lt;String&gt; options;&#10;    private int correctAnswerIndex;&#10;&#10;    public QuizQuestion() {&#10;        // Empty constructor required for Firestore&#10;    }&#10;&#10;    public QuizQuestion(String questionText, List&lt;String&gt; options, int correctAnswerIndex) {&#10;        this.questionText = questionText;&#10;        this.options = options;&#10;        this.correctAnswerIndex = correctAnswerIndex;&#10;    }&#10;&#10;    // Getters and Setters&#10;    public String getQuestionText() {&#10;        return questionText;&#10;    }&#10;&#10;    public void setQuestionText(String questionText) {&#10;        this.questionText = questionText;&#10;    }&#10;&#10;    public List&lt;String&gt; getOptions() {&#10;        return options;&#10;    }&#10;&#10;    public void setOptions(List&lt;String&gt; options) {&#10;        this.options = options;&#10;    }&#10;&#10;    public int getCorrectAnswerIndex() {&#10;        return correctAnswerIndex;&#10;    }&#10;&#10;    public void setCorrectAnswerIndex(int correctAnswerIndex) {&#10;        this.correctAnswerIndex = correctAnswerIndex;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.vantinh.tienganh.models;&#10;&#10;import java.util.List;&#10;&#10;public class QuizQuestion {&#10;    private String question;&#10;    private List&lt;String&gt; options;&#10;    private int correctAnswers;&#10;&#10;    public QuizQuestion() {&#10;        // Empty constructor required for Firestore&#10;    }&#10;&#10;    public QuizQuestion(String question, List&lt;String&gt; options, int correctAnswers) {&#10;        this.question = question;&#10;        this.options = options;&#10;        this.correctAnswers = correctAnswers;&#10;    }&#10;&#10;    // Getters and Setters&#10;    public String getQuestion() {&#10;        return question;&#10;    }&#10;&#10;    public void setQuestion(String question) {&#10;        this.question = question;&#10;    }&#10;&#10;    public List&lt;String&gt; getOptions() {&#10;        return options;&#10;    }&#10;&#10;    public void setOptions(List&lt;String&gt; options) {&#10;        this.options = options;&#10;    }&#10;&#10;    public int getCorrectAnswers() {&#10;        return correctAnswers;&#10;    }&#10;&#10;    public void setCorrectAnswers(int correctAnswers) {&#10;        this.correctAnswers = correctAnswers;&#10;    }&#10;&#10;    // Backward compatibility methods (để không bị lỗi với code cũ)&#10;    public String getQuestionText() {&#10;        return question;&#10;    }&#10;&#10;    public void setQuestionText(String questionText) {&#10;        this.question = questionText;&#10;    }&#10;&#10;    public int getCorrectAnswerIndex() {&#10;        return correctAnswers;&#10;    }&#10;&#10;    public void setCorrectAnswerIndex(int correctAnswerIndex) {&#10;        this.correctAnswers = correctAnswerIndex;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/utils/QuestionViewHelper.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/utils/QuestionViewHelper.java" />
              <option name="originalContent" value="package com.vantinh.tienganh.utils;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.widget.EditText;&#10;import android.widget.ImageButton;&#10;import android.widget.LinearLayout;&#10;import android.widget.RadioGroup;&#10;import android.widget.RadioButton;&#10;import android.widget.TextView;&#10;import com.vantinh.tienganh.R;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class QuestionViewHelper {&#10;&#10;    public static class QuestionViewData {&#10;        public View questionView;&#10;        public EditText etQuestion;&#10;        public EditText[] etOptions;&#10;        public RadioGroup rgCorrectAnswer;&#10;        public TextView tvQuestionNumber;&#10;        public ImageButton btnDelete;&#10;&#10;        public QuestionViewData() {&#10;            etOptions = new EditText[4];&#10;        }&#10;    }&#10;&#10;    private Context context;&#10;    private LinearLayout questionsContainer;&#10;    private List&lt;QuestionViewData&gt; questionViews;&#10;    private OnQuestionCountChangeListener listener;&#10;&#10;    public interface OnQuestionCountChangeListener {&#10;        void onQuestionCountChanged(int count);&#10;    }&#10;&#10;    public QuestionViewHelper(Context context, LinearLayout questionsContainer) {&#10;        this.context = context;&#10;        this.questionsContainer = questionsContainer;&#10;        this.questionViews = new ArrayList&lt;&gt;();&#10;    }&#10;&#10;    public void setOnQuestionCountChangeListener(OnQuestionCountChangeListener listener) {&#10;        this.listener = listener;&#10;    }&#10;&#10;    public void addQuestion() {&#10;        LayoutInflater inflater = LayoutInflater.from(context);&#10;        View questionView = inflater.inflate(R.layout.item_dynamic_quiz_question, questionsContainer, false);&#10;&#10;        QuestionViewData questionData = new QuestionViewData();&#10;        questionData.questionView = questionView;&#10;        questionData.tvQuestionNumber = questionView.findViewById(R.id.tv_question_number);&#10;        questionData.etQuestion = questionView.findViewById(R.id.et_question);&#10;        questionData.etOptions[0] = questionView.findViewById(R.id.et_option_a);&#10;        questionData.etOptions[1] = questionView.findViewById(R.id.et_option_b);&#10;        questionData.etOptions[2] = questionView.findViewById(R.id.et_option_c);&#10;        questionData.etOptions[3] = questionView.findViewById(R.id.et_option_d);&#10;        questionData.rgCorrectAnswer = questionView.findViewById(R.id.rg_correct_answer);&#10;        questionData.btnDelete = questionView.findViewById(R.id.btn_delete_question);&#10;&#10;        // Set unique IDs for RadioButtons to avoid conflicts&#10;        int questionIndex = questionViews.size();&#10;        int baseId = 2000 + (questionIndex * 10);&#10;        RadioButton rbA = questionView.findViewById(R.id.rb_option_a);&#10;        RadioButton rbB = questionView.findViewById(R.id.rb_option_b);&#10;        RadioButton rbC = questionView.findViewById(R.id.rb_option_c);&#10;        RadioButton rbD = questionView.findViewById(R.id.rb_option_d);&#10;&#10;        // Kiểm tra null pointer&#10;        if (rbA == null || rbB == null || rbC == null || rbD == null) {&#10;            android.util.Log.e(&quot;QuestionViewHelper&quot;, &quot;RadioButton not found in layout!&quot;);&#10;            return;&#10;        }&#10;&#10;        rbA.setId(baseId + 1);&#10;        rbB.setId(baseId + 2);&#10;        rbC.setId(baseId + 3);&#10;        rbD.setId(baseId + 4);&#10;&#10;        // Setup toggle functionality for RadioButtons với log debug&#10;        android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Setting up RadioButton listeners for question &quot; + (questionIndex + 1));&#10;        setupRadioButtonToggle(questionData.rgCorrectAnswer, rbA, &quot;A&quot;);&#10;        setupRadioButtonToggle(questionData.rgCorrectAnswer, rbB, &quot;B&quot;);&#10;        setupRadioButtonToggle(questionData.rgCorrectAnswer, rbC, &quot;C&quot;);&#10;        setupRadioButtonToggle(questionData.rgCorrectAnswer, rbD, &quot;D&quot;);&#10;&#10;        // Set delete button click listener&#10;        if (questionData.btnDelete != null) {&#10;            questionData.btnDelete.setOnClickListener(v -&gt; removeQuestion(questionData));&#10;        }&#10;&#10;        questionViews.add(questionData);&#10;        questionsContainer.addView(questionView);&#10;&#10;        updateQuestionNumbers();&#10;        updateDeleteButtonsVisibility();&#10;&#10;        if (listener != null) {&#10;            listener.onQuestionCountChanged(questionViews.size());&#10;        }&#10;    }&#10;&#10;    private void setupRadioButtonToggle(RadioGroup radioGroup, RadioButton radioButton, String optionName) {&#10;        android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Setting up listener for option &quot; + optionName);&#10;&#10;        // Sử dụng OnCheckedChangeListener thay vì OnClickListener để tránh xung đột&#10;        radioButton.setOnCheckedChangeListener((buttonView, isChecked) -&gt; {&#10;            if (isChecked) {&#10;                android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Option &quot; + optionName + &quot; was checked&quot;);&#10;                // Lưu trạng thái này vào tag&#10;                radioButton.setTag(&quot;selected&quot;);&#10;            }&#10;        });&#10;&#10;        // Sử dụng OnClickListener để handle toggle logic&#10;        radioButton.setOnClickListener(v -&gt; {&#10;            android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Option &quot; + optionName + &quot; clicked&quot;);&#10;&#10;            // Kiểm tra trạng thái trước đó&#10;            String previousState = (String) radioButton.getTag();&#10;            boolean wasAlreadySelected = &quot;selected&quot;.equals(previousState);&#10;&#10;            android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Was already selected: &quot; + wasAlreadySelected);&#10;&#10;            if (wasAlreadySelected) {&#10;                // Nếu đã được chọn, hủy chọn tất cả&#10;                android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Clearing selection for &quot; + optionName);&#10;                radioGroup.clearCheck();&#10;                clearAllTags(radioGroup);&#10;            } else {&#10;                // Nếu chưa được chọn, clear tags của buttons khác và set tag cho button này&#10;                android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Selecting &quot; + optionName);&#10;                clearAllTags(radioGroup);&#10;                radioButton.setTag(&quot;selected&quot;);&#10;                // RadioGroup sẽ tự động handle việc uncheck các button khác&#10;            }&#10;        });&#10;    }&#10;&#10;    private void clearAllTags(RadioGroup radioGroup) {&#10;        // Clear tags của tất cả RadioButton trong group&#10;        for (int i = 0; i &lt; radioGroup.getChildCount(); i++) {&#10;            View child = radioGroup.getChildAt(i);&#10;            if (child instanceof LinearLayout) {&#10;                LinearLayout linearLayout = (LinearLayout) child;&#10;                for (int j = 0; j &lt; linearLayout.getChildCount(); j++) {&#10;                    View subChild = linearLayout.getChildAt(j);&#10;                    if (subChild instanceof RadioButton) {&#10;                        subChild.setTag(null);&#10;                    }&#10;                }&#10;            } else if (child instanceof RadioButton) {&#10;                child.setTag(null);&#10;            }&#10;        }&#10;    }&#10;&#10;    private void clearOtherButtonTags(RadioGroup radioGroup, RadioButton selectedButton) {&#10;        RadioButton rbA = radioGroup.findViewById(R.id.rb_option_a);&#10;        RadioButton rbB = radioGroup.findViewById(R.id.rb_option_b);&#10;        RadioButton rbC = radioGroup.findViewById(R.id.rb_option_c);&#10;        RadioButton rbD = radioGroup.findViewById(R.id.rb_option_d);&#10;&#10;        if (rbA != null &amp;&amp; rbA != selectedButton) rbA.setTag(false);&#10;        if (rbB != null &amp;&amp; rbB != selectedButton) rbB.setTag(false);&#10;        if (rbC != null &amp;&amp; rbC != selectedButton) rbC.setTag(false);&#10;        if (rbD != null &amp;&amp; rbD != selectedButton) rbD.setTag(false);&#10;    }&#10;&#10;    private void setupRadioGroupChangeListener(RadioGroup radioGroup) {&#10;        radioGroup.setOnCheckedChangeListener((group, checkedId) -&gt; {&#10;            android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;RadioGroup checked changed to: &quot; + checkedId);&#10;        });&#10;    }&#10;&#10;    public void removeQuestion(QuestionViewData questionData) {&#10;        if (questionViews.size() &lt;= 2) {&#10;            // Không cho phép xóa nếu chỉ còn 2 câu hỏi&#10;            return;&#10;        }&#10;&#10;        questionsContainer.removeView(questionData.questionView);&#10;        questionViews.remove(questionData);&#10;&#10;        updateQuestionNumbers();&#10;        updateDeleteButtonsVisibility();&#10;&#10;        if (listener != null) {&#10;            listener.onQuestionCountChanged(questionViews.size());&#10;        }&#10;    }&#10;&#10;    public void removeLastQuestion() {&#10;        if (questionViews.size() &lt;= 2) {&#10;            return;&#10;        }&#10;&#10;        QuestionViewData lastQuestion = questionViews.get(questionViews.size() - 1);&#10;        removeQuestion(lastQuestion);&#10;    }&#10;&#10;    private void updateQuestionNumbers() {&#10;        for (int i = 0; i &lt; questionViews.size(); i++) {&#10;            questionViews.get(i).tvQuestionNumber.setText(&quot;Câu hỏi &quot; + (i + 1) + &quot;:&quot;);&#10;        }&#10;    }&#10;&#10;    private void updateDeleteButtonsVisibility() {&#10;        boolean showDeleteButtons = questionViews.size() &gt; 2;&#10;        for&#10;" />
              <option name="updatedContent" value="package com.vantinh.tienganh.utils;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.widget.EditText;&#10;import android.widget.ImageButton;&#10;import android.widget.LinearLayout;&#10;import android.widget.RadioGroup;&#10;import android.widget.RadioButton;&#10;import android.widget.TextView;&#10;import com.vantinh.tienganh.R;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class QuestionViewHelper {&#10;&#10;    public static class QuestionViewData {&#10;        public View questionView;&#10;        public EditText etQuestion;&#10;        public EditText[] etOptions;&#10;        public RadioGroup rgCorrectAnswer;&#10;        public TextView tvQuestionNumber;&#10;        public ImageButton btnDelete;&#10;&#10;        public QuestionViewData() {&#10;            etOptions = new EditText[4];&#10;        }&#10;    }&#10;&#10;    private Context context;&#10;    private LinearLayout questionsContainer;&#10;    private List&lt;QuestionViewData&gt; questionViews;&#10;    private OnQuestionCountChangeListener listener;&#10;&#10;    public interface OnQuestionCountChangeListener {&#10;        void onQuestionCountChanged(int count);&#10;    }&#10;&#10;    public QuestionViewHelper(Context context, LinearLayout questionsContainer) {&#10;        this.context = context;&#10;        this.questionsContainer = questionsContainer;&#10;        this.questionViews = new ArrayList&lt;&gt;();&#10;    }&#10;&#10;    public void setOnQuestionCountChangeListener(OnQuestionCountChangeListener listener) {&#10;        this.listener = listener;&#10;    }&#10;&#10;    public void addQuestion() {&#10;        LayoutInflater inflater = LayoutInflater.from(context);&#10;        View questionView = inflater.inflate(R.layout.item_dynamic_quiz_question, questionsContainer, false);&#10;&#10;        QuestionViewData questionData = new QuestionViewData();&#10;        questionData.questionView = questionView;&#10;        questionData.tvQuestionNumber = questionView.findViewById(R.id.tv_question_number);&#10;        questionData.etQuestion = questionView.findViewById(R.id.et_question);&#10;        questionData.etOptions[0] = questionView.findViewById(R.id.et_option_a);&#10;        questionData.etOptions[1] = questionView.findViewById(R.id.et_option_b);&#10;        questionData.etOptions[2] = questionView.findViewById(R.id.et_option_c);&#10;        questionData.etOptions[3] = questionView.findViewById(R.id.et_option_d);&#10;        questionData.rgCorrectAnswer = questionView.findViewById(R.id.rg_correct_answer);&#10;        questionData.btnDelete = questionView.findViewById(R.id.btn_delete_question);&#10;&#10;        // Set unique IDs for RadioButtons to avoid conflicts&#10;        int questionIndex = questionViews.size();&#10;        int baseId = 2000 + (questionIndex * 10);&#10;        RadioButton rbA = questionView.findViewById(R.id.rb_option_a);&#10;        RadioButton rbB = questionView.findViewById(R.id.rb_option_b);&#10;        RadioButton rbC = questionView.findViewById(R.id.rb_option_c);&#10;        RadioButton rbD = questionView.findViewById(R.id.rb_option_d);&#10;&#10;        // Kiểm tra null pointer&#10;        if (rbA == null || rbB == null || rbC == null || rbD == null) {&#10;            android.util.Log.e(&quot;QuestionViewHelper&quot;, &quot;RadioButton not found in layout!&quot;);&#10;            return;&#10;        }&#10;&#10;        rbA.setId(baseId + 1);&#10;        rbB.setId(baseId + 2);&#10;        rbC.setId(baseId + 3);&#10;        rbD.setId(baseId + 4);&#10;&#10;        // Setup toggle functionality for RadioButtons với log debug&#10;        android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Setting up RadioButton listeners for question &quot; + (questionIndex + 1));&#10;        setupRadioButtonToggle(questionData.rgCorrectAnswer, rbA, &quot;A&quot;);&#10;        setupRadioButtonToggle(questionData.rgCorrectAnswer, rbB, &quot;B&quot;);&#10;        setupRadioButtonToggle(questionData.rgCorrectAnswer, rbC, &quot;C&quot;);&#10;        setupRadioButtonToggle(questionData.rgCorrectAnswer, rbD, &quot;D&quot;);&#10;&#10;        // Set delete button click listener&#10;        if (questionData.btnDelete != null) {&#10;            questionData.btnDelete.setOnClickListener(v -&gt; removeQuestion(questionData));&#10;        }&#10;&#10;        questionViews.add(questionData);&#10;        questionsContainer.addView(questionView);&#10;&#10;        updateQuestionNumbers();&#10;        updateDeleteButtonsVisibility();&#10;&#10;        if (listener != null) {&#10;            listener.onQuestionCountChanged(questionViews.size());&#10;        }&#10;    }&#10;&#10;    private void setupRadioButtonToggle(RadioGroup radioGroup, RadioButton radioButton, String optionName) {&#10;        android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Setting up listener for option &quot; + optionName);&#10;&#10;        // Sử dụng OnCheckedChangeListener thay vì OnClickListener để tránh xung đột&#10;        radioButton.setOnCheckedChangeListener((buttonView, isChecked) -&gt; {&#10;            if (isChecked) {&#10;                android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Option &quot; + optionName + &quot; was checked&quot;);&#10;                // Lưu trạng thái này vào tag&#10;                radioButton.setTag(&quot;selected&quot;);&#10;            }&#10;        });&#10;&#10;        // Sử dụng OnClickListener để handle toggle logic&#10;        radioButton.setOnClickListener(v -&gt; {&#10;            android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Option &quot; + optionName + &quot; clicked&quot;);&#10;&#10;            // Kiểm tra trạng thái trước đó&#10;            String previousState = (String) radioButton.getTag();&#10;            boolean wasAlreadySelected = &quot;selected&quot;.equals(previousState);&#10;&#10;            android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Was already selected: &quot; + wasAlreadySelected);&#10;&#10;            if (wasAlreadySelected) {&#10;                // Nếu đã được chọn, hủy chọn tất cả&#10;                android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Clearing selection for &quot; + optionName);&#10;                radioGroup.clearCheck();&#10;                clearAllTags(radioGroup);&#10;            } else {&#10;                // Nếu chưa được chọn, clear tags của buttons khác và set tag cho button này&#10;                android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Selecting &quot; + optionName);&#10;                clearAllTags(radioGroup);&#10;                radioButton.setTag(&quot;selected&quot;);&#10;                // RadioGroup sẽ tự động handle việc uncheck các button khác&#10;            }&#10;        });&#10;    }&#10;&#10;    private void clearAllTags(RadioGroup radioGroup) {&#10;        // Clear tags của tất cả RadioButton trong group&#10;        for (int i = 0; i &lt; radioGroup.getChildCount(); i++) {&#10;            View child = radioGroup.getChildAt(i);&#10;            if (child instanceof LinearLayout) {&#10;                LinearLayout linearLayout = (LinearLayout) child;&#10;                for (int j = 0; j &lt; linearLayout.getChildCount(); j++) {&#10;                    View subChild = linearLayout.getChildAt(j);&#10;                    if (subChild instanceof RadioButton) {&#10;                        subChild.setTag(null);&#10;                    }&#10;                }&#10;            } else if (child instanceof RadioButton) {&#10;                child.setTag(null);&#10;            }&#10;        }&#10;    }&#10;&#10;    private void clearOtherButtonTags(RadioGroup radioGroup, RadioButton selectedButton) {&#10;        RadioButton rbA = radioGroup.findViewById(R.id.rb_option_a);&#10;        RadioButton rbB = radioGroup.findViewById(R.id.rb_option_b);&#10;        RadioButton rbC = radioGroup.findViewById(R.id.rb_option_c);&#10;        RadioButton rbD = radioGroup.findViewById(R.id.rb_option_d);&#10;&#10;        if (rbA != null &amp;&amp; rbA != selectedButton) rbA.setTag(false);&#10;        if (rbB != null &amp;&amp; rbB != selectedButton) rbB.setTag(false);&#10;        if (rbC != null &amp;&amp; rbC != selectedButton) rbC.setTag(false);&#10;        if (rbD != null &amp;&amp; rbD != selectedButton) rbD.setTag(false);&#10;    }&#10;&#10;    private void setupRadioGroupChangeListener(RadioGroup radioGroup) {&#10;        radioGroup.setOnCheckedChangeListener((group, checkedId) -&gt; {&#10;            android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;RadioGroup checked changed to: &quot; + checkedId);&#10;        });&#10;    }&#10;&#10;    public void removeQuestion(QuestionViewData questionData) {&#10;        if (questionViews.size() &lt;= 2) {&#10;            // Không cho phép xóa nếu chỉ còn 2 câu hỏi&#10;            return;&#10;        }&#10;&#10;        questionsContainer.removeView(questionData.questionView);&#10;        questionViews.remove(questionData);&#10;&#10;        updateQuestionNumbers();&#10;        updateDeleteButtonsVisibility();&#10;&#10;        if (listener != null) {&#10;            listener.onQuestionCountChanged(questionViews.size());&#10;        }&#10;    }&#10;&#10;    public void removeLastQuestion() {&#10;        if (questionViews.size() &lt;= 2) {&#10;            return;&#10;        }&#10;&#10;        QuestionViewData lastQuestion = questionViews.get(questionViews.size() - 1);&#10;        removeQuestion(lastQuestion);&#10;    }&#10;&#10;    private void updateQuestionNumbers() {&#10;        for (int i = 0; i &lt; questionViews.size(); i++) {&#10;            questionViews.get(i).tvQuestionNumber.setText(&quot;Câu hỏi &quot; + (i + 1) + &quot;:&quot;);&#10;        }&#10;    }&#10;&#10;    private void updateDeleteButtonsVisibility() {&#10;        boolean showDeleteButtons = questionViews.size() &gt; 2;&#10;        for (QuestionViewData questionData : questionViews) {&#10;            questionData.btnDelete.setVisibility(showDeleteButtons ? View.VISIBLE : View.GONE);&#10;        }&#10;    }&#10;&#10;    public List&lt;QuestionViewData&gt; getQuestionViews() {&#10;        return questionViews;&#10;    }&#10;&#10;    public int getQuestionCount() {&#10;        return questionViews.size();&#10;    }&#10;&#10;    public void initializeWithDefaultQuestions() {&#10;        // Thêm 2 câu hỏi mặc định&#10;        addQuestion();&#10;        addQuestion();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/border_gray.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/border_gray.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;stroke&#10;        android:width=&quot;1dp&quot;&#10;        android:color=&quot;@android:color/darker_gray&quot; /&gt;&#10;    &lt;corners android:radius=&quot;8dp&quot; /&gt;&#10;    &lt;solid android:color=&quot;@android:color/white&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/rounded_background.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/rounded_background.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;rectangle&quot;&gt;&#10;    &lt;corners android:radius=&quot;8dp&quot; /&gt;&#10;    &lt;solid android:color=&quot;@android:color/transparent&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_course_management.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_course_management.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/background_light&quot;&gt;&#10;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:theme=&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;?attr/actionBarSize&quot;&#10;            android:background=&quot;?attr/colorPrimary&quot;&#10;            app:title=&quot;Quản lý khóa học&quot;&#10;            app:titleTextColor=&quot;@android:color/white&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;&gt;&#10;&#10;        &lt;!-- Header Stats Card with Animation --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_margin=&quot;16dp&quot;&#10;            app:cardCornerRadius=&quot;12dp&quot;&#10;            app:cardElevation=&quot;8dp&quot;&#10;            android:alpha=&quot;0&quot;&#10;            android:id=&quot;@+id/stats_card&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&#10;                android:padding=&quot;20dp&quot;&#10;                android:background=&quot;@drawable/gradient_card_background&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot; Tổng quan khóa học&quot;&#10;                    android:textSize=&quot;18sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:textColor=&quot;@android:color/white&quot;&#10;                    android:layout_marginBottom=&quot;12dp&quot; /&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;0dp&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_weight=&quot;1&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_total_courses&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;0&quot;&#10;                            android:textSize=&quot;24sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/white&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Khóa học&quot;&#10;                            android:textSize=&quot;12sp&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:alpha=&quot;0.8&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;0dp&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_weight=&quot;1&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_total_students&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;0&quot;&#10;                            android:textSize=&quot;24sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/white&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Học viên&quot;&#10;                            android:textSize=&quot;12sp&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:alpha=&quot;0.8&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;0dp&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_weight=&quot;1&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_avg_rating&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;0.0&quot;&#10;                            android:textSize=&quot;24sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/white&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Đánh giá&quot;&#10;                            android:textSize=&quot;12sp&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:alpha=&quot;0.8&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;!-- Search and Filter Section --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:padding=&quot;16dp&quot;&#10;            android:layout_marginTop=&quot;-8dp&quot;&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_search&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:hint=&quot; Tìm kiếm khóa học...&quot;&#10;                    android:inputType=&quot;text&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btn_filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;56dp&quot;&#10;                android:text=&quot;Filter&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                app:icon=&quot;@android:drawable/ic_menu_sort_by_size&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Courses RecyclerView --&gt;&#10;        &lt;FrameLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;0dp&quot;&#10;            android:layout_weight=&quot;1&quot;&gt;&#10;&#10;            &lt;androidx.recyclerview.widget.RecyclerView&#10;                android:id=&quot;@+id/rv_courses&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:padding=&quot;8dp&quot;&#10;                android:clipToPadding=&quot;false&quot;&#10;                android:scrollbars=&quot;vertical&quot; /&gt;&#10;&#10;            &lt;!-- Empty State --&gt;&#10;            &lt;LinearLayout&#10;                android:id=&quot;@+id/tv_no_courses&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:orientation=&quot;vertical&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:visibility=&quot;gone&quot;&#10;                android:padding=&quot;32dp&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;120dp&quot;&#10;                    android:layout_height=&quot;120dp&quot;&#10;                    android:src=&quot;@android:drawable/ic_menu_agenda&quot;&#10;                    android:alpha=&quot;0.3&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot; Chưa có khóa học nào&quot;&#10;                    android:textSize=&quot;18sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:textColor=&quot;@color/text_secondary&quot;&#10;                    android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Hãy tạo khóa học đầu tiên của bạn!&quot;&#10;                    android:textSize=&quot;14sp&quot;&#10;                    android:textColor=&quot;@color/text_secondary&quot;&#10;                    android:textAlignment=&quot;center&quot;&#10;                    android:layout_marginBottom=&quot;24dp&quot; /&gt;&#10;&#10;                &lt;com.google.android.material.button.MaterialButton&#10;                    android:id=&quot;@+id/btn_create_first_course&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Tạo khóa học đầu tiên&quot;&#10;                    app:icon=&quot;@android:drawable/ic_input_add&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/FrameLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Floating Action Button with Animation --&gt;&#10;    &lt;com.google.android.material.floatingactionbutton.FloatingActionButton&#10;        android:id=&quot;@+id/fab_add_course&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_gravity=&quot;bottom|end&quot;&#10;        android:layout_margin=&quot;16dp&quot;&#10;        android:src=&quot;@android:drawable/ic_input_add&quot;&#10;        app:tint=&quot;@android:color/white&quot;&#10;        app:backgroundTint=&quot;?attr/colorPrimary&quot;&#10;        app:elevation=&quot;6dp&quot;&#10;        app:pressedTranslationZ=&quot;12dp&quot; /&gt;&#10;&#10;&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;#F8F9FA&quot;&gt;&#10;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:theme=&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;&#10;        app:elevation=&quot;4dp&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;?attr/actionBarSize&quot;&#10;            android:background=&quot;@android:color/holo_blue_dark&quot;&#10;            app:title=&quot; Quản lý khóa học&quot;&#10;            app:titleTextColor=&quot;@android:color/white&quot;&#10;            app:titleTextAppearance=&quot;@style/TextAppearance.AppCompat.Large&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;androidx.core.widget.NestedScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;16dp&quot;&gt;&#10;&#10;            &lt;!-- Header Stats Card --&gt;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:id=&quot;@+id/stats_card&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;20dp&quot;&#10;                app:cardCornerRadius=&quot;16dp&quot;&#10;                app:cardElevation=&quot;8dp&quot;&#10;                android:backgroundTint=&quot;@android:color/holo_blue_dark&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;24dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot; Tổng quan khóa học&quot;&#10;                        android:textSize=&quot;20sp&quot;&#10;                        android:textStyle=&quot;bold&quot;&#10;                        android:textColor=&quot;@android:color/white&quot;&#10;                        android:layout_marginBottom=&quot;20dp&quot;&#10;                        android:fontFamily=&quot;sans-serif-medium&quot; /&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:weightSum=&quot;3&quot;&gt;&#10;&#10;                        &lt;!-- Tổng khóa học --&gt;&#10;                        &lt;LinearLayout&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:orientation=&quot;vertical&quot;&#10;                            android:gravity=&quot;center&quot;&#10;                            android:padding=&quot;12dp&quot;&gt;&#10;&#10;                            &lt;TextView&#10;                                android:id=&quot;@+id/tv_total_courses&quot;&#10;                                android:layout_width=&quot;wrap_content&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:text=&quot;0&quot;&#10;                                android:textSize=&quot;32sp&quot;&#10;                                android:textStyle=&quot;bold&quot;&#10;                                android:textColor=&quot;@android:color/white&quot;&#10;                                android:fontFamily=&quot;sans-serif-medium&quot; /&gt;&#10;&#10;                            &lt;TextView&#10;                                android:layout_width=&quot;wrap_content&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:text=&quot;Khóa học&quot;&#10;                                android:textSize=&quot;14sp&quot;&#10;                                android:textColor=&quot;@android:color/white&quot;&#10;                                android:alpha=&quot;0.9&quot;&#10;                                android:fontFamily=&quot;sans-serif&quot;&#10;                                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;                        &lt;/LinearLayout&gt;&#10;&#10;                        &lt;!-- Tổng học viên --&gt;&#10;                        &lt;LinearLayout&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:orientation=&quot;vertical&quot;&#10;                            android:gravity=&quot;center&quot;&#10;                            android:padding=&quot;12dp&quot;&gt;&#10;&#10;                            &lt;TextView&#10;                                android:id=&quot;@+id/tv_total_students&quot;&#10;                                android:layout_width=&quot;wrap_content&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:text=&quot;0&quot;&#10;                                android:textSize=&quot;32sp&quot;&#10;                                android:textStyle=&quot;bold&quot;&#10;                                android:textColor=&quot;@android:color/white&quot;&#10;                                android:fontFamily=&quot;sans-serif-medium&quot; /&gt;&#10;&#10;                            &lt;TextView&#10;                                android:layout_width=&quot;wrap_content&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:text=&quot;Học viên&quot;&#10;                                android:textSize=&quot;14sp&quot;&#10;                                android:textColor=&quot;@android:color/white&quot;&#10;                                android:alpha=&quot;0.9&quot;&#10;                                android:fontFamily=&quot;sans-serif&quot;&#10;                                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;                        &lt;/LinearLayout&gt;&#10;&#10;                        &lt;!-- Đánh giá trung bình --&gt;&#10;                        &lt;LinearLayout&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:orientation=&quot;vertical&quot;&#10;                            android:gravity=&quot;center&quot;&#10;                            android:padding=&quot;12dp&quot;&gt;&#10;&#10;                            &lt;TextView&#10;                                android:id=&quot;@+id/tv_avg_rating&quot;&#10;                                android:layout_width=&quot;wrap_content&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:text=&quot;5.0&quot;&#10;                                android:textSize=&quot;32sp&quot;&#10;                                android:textStyle=&quot;bold&quot;&#10;                                android:textColor=&quot;@android:color/white&quot;&#10;                                android:fontFamily=&quot;sans-serif-medium&quot; /&gt;&#10;&#10;                            &lt;TextView&#10;                                android:layout_width=&quot;wrap_content&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:text=&quot;⭐ Đánh giá&quot;&#10;                                android:textSize=&quot;14sp&quot;&#10;                                android:textColor=&quot;@android:color/white&quot;&#10;                                android:alpha=&quot;0.9&quot;&#10;                                android:fontFamily=&quot;sans-serif&quot;&#10;                                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;                        &lt;/LinearLayout&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;!-- Search and Filter Section --&gt;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;12dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&#10;                android:backgroundTint=&quot;@android:color/white&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;horizontal&quot;&#10;                    android:padding=&quot;16dp&quot;&#10;                    android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputLayout&#10;                        android:layout_width=&quot;0dp&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_weight=&quot;1&quot;&#10;                        android:layout_marginEnd=&quot;12dp&quot;&#10;                        style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                        app:boxCornerRadiusTopStart=&quot;8dp&quot;&#10;                        app:boxCornerRadiusTopEnd=&quot;8dp&quot;&#10;                        app:boxCornerRadiusBottomStart=&quot;8dp&quot;&#10;                        app:boxCornerRadiusBottomEnd=&quot;8dp&quot;&gt;&#10;&#10;                        &lt;com.google.android.material.textfield.TextInputEditText&#10;                            android:id=&quot;@+id/et_search&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:hint=&quot; Tìm kiếm khóa học...&quot;&#10;                            android:inputType=&quot;text&quot;&#10;                            android:textSize=&quot;16sp&quot;&#10;                            android:fontFamily=&quot;sans-serif&quot; /&gt;&#10;&#10;                    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                    &lt;com.google.android.material.button.MaterialButton&#10;                        android:id=&quot;@+id/btn_filter&quot;&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;56dp&quot;&#10;                        android:text=&quot; Lọc&quot;&#10;                        android:textSize=&quot;14sp&quot;&#10;                        android:fontFamily=&quot;sans-serif-medium&quot;&#10;                        style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                        app:cornerRadius=&quot;8dp&quot;&#10;                        app:strokeColor=&quot;@android:color/holo_blue_dark&quot;&#10;                        app:strokeWidth=&quot;2dp&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;!-- Courses Section --&gt;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                app:cardCornerRadius=&quot;12dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&#10;                android:backgroundTint=&quot;@android:color/white&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                    &lt;!-- Header --&gt;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:padding=&quot;16dp&quot;&#10;                        android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot; Danh sách khóa học&quot;&#10;                            android:textSize=&quot;18sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;#2C3E50&quot;&#10;                            android:fontFamily=&quot;sans-serif-medium&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_course_count&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;0 khóa học&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;#7F8C8D&quot;&#10;                            android:fontFamily=&quot;sans-serif&quot;&#10;                            android:background=&quot;@drawable/rounded_background&quot;&#10;                            android:backgroundTint=&quot;#ECF0F1&quot;&#10;                            android:padding=&quot;8dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;!-- Divider --&gt;&#10;                    &lt;View&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;1dp&quot;&#10;                        android:background=&quot;#E0E0E0&quot;&#10;                        android:layout_marginHorizontal=&quot;16dp&quot; /&gt;&#10;&#10;                    &lt;!-- RecyclerView Container --&gt;&#10;                    &lt;FrameLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:minHeight=&quot;300dp&quot;&gt;&#10;&#10;                        &lt;androidx.recyclerview.widget.RecyclerView&#10;                            android:id=&quot;@+id/rv_courses&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:padding=&quot;12dp&quot;&#10;                            android:clipToPadding=&quot;false&quot;&#10;                            android:scrollbars=&quot;vertical&quot; /&gt;&#10;&#10;                        &lt;!-- Empty State --&gt;&#10;                        &lt;LinearLayout&#10;                            android:id=&quot;@+id/tv_no_courses&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;match_parent&quot;&#10;                            android:orientation=&quot;vertical&quot;&#10;                            android:gravity=&quot;center&quot;&#10;                            android:visibility=&quot;gone&quot;&#10;                            android:padding=&quot;32dp&quot;&gt;&#10;&#10;                            &lt;TextView&#10;                                android:layout_width=&quot;wrap_content&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:text=&quot;&quot;&#10;                                android:textSize=&quot;72sp&quot;&#10;                                android:layout_marginBottom=&quot;16dp&quot;&#10;                                android:alpha=&quot;0.3&quot; /&gt;&#10;&#10;                            &lt;TextView&#10;                                android:layout_width=&quot;wrap_content&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:text=&quot;Chưa có khóa học nào&quot;&#10;                                android:textSize=&quot;20sp&quot;&#10;                                android:textStyle=&quot;bold&quot;&#10;                                android:textColor=&quot;#34495E&quot;&#10;                                android:layout_marginBottom=&quot;8dp&quot;&#10;                                android:fontFamily=&quot;sans-serif-medium&quot; /&gt;&#10;&#10;                            &lt;TextView&#10;                                android:layout_width=&quot;wrap_content&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:text=&quot;Hãy tạo khóa học đầu tiên của bạn\nđể bắt đầu hành trình giảng dạy!&quot;&#10;                                android:textSize=&quot;16sp&quot;&#10;                                android:textColor=&quot;#7F8C8D&quot;&#10;                                android:textAlignment=&quot;center&quot;&#10;                                android:lineSpacingExtra=&quot;4dp&quot;&#10;                                android:layout_marginBottom=&quot;24dp&quot;&#10;                                android:fontFamily=&quot;sans-serif&quot; /&gt;&#10;&#10;                            &lt;com.google.android.material.button.MaterialButton&#10;                                android:id=&quot;@+id/btn_create_first_course&quot;&#10;                                android:layout_width=&quot;wrap_content&quot;&#10;                                android:layout_height=&quot;wrap_content&quot;&#10;                                android:text=&quot;✨ Tạo khóa học đầu tiên&quot;&#10;                                android:textSize=&quot;16sp&quot;&#10;                                android:fontFamily=&quot;sans-serif-medium&quot;&#10;                                android:backgroundTint=&quot;@android:color/holo_blue_dark&quot;&#10;                                android:textColor=&quot;@android:color/white&quot;&#10;                                app:cornerRadius=&quot;12dp&quot;&#10;                                android:paddingHorizontal=&quot;24dp&quot;&#10;                                android:paddingVertical=&quot;12dp&quot; /&gt;&#10;&#10;                        &lt;/LinearLayout&gt;&#10;&#10;                    &lt;/FrameLayout&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/androidx.core.widget.NestedScrollView&gt;&#10;&#10;    &lt;!-- Floating Action Button --&gt;&#10;    &lt;com.google.android.material.floatingactionbutton.FloatingActionButton&#10;        android:id=&quot;@+id/fab_add_course&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_gravity=&quot;bottom|end&quot;&#10;        android:layout_margin=&quot;24dp&quot;&#10;        android:src=&quot;@android:drawable/ic_input_add&quot;&#10;        app:tint=&quot;@android:color/white&quot;&#10;        app:backgroundTint=&quot;@android:color/holo_blue_dark&quot;&#10;        app:elevation=&quot;8dp&quot;&#10;        app:pressedTranslationZ=&quot;16dp&quot;&#10;        app:borderWidth=&quot;0dp&quot; /&gt;&#10;&#10;&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_create_quiz.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_create_quiz.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;#F5F5F5&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;com.google.android.material.appbar.AppBarLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;            &lt;androidx.appcompat.widget.Toolbar&#10;                android:id=&quot;@+id/toolbar&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;?attr/actionBarSize&quot;&#10;                android:background=&quot;?attr/colorPrimary&quot;&#10;                android:theme=&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;&#10;                app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot; /&gt;&#10;&#10;        &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;16dp&quot;&gt;&#10;&#10;            &lt;!-- Quiz Info Card --&gt;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Thông tin bài kiểm tra&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot;&#10;                        android:textColor=&quot;@android:color/black&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot;&#10;                        android:hint=&quot;Tên bài kiểm tra&quot;&gt;&#10;&#10;                        &lt;com.google.android.material.textfield.TextInputEditText&#10;                            android:id=&quot;@+id/et_quiz_title&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;                    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                    &lt;TextView&#10;                        android:id=&quot;@+id/tv_course_name&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Khóa học: &quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textColor=&quot;@android:color/black&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;!-- Questions Card --&gt;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:id=&quot;@+id/ll_questions_container&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Câu hỏi trắc nghiệm&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot;&#10;                        android:textColor=&quot;@android:color/black&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;                    &lt;!-- Question 1 --&gt;&#10;                    &lt;include layout=&quot;@layout/item_quiz_question&quot;&#10;                        android:id=&quot;@+id/question_1&quot; /&gt;&#10;&#10;                    &lt;!-- Question 2 --&gt;&#10;                    &lt;include layout=&quot;@layout/item_quiz_question&quot;&#10;                        android:id=&quot;@+id/question_2&quot; /&gt;&#10;&#10;                    &lt;!-- Question 3 --&gt;&#10;                    &lt;include layout=&quot;@layout/item_quiz_question&quot;&#10;                        android:id=&quot;@+id/question_3&quot; /&gt;&#10;&#10;                    &lt;!-- Question 4 --&gt;&#10;                    &lt;include layout=&quot;@layout/item_quiz_question&quot;&#10;                        android:id=&quot;@+id/question_4&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;!-- Create Quiz Button --&gt;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_create_quiz&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Tạo bài kiểm tra&quot;&#10;                android:backgroundTint=&quot;@android:color/holo_purple&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:layout_marginTop=&quot;16dp&quot;&#10;                android:padding=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/ScrollView&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;#F5F5F5&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;com.google.android.material.appbar.AppBarLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;            &lt;androidx.appcompat.widget.Toolbar&#10;                android:id=&quot;@+id/toolbar&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;?attr/actionBarSize&quot;&#10;                android:background=&quot;?attr/colorPrimary&quot;&#10;                android:theme=&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;&#10;                app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot; /&gt;&#10;&#10;        &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;16dp&quot;&gt;&#10;&#10;            &lt;!-- Quiz Info Card --&gt;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Thông tin bài kiểm tra&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot;&#10;                        android:textColor=&quot;@android:color/black&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot;&#10;                        android:hint=&quot;Tên bài kiểm tra&quot;&gt;&#10;&#10;                        &lt;com.google.android.material.textfield.TextInputEditText&#10;                            android:id=&quot;@+id/et_quiz_title&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;                    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                    &lt;TextView&#10;                        android:id=&quot;@+id/tv_course_name&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Khóa học: &quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textColor=&quot;@android:color/black&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;!-- Questions Card --&gt;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Câu hỏi trắc nghiệm&quot;&#10;                            android:textSize=&quot;18sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/black&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_question_count&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;(2 câu)&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;@android:color/darker_gray&quot;&#10;                            android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;!-- Dynamic Questions Container --&gt;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/ll_questions_container&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;vertical&quot; /&gt;&#10;&#10;                    &lt;!-- Add/Remove Question Buttons --&gt;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:layout_marginTop=&quot;16dp&quot;&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_add_question&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;+ Thêm câu hỏi&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_green_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_remove_question&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;- Xóa câu hỏi&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_red_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;!-- Create Quiz Button --&gt;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_create_quiz&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Tạo bài kiểm tra&quot;&#10;                android:backgroundTint=&quot;@android:color/holo_purple&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:layout_marginTop=&quot;16dp&quot;&#10;                android:padding=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/ScrollView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_select_course_for_quiz.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_select_course_for_quiz.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:background=&quot;#F5F5F5&quot;&gt;&#10;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;?attr/actionBarSize&quot;&#10;            android:background=&quot;?attr/colorPrimary&quot;&#10;            android:theme=&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;&#10;            app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Chọn khóa học để tạo bài kiểm tra&quot;&#10;            android:textSize=&quot;20sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textColor=&quot;@android:color/black&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;&#10;            android:gravity=&quot;center&quot; /&gt;&#10;&#10;        &lt;androidx.recyclerview.widget.RecyclerView&#10;            android:id=&quot;@+id/rv_courses&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_teacher_dashboard.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_teacher_dashboard.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:background=&quot;#F5F5F5&quot;&gt;&#10;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;?attr/actionBarSize&quot;&#10;            android:background=&quot;?attr/colorPrimary&quot;&#10;            android:theme=&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;&#10;            app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;ScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&gt;&#10;&#10;            &lt;!-- Welcome Text --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_welcome&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Xin chào, Giáo viên&quot;&#10;                android:textSize=&quot;24sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:textColor=&quot;@android:color/black&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&#10;                android:gravity=&quot;center&quot; /&gt;&#10;&#10;            &lt;!-- Statistics Cards --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;100dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginEnd=&quot;8dp&quot;&#10;                    app:cardCornerRadius=&quot;8dp&quot;&#10;                    app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:padding=&quot;16dp&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_courses_count&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;0&quot;&#10;                            android:textSize=&quot;32sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/holo_blue_dark&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Khóa học&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;@android:color/darker_gray&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;100dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginStart=&quot;8dp&quot;&#10;                    android:layout_marginEnd=&quot;8dp&quot;&#10;                    app:cardCornerRadius=&quot;8dp&quot;&#10;                    app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:padding=&quot;16dp&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_students_count&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;0&quot;&#10;                            android:textSize=&quot;32sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/holo_green_dark&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Học viên&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;@android:color/darker_gray&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;100dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginStart=&quot;8dp&quot;&#10;                    app:cardCornerRadius=&quot;8dp&quot;&#10;                    app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:padding=&quot;16dp&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_pending_requests_count&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;0&quot;&#10;                            android:textSize=&quot;32sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/holo_orange_dark&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Yêu cầu&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;@android:color/darker_gray&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Action Buttons --&gt;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Quản lý khóa học&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot;&#10;                        android:textColor=&quot;@android:color/black&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_create_course&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Tạo khóa học&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_blue_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_manage_courses&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Quản lý khóa học&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_blue_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_view_requests&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Xem yêu cầu&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_orange_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_view_students&quot;&#10;                            android:id=&quot;@+id/btn_create_quiz&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Xem học viên&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_green_dark&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_purple&quot;&#10;=======&#10;                            android:id=&quot;@+id/btn_view_students&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Xem học viên&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_green_dark&quot;&#10;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 542cd6292b68990ee1f3d7aca232549a251d4232&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/ScrollView&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:background=&quot;#F5F5F5&quot;&gt;&#10;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;?attr/actionBarSize&quot;&#10;            android:background=&quot;?attr/colorPrimary&quot;&#10;            android:theme=&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;&#10;            app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;ScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&gt;&#10;&#10;            &lt;!-- Welcome Text --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_welcome&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Xin chào, Giáo viên&quot;&#10;                android:textSize=&quot;24sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:textColor=&quot;@android:color/black&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&#10;                android:gravity=&quot;center&quot; /&gt;&#10;&#10;            &lt;!-- Statistics Cards --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;100dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginEnd=&quot;8dp&quot;&#10;                    app:cardCornerRadius=&quot;8dp&quot;&#10;                    app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:padding=&quot;16dp&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_courses_count&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;0&quot;&#10;                            android:textSize=&quot;32sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/holo_blue_dark&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Khóa học&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;@android:color/darker_gray&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;100dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginStart=&quot;8dp&quot;&#10;                    android:layout_marginEnd=&quot;8dp&quot;&#10;                    app:cardCornerRadius=&quot;8dp&quot;&#10;                    app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:padding=&quot;16dp&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_students_count&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;0&quot;&#10;                            android:textSize=&quot;32sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/holo_green_dark&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Học viên&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;@android:color/darker_gray&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;100dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginStart=&quot;8dp&quot;&#10;                    app:cardCornerRadius=&quot;8dp&quot;&#10;                    app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:padding=&quot;16dp&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_pending_requests_count&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;0&quot;&#10;                            android:textSize=&quot;32sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/holo_orange_dark&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Yêu cầu&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;@android:color/darker_gray&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Action Buttons --&gt;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Quản lý khóa học&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot;&#10;                        android:textColor=&quot;@android:color/black&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_create_course&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Tạo khóa học&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_blue_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_manage_courses&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Quản lý khóa học&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_blue_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_view_requests&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Xem yêu cầu&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_orange_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_create_quiz&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Tạo bài kiểm tra&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_purple&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/ScrollView&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/dialog_course_filter.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/dialog_course_filter.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;24dp&quot;&gt;&#10;&#10;    &lt;!-- Header --&gt;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot; Lọc khóa học&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;#2C3E50&quot;&#10;        android:fontFamily=&quot;sans-serif-medium&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:layout_marginBottom=&quot;24dp&quot; /&gt;&#10;&#10;    &lt;!-- Category Filter --&gt;&#10;    &lt;TextView&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot; Danh mục:&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;#34495E&quot;&#10;        android:fontFamily=&quot;sans-serif-medium&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;androidx.cardview.widget.CardView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;20dp&quot;&#10;        app:cardCornerRadius=&quot;8dp&quot;&#10;        app:cardElevation=&quot;2dp&quot;&#10;        android:backgroundTint=&quot;#F8F9FA&quot;&gt;&#10;&#10;        &lt;Spinner&#10;            android:id=&quot;@+id/spinner_category&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:background=&quot;@android:color/transparent&quot; /&gt;&#10;&#10;    &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;    &lt;!-- Level Filter --&gt;&#10;    &lt;TextView&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot; Cấp độ:&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;#34495E&quot;&#10;        android:fontFamily=&quot;sans-serif-medium&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;androidx.cardview.widget.CardView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;32dp&quot;&#10;        app:cardCornerRadius=&quot;8dp&quot;&#10;        app:cardElevation=&quot;2dp&quot;&#10;        android:backgroundTint=&quot;#F8F9FA&quot;&gt;&#10;&#10;        &lt;Spinner&#10;            android:id=&quot;@+id/spinner_level&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:background=&quot;@android:color/transparent&quot; /&gt;&#10;&#10;    &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;    &lt;!-- Buttons --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:gravity=&quot;end&quot;&gt;&#10;&#10;        &lt;com.google.android.material.button.MaterialButton&#10;            android:id=&quot;@+id/btn_reset_filter&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot; Đặt lại&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:fontFamily=&quot;sans-serif-medium&quot;&#10;            style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;            app:cornerRadius=&quot;8dp&quot;&#10;            app:strokeColor=&quot;#E74C3C&quot;&#10;            app:strokeWidth=&quot;2dp&quot;&#10;            android:textColor=&quot;#E74C3C&quot;&#10;            android:layout_marginEnd=&quot;12dp&quot; /&gt;&#10;&#10;        &lt;com.google.android.material.button.MaterialButton&#10;            android:id=&quot;@+id/btn_apply_filter&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;✅ Áp dụng&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:fontFamily=&quot;sans-serif-medium&quot;&#10;            android:backgroundTint=&quot;@android:color/holo_blue_dark&quot;&#10;            android:textColor=&quot;@android:color/white&quot;&#10;            app:cornerRadius=&quot;8dp&quot;&#10;            android:paddingHorizontal=&quot;24dp&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_course.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_course.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:id=&quot;@+id/card_course&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_margin=&quot;8dp&quot;&#10;    app:cardCornerRadius=&quot;12dp&quot;&#10;    app:cardElevation=&quot;6dp&quot;&#10;    android:foreground=&quot;?android:attr/selectableItemBackground&quot;&#10;    android:clickable=&quot;true&quot;&#10;    android:focusable=&quot;true&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;!-- Course Image --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;80dp&quot;&#10;            android:layout_height=&quot;80dp&quot;&#10;            app:cardCornerRadius=&quot;8dp&quot;&#10;            app:cardElevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/iv_course_image&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:scaleType=&quot;centerCrop&quot;&#10;                android:src=&quot;@drawable/ic_course_default&quot; /&gt;&#10;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;!-- Course Content --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;            &lt;!-- Title and Level --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:layout_marginBottom=&quot;4dp&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tv_course_title&quot;&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:text=&quot;Course Title&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:textColor=&quot;@color/text_primary&quot;&#10;                    android:maxLines=&quot;2&quot;&#10;                    android:ellipsize=&quot;end&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tv_course_level&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Beginner&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textColor=&quot;@android:color/white&quot;&#10;                    android:background=&quot;@drawable/bg_level_badge&quot;&#10;                    android:paddingHorizontal=&quot;8dp&quot;&#10;                    android:paddingVertical=&quot;2dp&quot;&#10;                    android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Description --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_course_description&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Course description here...&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:textColor=&quot;@color/text_secondary&quot;&#10;                android:maxLines=&quot;2&quot;&#10;                android:ellipsize=&quot;end&quot;&#10;                android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;!-- Category and Duration --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:layout_marginBottom=&quot;4dp&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tv_course_category&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Grammar&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textColor=&quot;@color/accent_color&quot;&#10;                    android:background=&quot;@drawable/bg_category_badge&quot;&#10;                    android:paddingHorizontal=&quot;6dp&quot;&#10;                    android:paddingVertical=&quot;2dp&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tv_course_duration&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;⏱ 20 giờ&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textColor=&quot;@color/text_secondary&quot;&#10;                    android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;                &lt;View&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;1dp&quot;&#10;                    android:layout_weight=&quot;1&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tv_course_rating&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;4.5★&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textColor=&quot;@color/rating_color&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Students and Date --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tv_enrolled_students&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot; 15 học viên&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textColor=&quot;@color/text_secondary&quot; /&gt;&#10;&#10;                &lt;View&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;1dp&quot;&#10;                    android:layout_weight=&quot;1&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tv_created_date&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot; 15/07/2024&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textColor=&quot;@color/text_secondary&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Action Buttons --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:gravity=&quot;end&quot;&gt;&#10;&#10;                &lt;Button&#10;                    android:id=&quot;@+id/btn_manage_lessons&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;36dp&quot;&#10;                    android:layout_marginEnd=&quot;8dp&quot;&#10;                    android:minWidth=&quot;0dp&quot;&#10;                    android:paddingLeft=&quot;12dp&quot;&#10;                    android:paddingRight=&quot;12dp&quot;&#10;                    android:text=&quot;Quản lý bài học&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:gravity=&quot;center&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Course Status Indicator --&gt;&#10;        &lt;View&#10;            android:id=&quot;@+id/view_status_indicator&quot;&#10;            android:layout_width=&quot;4dp&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:background=&quot;@color/status_active&quot;&#10;            android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/androidx.cardview.widget.CardView&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:id=&quot;@+id/card_course&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_margin=&quot;8dp&quot;&#10;    app:cardCornerRadius=&quot;12dp&quot;&#10;    app:cardElevation=&quot;6dp&quot;&#10;    android:foreground=&quot;?android:attr/selectableItemBackground&quot;&#10;    android:clickable=&quot;true&quot;&#10;    android:focusable=&quot;true&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;!-- Course Image --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;80dp&quot;&#10;            android:layout_height=&quot;80dp&quot;&#10;            app:cardCornerRadius=&quot;8dp&quot;&#10;            app:cardElevation=&quot;2dp&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/iv_course_image&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:scaleType=&quot;centerCrop&quot;&#10;                android:src=&quot;@drawable/ic_course_default&quot; /&gt;&#10;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;!-- Course Content --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:layout_marginStart=&quot;16dp&quot;&gt;&#10;&#10;            &lt;!-- Title and Level --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:layout_marginBottom=&quot;4dp&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tv_course_title&quot;&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:text=&quot;Course Title&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:textColor=&quot;@color/text_primary&quot;&#10;                    android:maxLines=&quot;2&quot;&#10;                    android:ellipsize=&quot;end&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tv_course_level&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Beginner&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textColor=&quot;@android:color/white&quot;&#10;                    android:background=&quot;@drawable/bg_level_badge&quot;&#10;                    android:paddingHorizontal=&quot;8dp&quot;&#10;                    android:paddingVertical=&quot;2dp&quot;&#10;                    android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Description --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_course_description&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Course description here...&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:textColor=&quot;@color/text_secondary&quot;&#10;                android:maxLines=&quot;2&quot;&#10;                android:ellipsize=&quot;end&quot;&#10;                android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;!-- Category and Duration --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:layout_marginBottom=&quot;4dp&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tv_course_category&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Grammar&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textColor=&quot;@color/accent_color&quot;&#10;                    android:background=&quot;@drawable/bg_category_badge&quot;&#10;                    android:paddingHorizontal=&quot;6dp&quot;&#10;                    android:paddingVertical=&quot;2dp&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tv_course_duration&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;⏱ 20 giờ&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textColor=&quot;@color/text_secondary&quot;&#10;                    android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;                &lt;View&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;1dp&quot;&#10;                    android:layout_weight=&quot;1&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tv_course_rating&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;4.5★&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textColor=&quot;@color/rating_color&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Students and Date --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tv_enrolled_students&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot; 15 học viên&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textColor=&quot;@color/text_secondary&quot; /&gt;&#10;&#10;                &lt;View&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;1dp&quot;&#10;                    android:layout_weight=&quot;1&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tv_created_date&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot; 15/07/2024&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textColor=&quot;@color/text_secondary&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Action Buttons --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:gravity=&quot;end&quot;&gt;&#10;&#10;                &lt;Button&#10;                    android:id=&quot;@+id/btn_manage_lessons&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;36dp&quot;&#10;                    android:layout_marginEnd=&quot;8dp&quot;&#10;                    android:minWidth=&quot;0dp&quot;&#10;                    android:paddingLeft=&quot;12dp&quot;&#10;                    android:paddingRight=&quot;12dp&quot;&#10;                    android:text=&quot;Quản lý bài học&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:gravity=&quot;center&quot; /&gt;&#10;&#10;                &lt;Button&#10;                    android:id=&quot;@+id/btn_edit_course&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.Button&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;36dp&quot;&#10;                    android:minWidth=&quot;0dp&quot;&#10;                    android:paddingLeft=&quot;12dp&quot;&#10;                    android:paddingRight=&quot;12dp&quot;&#10;                    android:text=&quot;✏️ Chỉnh sửa&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:gravity=&quot;center&quot;&#10;                    android:backgroundTint=&quot;@android:color/holo_blue_dark&quot;&#10;                    android:textColor=&quot;@android:color/white&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Course Status Indicator --&gt;&#10;        &lt;View&#10;            android:id=&quot;@+id/view_status_indicator&quot;&#10;            android:layout_width=&quot;4dp&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:background=&quot;@color/status_active&quot;&#10;            android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/androidx.cardview.widget.CardView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_course_select.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_course_select.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_margin=&quot;8dp&quot;&#10;    app:cardCornerRadius=&quot;8dp&quot;&#10;    app:cardElevation=&quot;4dp&quot;&#10;    android:foreground=&quot;?android:attr/selectableItemBackground&quot;&#10;    android:clickable=&quot;true&quot;&#10;    android:focusable=&quot;true&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_course_name&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Tên khóa học&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textColor=&quot;@android:color/black&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_course_description&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Mô tả khóa học&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textColor=&quot;@android:color/darker_gray&quot;&#10;            android:maxLines=&quot;2&quot;&#10;            android:ellipsize=&quot;end&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Nhấn để chọn khóa học này&quot;&#10;            android:textSize=&quot;12sp&quot;&#10;            android:textStyle=&quot;italic&quot;&#10;            android:textColor=&quot;@android:color/holo_purple&quot;&#10;            android:layout_marginTop=&quot;8dp&quot;&#10;            android:gravity=&quot;end&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/androidx.cardview.widget.CardView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_dynamic_quiz_question.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_dynamic_quiz_question.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:layout_marginBottom=&quot;16dp&quot;&#10;    android:background=&quot;@drawable/border_gray&quot;&#10;    android:padding=&quot;16dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_question_number&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;Câu hỏi 1:&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textColor=&quot;@android:color/holo_purple&quot; /&gt;&#10;&#10;        &lt;ImageButton&#10;            android:id=&quot;@+id/btn_delete_question&quot;&#10;            android:layout_width=&quot;32dp&quot;&#10;            android:layout_height=&quot;32dp&quot;&#10;            android:src=&quot;@android:drawable/ic_menu_delete&quot;&#10;            android:background=&quot;?android:attr/selectableItemBackgroundBorderless&quot;&#10;            android:contentDescription=&quot;Xóa câu hỏi&quot;&#10;            android:tint=&quot;@android:color/holo_red_dark&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&#10;        android:hint=&quot;Nhập câu hỏi&quot;&gt;&#10;&#10;        &lt;com.google.android.material.textfield.TextInputEditText&#10;            android:id=&quot;@+id/et_question&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:minLines=&quot;2&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Các lựa chọn:&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;@android:color/black&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;!-- RadioGroup to properly group RadioButtons --&gt;&#10;    &lt;RadioGroup&#10;        android:id=&quot;@+id/rg_correct_answer&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;!-- Option A --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;            &lt;RadioButton&#10;                android:id=&quot;@+id/rb_option_a&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;A&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:hint=&quot;Lựa chọn A&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_option_a&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Option B --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;            &lt;RadioButton&#10;                android:id=&quot;@+id/rb_option_b&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;B&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:hint=&quot;Lựa chọn B&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_option_b&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Option C --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;            &lt;RadioButton&#10;                android:id=&quot;@+id/rb_option_c&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;C&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:hint=&quot;Lựa chọn C&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_option_c&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Option D --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;            &lt;RadioButton&#10;                android:id=&quot;@+id/rb_option_d&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;D&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:hint=&quot;Lựa chọn D&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_option_d&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/RadioGroup&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Chọn đáp án đúng bằng cách tick vào radio button tương ứng&quot;&#10;        android:textSize=&quot;12sp&quot;&#10;        android:textStyle=&quot;italic&quot;&#10;        android:textColor=&quot;@android:color/darker_gray&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_quiz_question.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_quiz_question.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:layout_marginBottom=&quot;24dp&quot;&#10;    android:background=&quot;@drawable/border_gray&quot;&#10;    android:padding=&quot;16dp&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/tv_question_number&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Câu hỏi 1:&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;@android:color/holo_purple&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&#10;        android:hint=&quot;Nhập câu hỏi&quot;&gt;&#10;&#10;        &lt;com.google.android.material.textfield.TextInputEditText&#10;            android:id=&quot;@+id/et_question&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:minLines=&quot;2&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Các lựa chọn:&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;@android:color/black&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;!-- Option A --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_option_a&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;A&quot; /&gt;&#10;&#10;        &lt;com.google.android.material.textfield.TextInputLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginStart=&quot;8dp&quot;&#10;            android:hint=&quot;Lựa chọn A&quot;&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputEditText&#10;                android:id=&quot;@+id/et_option_a&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;        &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Option B --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_option_b&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;B&quot; /&gt;&#10;&#10;        &lt;com.google.android.material.textfield.TextInputLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginStart=&quot;8dp&quot;&#10;            android:hint=&quot;Lựa chọn B&quot;&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputEditText&#10;                android:id=&quot;@+id/et_option_b&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;        &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Option C --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_option_c&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;C&quot; /&gt;&#10;&#10;        &lt;com.google.android.material.textfield.TextInputLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginStart=&quot;8dp&quot;&#10;            android:hint=&quot;Lựa chọn C&quot;&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputEditText&#10;                android:id=&quot;@+id/et_option_c&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;        &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Option D --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_option_d&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;D&quot; /&gt;&#10;&#10;        &lt;com.google.android.material.textfield.TextInputLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginStart=&quot;8dp&quot;&#10;            android:hint=&quot;Lựa chọn D&quot;&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputEditText&#10;                android:id=&quot;@+id/et_option_d&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;        &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Chọn đáp án đúng bằng cách tick vào radio button tương ứng&quot;&#10;        android:textSize=&quot;12sp&quot;&#10;        android:textStyle=&quot;italic&quot;&#10;        android:textColor=&quot;@android:color/darker_gray&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:layout_marginBottom=&quot;24dp&quot;&#10;    android:background=&quot;@drawable/border_gray&quot;&#10;    android:padding=&quot;16dp&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/tv_question_number&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Câu hỏi 1:&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;@android:color/holo_purple&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&#10;        android:hint=&quot;Nhập câu hỏi&quot;&gt;&#10;&#10;        &lt;com.google.android.material.textfield.TextInputEditText&#10;            android:id=&quot;@+id/et_question&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:minLines=&quot;2&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Các lựa chọn:&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;@android:color/black&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;!-- RadioGroup to properly group RadioButtons --&gt;&#10;    &lt;RadioGroup&#10;        android:id=&quot;@+id/rg_correct_answer&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;!-- Option A --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;            &lt;RadioButton&#10;                android:id=&quot;@+id/rb_option_a&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;A&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:hint=&quot;Lựa chọn A&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_option_a&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Option B --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;            &lt;RadioButton&#10;                android:id=&quot;@+id/rb_option_b&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;B&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:hint=&quot;Lựa chọn B&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_option_b&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Option C --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;            &lt;RadioButton&#10;                android:id=&quot;@+id/rb_option_c&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;C&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:hint=&quot;Lựa chọn C&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_option_c&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Option D --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;            &lt;RadioButton&#10;                android:id=&quot;@+id/rb_option_d&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;D&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:hint=&quot;Lựa chọn D&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_option_d&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/RadioGroup&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Chọn đáp án đúng bằng cách tick vào radio button tương ứng&quot;&#10;        android:textSize=&quot;12sp&quot;&#10;        android:textStyle=&quot;italic&quot;&#10;        android:textColor=&quot;@android:color/darker_gray&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>