<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/AndroidManifest.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.ACCESS_NETWORK_STATE&quot; /&gt;&#10;&#10;    &lt;application&#10;        android:allowBackup=&quot;true&quot;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.Final&quot;&#10;        tools:targetApi=&quot;31&quot;&gt;&#10;&#10;        &lt;!-- Main Activity (Launcher) --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MainActivity&quot;&#10;            android:exported=&quot;true&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- Home Activity - Thêm vào để khắc phục lỗi --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.HomeActivity&quot;&#10;            android:theme=&quot;@style/Theme.Final.NoActionBar&quot; /&gt;&#10;&#10;        &lt;!-- Splash Activity --&gt;&#10;        &lt;activity android:name=&quot;.SplashActivity&quot; /&gt;&#10;&#10;        &lt;!-- Authentication Activities --&gt;&#10;        &lt;activity android:name=&quot;.LoginActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.RegisterActivity&quot; /&gt;&#10;&#10;        &lt;!-- Dashboard Activities --&gt;&#10;        &lt;activity android:name=&quot;.TeacherDashboardActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.StudentDashboardActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.AdminDashboardActivity&quot; /&gt;&#10;&#10;        &lt;!-- Course Activities --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.StudentCourseSearchActivity&quot;&#10;            android:theme=&quot;@style/Theme.Final.NoActionBar&quot; /&gt;&#10;&#10;        &lt;activity&#10;            android:name=&quot;.CourseRequestManagementActivity&quot;&#10;            android:label=&quot;Quản lý yêu cầu khóa học&quot;&#10;            android:parentActivityName=&quot;.TeacherDashboardActivity&quot; /&gt;&#10;&#10;        &lt;!-- Student Learning Activities --&gt;&#10;        &lt;activity android:name=&quot;.StudentMyCoursesActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.StudentCourseLessonsActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.StudentCourseDetailActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.StudentLessonLearningActivity&quot; /&gt;&#10;&#10;        &lt;!-- Other Activities --&gt;&#10;        &lt;activity android:name=&quot;.CourseManagementActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.LessonManagementActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.EnrollmentManagementActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.CreateCourseActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.EditCourseActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.CourseListActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.CourseLessonsActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.CourseStudentsActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.CreateLessonActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.EditLessonActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.LessonDetailActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.PersonalScheduleActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.StudyProgressActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.StudentProgressDetailActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.QuizActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.UpdateProfileActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.FeedbackActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.AdminAccountManagementActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.ContentCreationActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.SystemStatisticsActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.StudentReportActivity&quot; /&gt;&#10;        &lt;activity android:name=&quot;.StudentDetailReportActivity&quot; /&gt;&#10;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#13;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#13;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#13;&#10;&#13;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#13;&#10;    &lt;uses-permission android:name=&quot;android.permission.ACCESS_NETWORK_STATE&quot; /&gt;&#13;&#10;&#13;&#10;    &lt;application&#13;&#10;        android:allowBackup=&quot;true&quot;&#13;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#13;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#13;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#13;&#10;        android:label=&quot;@string/app_name&quot;&#13;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#13;&#10;        android:supportsRtl=&quot;true&quot;&#13;&#10;        android:theme=&quot;@style/Theme.Final&quot;&#13;&#10;        tools:targetApi=&quot;31&quot;&gt;&#13;&#10;&#13;&#10;        &lt;!-- Main Activity (Launcher) --&gt;&#13;&#10;        &lt;activity&#13;&#10;            android:name=&quot;.MainActivity&quot;&#13;&#10;            android:exported=&quot;true&quot;&gt;&#13;&#10;            &lt;intent-filter&gt;&#13;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#13;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#13;&#10;            &lt;/intent-filter&gt;&#13;&#10;        &lt;/activity&gt;&#13;&#10;&#13;&#10;        &lt;!-- Home Activity - Thêm vào để khắc phục lỗi --&gt;&#13;&#10;        &lt;activity&#13;&#10;            android:name=&quot;.HomeActivity&quot;&#13;&#10;            android:theme=&quot;@style/Theme.Final.NoActionBar&quot; /&gt;&#13;&#10;&#13;&#10;        &lt;!-- Splash Activity --&gt;&#13;&#10;        &lt;activity android:name=&quot;.SplashActivity&quot; /&gt;&#13;&#10;&#13;&#10;        &lt;!-- Authentication Activities --&gt;&#13;&#10;        &lt;activity android:name=&quot;.LoginActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.RegisterActivity&quot; /&gt;&#13;&#10;&#13;&#10;        &lt;!-- Dashboard Activities --&gt;&#13;&#10;        &lt;activity android:name=&quot;.TeacherDashboardActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.StudentDashboardActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.AdminDashboardActivity&quot; /&gt;&#13;&#10;&#13;&#10;        &lt;!-- Course Activities --&gt;&#13;&#10;        &lt;activity&#13;&#10;            android:name=&quot;.StudentCourseSearchActivity&quot;&#13;&#10;            android:theme=&quot;@style/Theme.Final.NoActionBar&quot; /&gt;&#13;&#10;&#13;&#10;        &lt;activity&#13;&#10;            android:name=&quot;.CourseRequestManagementActivity&quot;&#13;&#10;            android:label=&quot;Quản lý yêu cầu khóa học&quot;&#13;&#10;            android:parentActivityName=&quot;.TeacherDashboardActivity&quot; /&gt;&#13;&#10;&#13;&#10;        &lt;!-- Student Learning Activities --&gt;&#13;&#10;        &lt;activity android:name=&quot;.StudentMyCoursesActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.StudentCourseLessonsActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.StudentCourseDetailActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.StudentLessonLearningActivity&quot; /&gt;&#13;&#10;&#13;&#10;        &lt;!-- Quiz Management Activities --&gt;&#13;&#10;        &lt;activity&#13;&#10;            android:name=&quot;.SelectCourseForQuizActivity&quot;&#13;&#10;            android:label=&quot;Chọn khóa học&quot;&#13;&#10;            android:parentActivityName=&quot;.TeacherDashboardActivity&quot; /&gt;&#13;&#10;        &lt;activity&#13;&#10;            android:name=&quot;.CreateQuizActivity&quot;&#13;&#10;            android:label=&quot;Tạo bài kiểm tra&quot;&#13;&#10;            android:parentActivityName=&quot;.SelectCourseForQuizActivity&quot; /&gt;&#13;&#10;&#13;&#10;        &lt;!-- Other Activities --&gt;&#13;&#10;        &lt;activity android:name=&quot;.CourseManagementActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.LessonManagementActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.EnrollmentManagementActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.CreateCourseActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.EditCourseActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.CourseListActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.CourseLessonsActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.CourseStudentsActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.CreateLessonActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.EditLessonActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.LessonDetailActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.PersonalScheduleActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.StudyProgressActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.StudentProgressDetailActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.QuizActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.UpdateProfileActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.FeedbackActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.AdminAccountManagementActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.ContentCreationActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.SystemStatisticsActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.StudentReportActivity&quot; /&gt;&#13;&#10;        &lt;activity android:name=&quot;.StudentDetailReportActivity&quot; /&gt;&#13;&#10;&#13;&#10;    &lt;/application&gt;&#13;&#10;&#13;&#10;&lt;/manifest&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/CreateQuizActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/CreateQuizActivity.java" />
              <option name="originalContent" value="package com.vantinh.tienganh;&#10;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.RadioButton;&#10;import android.widget.RadioGroup;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import android.widget.LinearLayout;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;import com.vantinh.tienganh.models.Quiz;&#10;import com.vantinh.tienganh.models.QuizQuestion;&#10;import com.vantinh.tienganh.utils.QuestionViewHelper;&#10;import java.util.ArrayList;&#10;import java.util.Date;&#10;import java.util.List;&#10;&#10;public class CreateQuizActivity extends AppCompatActivity implements QuestionViewHelper.OnQuestionCountChangeListener {&#10;&#10;    private Toolbar toolbar;&#10;    private EditText etQuizTitle;&#10;    private TextView tvCourseName, tvQuestionCount;&#10;    private Button btnCreateQuiz, btnAddQuestion, btnRemoveQuestion;&#10;    private LinearLayout llQuestionsContainer;&#10;    private String courseId, courseName;&#10;    private FirebaseFirestore db;&#10;    private FirebaseAuth mAuth;&#10;&#10;    private QuestionViewHelper questionViewHelper;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_create_quiz);&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        initFirebase();&#10;        getCourseInfo();&#10;        initQuestionHelper();&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        etQuizTitle = findViewById(R.id.et_quiz_title);&#10;        tvCourseName = findViewById(R.id.tv_course_name);&#10;        tvQuestionCount = findViewById(R.id.tv_question_count);&#10;        btnCreateQuiz = findViewById(R.id.btn_create_quiz);&#10;        btnAddQuestion = findViewById(R.id.btn_add_question);&#10;        btnRemoveQuestion = findViewById(R.id.btn_remove_question);&#10;        llQuestionsContainer = findViewById(R.id.ll_questions_container);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setTitle(&quot;Tạo bài kiểm tra&quot;);&#10;            getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#10;        }&#10;    }&#10;&#10;    private void initFirebase() {&#10;        db = FirebaseFirestore.getInstance();&#10;        mAuth = FirebaseAuth.getInstance();&#10;    }&#10;&#10;    private void getCourseInfo() {&#10;        courseId = getIntent().getStringExtra(&quot;courseId&quot;);&#10;        courseName = getIntent().getStringExtra(&quot;courseName&quot;);&#10;&#10;        if (courseName != null) {&#10;            tvCourseName.setText(&quot;Khóa học: &quot; + courseName);&#10;        }&#10;    }&#10;&#10;    private void initQuestionHelper() {&#10;        questionViewHelper = new QuestionViewHelper(this, llQuestionsContainer);&#10;        questionViewHelper.setOnQuestionCountChangeListener(this);&#10;        questionViewHelper.initializeWithDefaultQuestions();&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnCreateQuiz.setOnClickListener(v -&gt; createQuiz());&#10;&#10;        btnAddQuestion.setOnClickListener(v -&gt; {&#10;            questionViewHelper.addQuestion();&#10;            // Debug log&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Added question, total: &quot; + questionViewHelper.getQuestionCount());&#10;        });&#10;&#10;        btnRemoveQuestion.setOnClickListener(v -&gt; {&#10;            int countBefore = questionViewHelper.getQuestionCount();&#10;            questionViewHelper.removeLastQuestion();&#10;            int countAfter = questionViewHelper.getQuestionCount();&#10;            // Debug log&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Remove clicked - Before: &quot; + countBefore + &quot;, After: &quot; + countAfter);&#10;            Toast.makeText(this, &quot;Đã xóa câu hỏi cuối&quot;, Toast.LENGTH_SHORT).show();&#10;        });&#10;    }&#10;&#10;    @Override&#10;    public void onQuestionCountChanged(int count) {&#10;        tvQuestionCount.setText(&quot;(&quot; + count + &quot; câu)&quot;);&#10;        boolean canRemove = count &gt; 2;&#10;        btnRemoveQuestion.setEnabled(canRemove);&#10;&#10;        // Debug log&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Question count changed: &quot; + count + &quot;, Can remove: &quot; + canRemove);&#10;&#10;        // Thay đổi màu nút để thể hiện trạng thái&#10;        if (canRemove) {&#10;            btnRemoveQuestion.setBackgroundTintList(getResources().getColorStateList(android.R.color.holo_red_dark));&#10;            btnRemoveQuestion.setAlpha(1.0f);&#10;        } else {&#10;            btnRemoveQuestion.setBackgroundTintList(getResources().getColorStateList(android.R.color.darker_gray));&#10;            btnRemoveQuestion.setAlpha(0.5f);&#10;        }&#10;    }&#10;&#10;    private void createQuiz() {&#10;        if (!validateInput()) {&#10;            return;&#10;        }&#10;&#10;        String quizTitle = etQuizTitle.getText().toString().trim();&#10;        List&lt;QuizQuestion&gt; questions = new ArrayList&lt;&gt;();&#10;&#10;        // Create questions from dynamic views theo cấu trúc Firebase&#10;        List&lt;QuestionViewHelper.QuestionViewData&gt; questionViews = questionViewHelper.getQuestionViews();&#10;        for (int i = 0; i &lt; questionViews.size(); i++) {&#10;            QuestionViewHelper.QuestionViewData questionData = questionViews.get(i);&#10;&#10;            // Lấy question (String)&#10;            String questionText = questionData.etQuestion.getText().toString().trim();&#10;            &#10;            // Lấy options (Array)&#10;            List&lt;String&gt; options = new ArrayList&lt;&gt;();&#10;            for (int j = 0; j &lt; 4; j++) {&#10;                options.add(questionData.etOptions[j].getText().toString().trim());&#10;            }&#10;&#10;            // Lấy correctAnswers (Number)&#10;            int correctAnswerIndex = getCorrectAnswerIndex(questionData);&#10;            &#10;            // Tạo QuizQuestion với 3 trường dữ liệu Firebase&#10;            QuizQuestion question = new QuizQuestion();&#10;            question.setQuestion(questionText);        // String&#10;            question.setOptions(options);              // Array&#10;            question.setCorrectAnswers(correctAnswerIndex); // Number&#10;            &#10;            questions.add(question);&#10;            &#10;            // Debug log để kiểm tra dữ liệu Firebase format&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Firebase Question &quot; + (i+1) + &quot;:&quot;);&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  question: &quot; + questionText);&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  options: &quot; + options.toString());&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  correctAnswers: &quot; + correctAnswerIndex);&#10;        }&#10;&#10;        // Create quiz object với đầy đủ metadata&#10;        Quiz quiz = new Quiz();&#10;        quiz.setTitle(quizTitle);&#10;        quiz.setCourseId(courseId);&#10;        quiz.setCourseName(courseName);&#10;        quiz.setTeacherId(mAuth.getCurrentUser().getUid());&#10;        quiz.setQuestions(questions);&#10;        quiz.setCreatedAt(new Date());&#10;        quiz.setActive(true);&#10;&#10;        // Log toàn bộ quiz data để debug&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Creating Quiz for Firebase:&quot;);&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  title: &quot; + quizTitle);&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  courseId: &quot; + courseId);&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  courseName: &quot; + courseName);&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  questionsCount: &quot; + questions.size());&#10;&#10;        // Save to Firebase&#10;        saveQuizToFirebase(quiz);&#10;    }&#10;&#10;    private boolean validateInput() {&#10;        String quizTitle = etQuizTitle.getText().toString().trim();&#10;        if (quizTitle.isEmpty()) {&#10;            etQuizTitle.setError(&quot;Vui lòng nhập tên bài kiểm tra&quot;);&#10;            return false;&#10;        }&#10;&#10;        List&lt;QuestionViewHelper.QuestionViewData&gt; questionViews = questionViewHelper.getQuestionViews();&#10;&#10;        for (int i = 0; i &lt; questionViews.size(); i++) {&#10;            QuestionViewHelper.QuestionViewData questionData = questionViews.get(i);&#10;&#10;            String questionText = questionData.etQuestion.getText().toString().trim();&#10;            if (questionText.isEmpty()) {&#10;                questionData.etQuestion.setError(&quot;Vui lòng nhập câu hỏi &quot; + (i + 1));&#10;                questionData.etQuestion.requestFocus();&#10;                return false;&#10;            }&#10;&#10;            for (int j = 0; j &lt; 4; j++) {&#10;                String option = questionData.etOptions[j].getText().toString().trim();&#10;                if (option.isEmpty()) {&#10;                    questionData.etOptions[j].setError(&quot;Vui lòng nhập lựa chọn &quot; + (char)('A' + j));&#10;                    questionData.etOptions[j].requestFocus();&#10;                    return false;&#10;                }&#10;            }&#10;&#10;            // Check if any radio button is selected for this question&#10;            if (questionData.rgCorrectAnswer.getCheckedRadioButtonId() == -1) {&#10;                Toast.makeText(this, &quot;Vui lòng chọn đáp án đúng cho câu hỏi &quot; + (i + 1), Toast.LENGTH_SHORT).show();&#10;                return false;&#10;            }&#10;        }&#10;&#10;        return true;&#10;    }&#10;&#10;    private int getCorrectAnswerIndex(QuestionViewHelper.QuestionViewData questionData) {&#10;        RadioGroup radioGroup = questionData.rgCorrectAnswer;&#10;        int checkedId = radioGroup.getCheckedRadioButtonId();&#10;&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Getting correct answer - checkedId: &quot; + checkedId);&#10;&#10;        if (checkedId == -1) {&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;No option selected&quot;);&#10;            return -1;&#10;        }&#10;&#10;        // Lấy trực tiếp RadioButton từ RadioGroup thay vì từ questionView&#10;        RadioButton rbA = questionData.questionView.findViewById(R.id.rb_option_a);&#10;        RadioButton rbB = questionData.questionView.findViewById(R.id.rb_option_b);&#10;        RadioButton rbC = questionData.questionView.findViewById(R.id.rb_option_c);&#10;        RadioButton rbD = questionData.questionView.findViewById(R.id.rb_option_d);&#10;&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;RadioButton IDs - A:&quot; + (rbA != null ? rbA.getId() : &quot;null&quot;) +&#10;                                        &quot;, B:&quot; + (rbB != null ? rbB.getId() : &quot;null&quot;) +&#10;                                        &quot;, C:&quot; + (rbC != null ? rbC.getId() : &quot;null&quot;) +&#10;                                        &quot;, D:&quot; + (rbD != null ? rbD.getId() : &quot;null&quot;));&#10;&#10;        if (rbA != null &amp;&amp; checkedId == rbA.getId()) {&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Selected option A (index 0)&quot;);&#10;            return 0;&#10;        }&#10;        if (rbB != null &amp;&amp; checkedId == rbB.getId()) {&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Selected option B (index 1)&quot;);&#10;            return 1;&#10;        }&#10;        if (rbC != null &amp;&amp; checkedId == rbC.getId()) {&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Selected option C (index 2)&quot;);&#10;            return 2;&#10;        }&#10;        if (rbD != null &amp;&amp; checkedId == rbD.getId()) {&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Selected option D (index 3)&quot;);&#10;            return 3;&#10;        }&#10;&#10;        android.util.Log.e(&quot;CreateQuiz&quot;, &quot;Could not find matching RadioButton for checkedId: &quot; + checkedId);&#10;        return -1;&#10;    }&#10;&#10;    private void saveQuizToFirebase(Quiz quiz) {&#10;        btnCreateQuiz.setEnabled(false);&#10;        btnCreateQuiz.setText(&quot;Đang tạo...&quot;);&#10;&#10;        db.collection(&quot;quizzes&quot;)&#10;                .add(quiz)&#10;                .addOnSuccessListener(documentReference -&gt; {&#10;                    Toast.makeText(this, &quot;Tạo bài kiểm tra thành công!&quot;, Toast.LENGTH_SHORT).show();&#10;                    finish();&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    Toast.makeText(this, &quot;Lỗi khi tạo bài kiểm tra: &quot; + e.getMessage(), Toast.LENGTH_LONG).show();&#10;                    btnCreateQuiz.setEnabled(true);&#10;                    btnCreateQuiz.setText(&quot;Tạo bài kiểm tra&quot;);&#10;                });&#10;    }&#10;&#10;    @Override&#10;    public boolean onSupportNavigateUp() {&#10;        onBackPressed();&#10;        return true;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.vantinh.tienganh;&#10;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.RadioButton;&#10;import android.widget.RadioGroup;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import android.widget.LinearLayout;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;import com.vantinh.tienganh.models.Quiz;&#10;import com.vantinh.tienganh.models.QuizQuestion;&#10;import com.vantinh.tienganh.utils.QuestionViewHelper;&#10;import java.util.ArrayList;&#10;import java.util.Date;&#10;import java.util.List;&#10;&#10;public class CreateQuizActivity extends AppCompatActivity implements QuestionViewHelper.OnQuestionCountChangeListener {&#10;&#10;    private Toolbar toolbar;&#10;    private EditText etQuizTitle;&#10;    private TextView tvCourseName, tvQuestionCount;&#10;    private Button btnCreateQuiz, btnAddQuestion, btnRemoveQuestion;&#10;    private LinearLayout llQuestionsContainer;&#10;    private String courseId, courseName;&#10;    private FirebaseFirestore db;&#10;    private FirebaseAuth mAuth;&#10;&#10;    private QuestionViewHelper questionViewHelper;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_create_quiz);&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        initFirebase();&#10;        getCourseInfo();&#10;        initQuestionHelper();&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        etQuizTitle = findViewById(R.id.et_quiz_title);&#10;        tvCourseName = findViewById(R.id.tv_course_name);&#10;        tvQuestionCount = findViewById(R.id.tv_question_count);&#10;        btnCreateQuiz = findViewById(R.id.btn_create_quiz);&#10;        btnAddQuestion = findViewById(R.id.btn_add_question);&#10;        btnRemoveQuestion = findViewById(R.id.btn_remove_question);&#10;        llQuestionsContainer = findViewById(R.id.ll_questions_container);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setTitle(&quot;Tạo bài kiểm tra&quot;);&#10;            getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#10;        }&#10;    }&#10;&#10;    private void initFirebase() {&#10;        db = FirebaseFirestore.getInstance();&#10;        mAuth = FirebaseAuth.getInstance();&#10;    }&#10;&#10;    private void getCourseInfo() {&#10;        courseId = getIntent().getStringExtra(&quot;courseId&quot;);&#10;        courseName = getIntent().getStringExtra(&quot;courseName&quot;);&#10;&#10;        if (courseName != null) {&#10;            tvCourseName.setText(&quot;Khóa học: &quot; + courseName);&#10;        }&#10;    }&#10;&#10;    private void initQuestionHelper() {&#10;        questionViewHelper = new QuestionViewHelper(this, llQuestionsContainer);&#10;        questionViewHelper.setOnQuestionCountChangeListener(this);&#10;        questionViewHelper.initializeWithDefaultQuestions();&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnCreateQuiz.setOnClickListener(v -&gt; createQuiz());&#10;&#10;        btnAddQuestion.setOnClickListener(v -&gt; {&#10;            questionViewHelper.addQuestion();&#10;            // Debug log&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Added question, total: &quot; + questionViewHelper.getQuestionCount());&#10;        });&#10;&#10;        btnRemoveQuestion.setOnClickListener(v -&gt; {&#10;            int countBefore = questionViewHelper.getQuestionCount();&#10;            questionViewHelper.removeLastQuestion();&#10;            int countAfter = questionViewHelper.getQuestionCount();&#10;            // Debug log&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Remove clicked - Before: &quot; + countBefore + &quot;, After: &quot; + countAfter);&#10;            Toast.makeText(this, &quot;Đã xóa câu hỏi cuối&quot;, Toast.LENGTH_SHORT).show();&#10;        });&#10;    }&#10;&#10;    @Override&#10;    public void onQuestionCountChanged(int count) {&#10;        tvQuestionCount.setText(&quot;(&quot; + count + &quot; câu)&quot;);&#10;        boolean canRemove = count &gt; 2;&#10;        btnRemoveQuestion.setEnabled(canRemove);&#10;&#10;        // Debug log&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Question count changed: &quot; + count + &quot;, Can remove: &quot; + canRemove);&#10;&#10;        // Thay đổi màu nút để thể hiện trạng thái&#10;        if (canRemove) {&#10;            btnRemoveQuestion.setBackgroundTintList(getResources().getColorStateList(android.R.color.holo_red_dark));&#10;            btnRemoveQuestion.setAlpha(1.0f);&#10;        } else {&#10;            btnRemoveQuestion.setBackgroundTintList(getResources().getColorStateList(android.R.color.darker_gray));&#10;            btnRemoveQuestion.setAlpha(0.5f);&#10;        }&#10;    }&#10;&#10;    private void createQuiz() {&#10;        if (!validateInput()) {&#10;            return;&#10;        }&#10;&#10;        String quizTitle = etQuizTitle.getText().toString().trim();&#10;        List&lt;QuizQuestion&gt; questions = new ArrayList&lt;&gt;();&#10;&#10;        // Create questions from dynamic views theo cấu trúc Firebase&#10;        List&lt;QuestionViewHelper.QuestionViewData&gt; questionViews = questionViewHelper.getQuestionViews();&#10;        for (int i = 0; i &lt; questionViews.size(); i++) {&#10;            QuestionViewHelper.QuestionViewData questionData = questionViews.get(i);&#10;&#10;            // Lấy question (String)&#10;            String questionText = questionData.etQuestion.getText().toString().trim();&#10;            &#10;            // Lấy options (Array)&#10;            List&lt;String&gt; options = new ArrayList&lt;&gt;();&#10;            for (int j = 0; j &lt; 4; j++) {&#10;                options.add(questionData.etOptions[j].getText().toString().trim());&#10;            }&#10;&#10;            // Lấy correctAnswers (Number)&#10;            int correctAnswerIndex = getCorrectAnswerIndex(questionData);&#10;            &#10;            // Tạo QuizQuestion với 3 trường dữ liệu Firebase&#10;            QuizQuestion question = new QuizQuestion();&#10;            question.setQuestion(questionText);        // String&#10;            question.setOptions(options);              // Array&#10;            question.setCorrectAnswers(correctAnswerIndex); // Number&#10;            &#10;            questions.add(question);&#10;            &#10;            // Debug log để kiểm tra dữ liệu Firebase format&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Firebase Question &quot; + (i+1) + &quot;:&quot;);&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  question: &quot; + questionText);&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  options: &quot; + options.toString());&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  correctAnswers: &quot; + correctAnswerIndex);&#10;        }&#10;&#10;        // Create quiz object với đầy đủ metadata&#10;        Quiz quiz = new Quiz();&#10;        quiz.setTitle(quizTitle);&#10;        quiz.setCourseId(courseId);&#10;        quiz.setCourseName(courseName);&#10;        quiz.setTeacherId(mAuth.getCurrentUser().getUid());&#10;        quiz.setQuestions(questions);&#10;        quiz.setCreatedAt(new Date());&#10;        quiz.setActive(true);&#10;&#10;        // Log toàn bộ quiz data để debug&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Creating Quiz for Firebase:&quot;);&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  title: &quot; + quizTitle);&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  courseId: &quot; + courseId);&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  courseName: &quot; + courseName);&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  questionsCount: &quot; + questions.size());&#10;&#10;        // Save to Firebase&#10;        saveQuizToFirebase(quiz);&#10;    }&#10;&#10;    private boolean validateInput() {&#10;        String quizTitle = etQuizTitle.getText().toString().trim();&#10;        if (quizTitle.isEmpty()) {&#10;            etQuizTitle.setError(&quot;Vui lòng nhập tên bài kiểm tra&quot;);&#10;            return false;&#10;        }&#10;&#10;        List&lt;QuestionViewHelper.QuestionViewData&gt; questionViews = questionViewHelper.getQuestionViews();&#10;&#10;        for (int i = 0; i &lt; questionViews.size(); i++) {&#10;            QuestionViewHelper.QuestionViewData questionData = questionViews.get(i);&#10;&#10;            String questionText = questionData.etQuestion.getText().toString().trim();&#10;            if (questionText.isEmpty()) {&#10;                questionData.etQuestion.setError(&quot;Vui lòng nhập câu hỏi &quot; + (i + 1));&#10;                questionData.etQuestion.requestFocus();&#10;                return false;&#10;            }&#10;&#10;            for (int j = 0; j &lt; 4; j++) {&#10;                String option = questionData.etOptions[j].getText().toString().trim();&#10;                if (option.isEmpty()) {&#10;                    questionData.etOptions[j].setError(&quot;Vui lòng nhập lựa chọn &quot; + (char)('A' + j));&#10;                    questionData.etOptions[j].requestFocus();&#10;                    return false;&#10;                }&#10;            }&#10;&#10;            // Check if any radio button is selected for this question&#10;            if (questionData.rgCorrectAnswer.getCheckedRadioButtonId() == -1) {&#10;                Toast.makeText(this, &quot;Vui lòng chọn đáp án đúng cho câu hỏi &quot; + (i + 1), Toast.LENGTH_SHORT).show();&#10;                return false;&#10;            }&#10;        }&#10;&#10;        return true;&#10;    }&#10;&#10;    private int getCorrectAnswerIndex(QuestionViewHelper.QuestionViewData questionData) {&#10;        RadioGroup radioGroup = questionData.rgCorrectAnswer;&#10;        int checkedId = radioGroup.getCheckedRadioButtonId();&#10;&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Getting correct answer - checkedId: &quot; + checkedId);&#10;&#10;        if (checkedId == -1) {&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;No option selected&quot;);&#10;            return -1;&#10;        }&#10;&#10;        // Lấy trực tiếp RadioButton từ RadioGroup thay vì từ questionView&#10;        RadioButton rbA = questionData.questionView.findViewById(R.id.rb_option_a);&#10;        RadioButton rbB = questionData.questionView.findViewById(R.id.rb_option_b);&#10;        RadioButton rbC = questionData.questionView.findViewById(R.id.rb_option_c);&#10;        RadioButton rbD = questionData.questionView.findViewById(R.id.rb_option_d);&#10;&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;RadioButton IDs - A:&quot; + (rbA != null ? rbA.getId() : &quot;null&quot;) +&#10;                                        &quot;, B:&quot; + (rbB != null ? rbB.getId() : &quot;null&quot;) +&#10;                                        &quot;, C:&quot; + (rbC != null ? rbC.getId() : &quot;null&quot;) +&#10;                                        &quot;, D:&quot; + (rbD != null ? rbD.getId() : &quot;null&quot;));&#10;&#10;        if (rbA != null &amp;&amp; checkedId == rbA.getId()) {&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Selected option A (index 0)&quot;);&#10;            return 0;&#10;        }&#10;        if (rbB != null &amp;&amp; checkedId == rbB.getId()) {&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Selected option B (index 1)&quot;);&#10;            return 1;&#10;        }&#10;        if (rbC != null &amp;&amp; checkedId == rbC.getId()) {&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Selected option C (index 2)&quot;);&#10;            return 2;&#10;        }&#10;        if (rbD != null &amp;&amp; checkedId == rbD.getId()) {&#10;            android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Selected option D (index 3)&quot;);&#10;            return 3;&#10;        }&#10;&#10;        android.util.Log.e(&quot;CreateQuiz&quot;, &quot;Could not find matching RadioButton for checkedId: &quot; + checkedId);&#10;        return -1;&#10;    }&#10;&#10;    private void saveQuizToFirebase(Quiz quiz) {&#10;        btnCreateQuiz.setEnabled(false);&#10;        btnCreateQuiz.setText(&quot;Đang tạo...&quot;);&#10;&#10;        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Starting Firebase save...&quot;);&#10;&#10;        db.collection(&quot;quizzes&quot;)&#10;                .add(quiz)&#10;                .addOnSuccessListener(documentReference -&gt; {&#10;                    String documentId = documentReference.getId();&#10;                    android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Quiz saved successfully with ID: &quot; + documentId);&#10;                    &#10;                    // Log Firebase structure để verify&#10;                    android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Firebase Document Structure:&quot;);&#10;                    android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Collection: quizzes&quot;);&#10;                    android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Document ID: &quot; + documentId);&#10;                    android.util.Log.d(&quot;CreateQuiz&quot;, &quot;Fields saved:&quot;);&#10;                    android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  - title: &quot; + quiz.getTitle());&#10;                    android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  - courseId: &quot; + quiz.getCourseId());&#10;                    android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  - courseName: &quot; + quiz.getCourseName());&#10;                    android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  - teacherId: &quot; + quiz.getTeacherId());&#10;                    android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  - questions: array with &quot; + quiz.getQuestions().size() + &quot; items&quot;);&#10;                    android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  - createdAt: &quot; + quiz.getCreatedAt());&#10;                    android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  - active: &quot; + quiz.isActive());&#10;                    &#10;                    // Log each question structure&#10;                    for (int i = 0; i &lt; quiz.getQuestions().size(); i++) {&#10;                        QuizQuestion q = quiz.getQuestions().get(i);&#10;                        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;  Question &quot; + (i+1) + &quot; structure:&quot;);&#10;                        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;    question: \&quot;&quot; + q.getQuestion() + &quot;\&quot;&quot;);&#10;                        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;    options: &quot; + q.getOptions().toString());&#10;                        android.util.Log.d(&quot;CreateQuiz&quot;, &quot;    correctAnswers: &quot; + q.getCorrectAnswers());&#10;                    }&#10;&#10;                    Toast.makeText(this, &quot;Tạo bài kiểm tra thành công!&quot;, Toast.LENGTH_SHORT).show();&#10;                    finish();&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    android.util.Log.e(&quot;CreateQuiz&quot;, &quot;Firebase save failed: &quot; + e.getMessage(), e);&#10;                    Toast.makeText(this, &quot;Lỗi khi tạo bài kiểm tra: &quot; + e.getMessage(), Toast.LENGTH_LONG).show();&#10;                    btnCreateQuiz.setEnabled(true);&#10;                    btnCreateQuiz.setText(&quot;Tạo bài kiểm tra&quot;);&#10;                });&#10;    }&#10;&#10;    @Override&#10;    public boolean onSupportNavigateUp() {&#10;        onBackPressed();&#10;        return true;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/SelectCourseForQuizActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/SelectCourseForQuizActivity.java" />
              <option name="updatedContent" value="package com.vantinh.tienganh;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.widget.Toast;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;import com.google.firebase.firestore.QueryDocumentSnapshot;&#10;import com.vantinh.tienganh.adapters.CourseSelectAdapter;&#10;import com.vantinh.tienganh.models.Course;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class SelectCourseForQuizActivity extends AppCompatActivity implements CourseSelectAdapter.OnCourseSelectListener {&#10;&#10;    private RecyclerView rvCourses;&#10;    private CourseSelectAdapter courseAdapter;&#10;    private List&lt;Course&gt; courseList;&#10;    private FirebaseFirestore db;&#10;    private FirebaseAuth mAuth;&#10;    private Toolbar toolbar;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_select_course_for_quiz);&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        initFirebase();&#10;        setupRecyclerView();&#10;        loadCourses();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        rvCourses = findViewById(R.id.rv_courses);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setTitle(&quot;Chọn khóa học&quot;);&#10;            getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#10;        }&#10;    }&#10;&#10;    private void initFirebase() {&#10;        db = FirebaseFirestore.getInstance();&#10;        mAuth = FirebaseAuth.getInstance();&#10;    }&#10;&#10;    private void setupRecyclerView() {&#10;        courseList = new ArrayList&lt;&gt;();&#10;        courseAdapter = new CourseSelectAdapter(courseList, this);&#10;        rvCourses.setLayoutManager(new LinearLayoutManager(this));&#10;        rvCourses.setAdapter(courseAdapter);&#10;    }&#10;&#10;    private void loadCourses() {&#10;        String teacherId = mAuth.getCurrentUser().getUid();&#10;        &#10;        db.collection(&quot;courses&quot;)&#10;                .whereEqualTo(&quot;teacherId&quot;, teacherId)&#10;                .get()&#10;                .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#10;                    courseList.clear();&#10;                    for (QueryDocumentSnapshot document : queryDocumentSnapshots) {&#10;                        Course course = document.toObject(Course.class);&#10;                        course.setId(document.getId());&#10;                        courseList.add(course);&#10;                    }&#10;                    courseAdapter.notifyDataSetChanged();&#10;&#10;                    if (courseList.isEmpty()) {&#10;                        Toast.makeText(this, &quot;Bạn chưa có khóa học nào. Vui lòng tạo khóa học trước.&quot;, Toast.LENGTH_LONG).show();&#10;                        finish();&#10;                    }&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    Toast.makeText(this, &quot;Lỗi khi tải danh sách khóa học&quot;, Toast.LENGTH_SHORT).show();&#10;                });&#10;    }&#10;&#10;    @Override&#10;    public void onCourseSelected(Course course) {&#10;        Intent intent = new Intent(this, CreateQuizActivity.class);&#10;        intent.putExtra(&quot;courseId&quot;, course.getId());&#10;        intent.putExtra(&quot;courseName&quot;, course.getCourseName());&#10;        startActivity(intent);&#10;    }&#10;&#10;    @Override&#10;    public boolean onSupportNavigateUp() {&#10;        onBackPressed();&#10;        return true;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/TeacherDashboardActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/TeacherDashboardActivity.java" />
              <option name="originalContent" value="package com.vantinh.tienganh;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.Menu;&#10;import android.view.MenuItem;&#10;import android.widget.Button;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;import com.vantinh.tienganh.utils.RealtimeManager;&#10;&#10;public class TeacherDashboardActivity extends AppCompatActivity {&#10;&#10;    private Toolbar toolbar;&#10;    private TextView tvWelcome, tvCoursesCount, tvStudentsCount, tvPendingRequestsCount;&#10;    private Button btnManageCourses, btnViewRequests, btnViewStudents, btnCreateCourse;&#10;    private FirebaseAuth mAuth;&#10;    private FirebaseFirestore db;&#10;    private RealtimeManager realtimeManager;&#10;    private String currentTeacherId; // Đổi từ currentTeacherName sang currentTeacherId&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_teacher_dashboard);&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        initFirebase();&#10;        loadDashboardData();&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        tvWelcome = findViewById(R.id.tv_welcome);&#10;        tvCoursesCount = findViewById(R.id.tv_courses_count);&#10;        tvStudentsCount = findViewById(R.id.tv_students_count);&#10;        tvPendingRequestsCount = findViewById(R.id.tv_pending_requests_count);&#10;&#10;        btnManageCourses = findViewById(R.id.btn_manage_courses);&#10;        btnViewRequests = findViewById(R.id.btn_view_requests);&#10;        btnViewStudents = findViewById(R.id.btn_view_students);&#10;        btnCreateCourse = findViewById(R.id.btn_create_course);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setTitle(&quot;Bảng điều khiển giáo viên&quot;);&#10;        }&#10;    }&#10;&#10;    private void initFirebase() {&#10;        mAuth = FirebaseAuth.getInstance();&#10;        db = FirebaseFirestore.getInstance();&#10;        realtimeManager = RealtimeManager.getInstance();&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnManageCourses.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, CourseManagementActivity.class));&#10;        });&#10;&#10;        // Thêm click listener cho nút &quot;View Requests&quot;&#10;        btnViewRequests.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, CourseRequestManagementActivity.class));&#10;        });&#10;&#10;        btnViewStudents.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, EnrollmentManagementActivity.class));&#10;        });&#10;&#10;        btnCreateCourse.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, CreateCourseActivity.class));&#10;        });&#10;    }&#10;&#10;    private void loadDashboardData() {&#10;        String teacherId = mAuth.getCurrentUser().getUid();&#10;        currentTeacherId = teacherId; // Lưu teacherId trực tiếp&#10;&#10;        // Load teacher info&#10;        db.collection(&quot;users&quot;).document(teacherId)&#10;                .get()&#10;                .addOnSuccessListener(documentSnapshot -&gt; {&#10;                    if (documentSnapshot.exists()) {&#10;                        String fullName = documentSnapshot.getString(&quot;fullName&quot;);&#10;                        tvWelcome.setText(&quot;Xin chào, &quot; + fullName);&#10;&#10;                        // Load counts với teacherId&#10;                        loadCoursesCount(teacherId);&#10;                        loadStudentsCount(teacherId);&#10;                        setupRealTimePendingRequestsCount(); // Sử dụng teacherId&#10;                    }&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    Toast.makeText(this, &quot;Lỗi khi tải thông tin&quot;, Toast.LENGTH_SHORT).show();&#10;                });&#10;    }&#10;&#10;    private void loadCoursesCount(String teacherId) {&#10;        db.collection(&quot;courses&quot;)&#10;                .whereEqualTo(&quot;teacherId&quot;, teacherId)&#10;                .get()&#10;                .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#10;                    int count = queryDocumentSnapshots.size();&#10;                    tvCoursesCount.setText(String.valueOf(count));&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    tvCoursesCount.setText(&quot;0&quot;);&#10;                });&#10;    }&#10;&#10;    private void loadStudentsCount(String teacherId) {&#10;        db.collection(&quot;enrollments&quot;)&#10;                .whereEqualTo(&quot;teacherId&quot;, teacherId)&#10;                .get()&#10;                .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#10;                    int count = queryDocumentSnapshots.size();&#10;                    tvStudentsCount.setText(String.valueOf(count));&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    tvStudentsCount.setText(&quot;0&quot;);&#10;                });&#10;    }&#10;&#10;    // Sửa để hiển thị TẤT CẢ pending requests (không filter theo teacherId)&#10;    private void setupRealTimePendingRequestsCount() {&#10;        // Đơn giản hóa - đếm tất cả pending requests&#10;        db.collection(&quot;courseRequests&quot;)&#10;                .whereEqualTo(&quot;status&quot;, &quot;pending&quot;)&#10;                .addSnapshotListener((queryDocumentSnapshots, e) -&gt; {&#10;                    if (e != null) {&#10;                        Log.e(&quot;TeacherDashboard&quot;, &quot;Error listening to pending requests&quot;, e);&#10;                        tvPendingRequestsCount.setText(&quot;0&quot;);&#10;                        return;&#10;                    }&#10;&#10;                    if (queryDocumentSnapshots != null) {&#10;                        int count = queryDocumentSnapshots.size();&#10;                        Log.d(&quot;TeacherDashboard&quot;, &quot;Real-time update: &quot; + count + &quot; pending requests total&quot;);&#10;&#10;                        runOnUiThread(() -&gt; {&#10;                            tvPendingRequestsCount.setText(String.valueOf(count));&#10;&#10;                            if (count &gt; 0) {&#10;                                btnViewRequests.setText(&quot;Xem yêu cầu (&quot; + count + &quot;)&quot;);&#10;                                // Animation nhấp nháy khi có yêu cầu mới&#10;                                btnViewRequests.animate()&#10;                                        .scaleX(1.1f)&#10;                                        .scaleY(1.1f)&#10;                                        .setDuration(200)&#10;                                        .withEndAction(() -&gt; {&#10;                                            btnViewRequests.animate()&#10;                                                    .scaleX(1f)&#10;                                                    .scaleY(1f)&#10;                                                    .setDuration(200)&#10;                                                    .start();&#10;                                        })&#10;                                        .start();&#10;                            } else {&#10;                                btnViewRequests.setText(&quot;Xem yêu cầu&quot;);&#10;                            }&#10;                        });&#10;                    }&#10;                });&#10;    }&#10;&#10;    @Override&#10;    public boolean onCreateOptionsMenu(Menu menu) {&#10;        getMenuInflater().inflate(R.menu.teacher_toolbar_menu, menu);&#10;        return true;&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(@NonNull MenuItem item) {&#10;        int itemId = item.getItemId();&#10;        if (itemId == R.id.action_logout) {&#10;            logout();&#10;            return true;&#10;        }&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;&#10;    private void logout() {&#10;        mAuth.signOut();&#10;        Intent intent = new Intent(this, LoginActivity.class);&#10;        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        // Refresh data khi quay lại activity&#10;        loadDashboardData();&#10;    }&#10;&#10;    @Override&#10;    protected void onDestroy() {&#10;        super.onDestroy();&#10;        // Cleanup listeners khi destroy activity&#10;        if (realtimeManager != null) {&#10;            realtimeManager.removeAllListeners();&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.vantinh.tienganh;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.Menu;&#10;import android.view.MenuItem;&#10;import android.widget.Button;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.appcompat.widget.Toolbar;&#10;import com.google.firebase.auth.FirebaseAuth;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;import com.vantinh.tienganh.utils.RealtimeManager;&#10;&#10;public class TeacherDashboardActivity extends AppCompatActivity {&#10;&#10;    private Toolbar toolbar;&#10;    private TextView tvWelcome, tvCoursesCount, tvStudentsCount, tvPendingRequestsCount;&#10;    private Button btnManageCourses, btnViewRequests, btnCreateQuiz, btnCreateCourse;&#10;    private FirebaseAuth mAuth;&#10;    private FirebaseFirestore db;&#10;    private RealtimeManager realtimeManager;&#10;    private String currentTeacherId; // Đổi từ currentTeacherName sang currentTeacherId&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_teacher_dashboard);&#10;&#10;        initViews();&#10;        setupToolbar();&#10;        initFirebase();&#10;        loadDashboardData();&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void initViews() {&#10;        toolbar = findViewById(R.id.toolbar);&#10;        tvWelcome = findViewById(R.id.tv_welcome);&#10;        tvCoursesCount = findViewById(R.id.tv_courses_count);&#10;        tvStudentsCount = findViewById(R.id.tv_students_count);&#10;        tvPendingRequestsCount = findViewById(R.id.tv_pending_requests_count);&#10;&#10;        btnManageCourses = findViewById(R.id.btn_manage_courses);&#10;        btnViewRequests = findViewById(R.id.btn_view_requests);&#10;        btnCreateQuiz = findViewById(R.id.btn_create_quiz);&#10;        btnCreateCourse = findViewById(R.id.btn_create_course);&#10;    }&#10;&#10;    private void setupToolbar() {&#10;        setSupportActionBar(toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            getSupportActionBar().setTitle(&quot;Bảng điều khiển giáo viên&quot;);&#10;        }&#10;    }&#10;&#10;    private void initFirebase() {&#10;        mAuth = FirebaseAuth.getInstance();&#10;        db = FirebaseFirestore.getInstance();&#10;        realtimeManager = RealtimeManager.getInstance();&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnManageCourses.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, CourseManagementActivity.class));&#10;        });&#10;&#10;        // Thêm click listener cho nút &quot;View Requests&quot;&#10;        btnViewRequests.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, CourseRequestManagementActivity.class));&#10;        });&#10;&#10;        btnCreateQuiz.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, SelectCourseForQuizActivity.class));&#10;        });&#10;&#10;        btnCreateCourse.setOnClickListener(v -&gt; {&#10;            startActivity(new Intent(this, CreateCourseActivity.class));&#10;        });&#10;    }&#10;&#10;    private void loadDashboardData() {&#10;        String teacherId = mAuth.getCurrentUser().getUid();&#10;        currentTeacherId = teacherId; // Lưu teacherId trực tiếp&#10;&#10;        // Load teacher info&#10;        db.collection(&quot;users&quot;).document(teacherId)&#10;                .get()&#10;                .addOnSuccessListener(documentSnapshot -&gt; {&#10;                    if (documentSnapshot.exists()) {&#10;                        String fullName = documentSnapshot.getString(&quot;fullName&quot;);&#10;                        tvWelcome.setText(&quot;Xin chào, &quot; + fullName);&#10;&#10;                        // Load counts với teacherId&#10;                        loadCoursesCount(teacherId);&#10;                        loadStudentsCount(teacherId);&#10;                        setupRealTimePendingRequestsCount(); // Sử dụng teacherId&#10;                    }&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    Toast.makeText(this, &quot;Lỗi khi tải thông tin&quot;, Toast.LENGTH_SHORT).show();&#10;                });&#10;    }&#10;&#10;    private void loadCoursesCount(String teacherId) {&#10;        db.collection(&quot;courses&quot;)&#10;                .whereEqualTo(&quot;teacherId&quot;, teacherId)&#10;                .get()&#10;                .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#10;                    int count = queryDocumentSnapshots.size();&#10;                    tvCoursesCount.setText(String.valueOf(count));&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    tvCoursesCount.setText(&quot;0&quot;);&#10;                });&#10;    }&#10;&#10;    private void loadStudentsCount(String teacherId) {&#10;        db.collection(&quot;enrollments&quot;)&#10;                .whereEqualTo(&quot;teacherId&quot;, teacherId)&#10;                .get()&#10;                .addOnSuccessListener(queryDocumentSnapshots -&gt; {&#10;                    int count = queryDocumentSnapshots.size();&#10;                    tvStudentsCount.setText(String.valueOf(count));&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    tvStudentsCount.setText(&quot;0&quot;);&#10;                });&#10;    }&#10;&#10;    // Sửa để hiển thị TẤT CẢ pending requests (không filter theo teacherId)&#10;    private void setupRealTimePendingRequestsCount() {&#10;        // Đơn giản hóa - đếm tất cả pending requests&#10;        db.collection(&quot;courseRequests&quot;)&#10;                .whereEqualTo(&quot;status&quot;, &quot;pending&quot;)&#10;                .addSnapshotListener((queryDocumentSnapshots, e) -&gt; {&#10;                    if (e != null) {&#10;                        Log.e(&quot;TeacherDashboard&quot;, &quot;Error listening to pending requests&quot;, e);&#10;                        tvPendingRequestsCount.setText(&quot;0&quot;);&#10;                        return;&#10;                    }&#10;&#10;                    if (queryDocumentSnapshots != null) {&#10;                        int count = queryDocumentSnapshots.size();&#10;                        Log.d(&quot;TeacherDashboard&quot;, &quot;Real-time update: &quot; + count + &quot; pending requests total&quot;);&#10;&#10;                        runOnUiThread(() -&gt; {&#10;                            tvPendingRequestsCount.setText(String.valueOf(count));&#10;&#10;                            if (count &gt; 0) {&#10;                                btnViewRequests.setText(&quot;Xem yêu cầu (&quot; + count + &quot;)&quot;);&#10;                                // Animation nhấp nháy khi có yêu cầu mới&#10;                                btnViewRequests.animate()&#10;                                        .scaleX(1.1f)&#10;                                        .scaleY(1.1f)&#10;                                        .setDuration(200)&#10;                                        .withEndAction(() -&gt; {&#10;                                            btnViewRequests.animate()&#10;                                                    .scaleX(1f)&#10;                                                    .scaleY(1f)&#10;                                                    .setDuration(200)&#10;                                                    .start();&#10;                                        })&#10;                                        .start();&#10;                            } else {&#10;                                btnViewRequests.setText(&quot;Xem yêu cầu&quot;);&#10;                            }&#10;                        });&#10;                    }&#10;                });&#10;    }&#10;&#10;    @Override&#10;    public boolean onCreateOptionsMenu(Menu menu) {&#10;        getMenuInflater().inflate(R.menu.teacher_toolbar_menu, menu);&#10;        return true;&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(@NonNull MenuItem item) {&#10;        int itemId = item.getItemId();&#10;        if (itemId == R.id.action_logout) {&#10;            logout();&#10;            return true;&#10;        }&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;&#10;    private void logout() {&#10;        mAuth.signOut();&#10;        Intent intent = new Intent(this, LoginActivity.class);&#10;        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        // Refresh data khi quay lại activity&#10;        loadDashboardData();&#10;    }&#10;&#10;    @Override&#10;    protected void onDestroy() {&#10;        super.onDestroy();&#10;        // Cleanup listeners khi destroy activity&#10;        if (realtimeManager != null) {&#10;            realtimeManager.removeAllListeners();&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/adapters/CourseSelectAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/adapters/CourseSelectAdapter.java" />
              <option name="updatedContent" value="package com.vantinh.tienganh.adapters;&#10;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.TextView;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import com.vantinh.tienganh.R;&#10;import com.vantinh.tienganh.models.Course;&#10;import java.util.List;&#10;&#10;public class CourseSelectAdapter extends RecyclerView.Adapter&lt;CourseSelectAdapter.ViewHolder&gt; {&#10;&#10;    private List&lt;Course&gt; courses;&#10;    private OnCourseSelectListener listener;&#10;&#10;    public interface OnCourseSelectListener {&#10;        void onCourseSelected(Course course);&#10;    }&#10;&#10;    public CourseSelectAdapter(List&lt;Course&gt; courses, OnCourseSelectListener listener) {&#10;        this.courses = courses;&#10;        this.listener = listener;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext())&#10;                .inflate(R.layout.item_course_select, parent, false);&#10;        return new ViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {&#10;        Course course = courses.get(position);&#10;        holder.bind(course);&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return courses.size();&#10;    }&#10;&#10;    class ViewHolder extends RecyclerView.ViewHolder {&#10;        private TextView tvCourseName, tvCourseDescription;&#10;&#10;        public ViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            tvCourseName = itemView.findViewById(R.id.tv_course_name);&#10;            tvCourseDescription = itemView.findViewById(R.id.tv_course_description);&#10;&#10;            itemView.setOnClickListener(v -&gt; {&#10;                if (listener != null) {&#10;                    listener.onCourseSelected(courses.get(getAdapterPosition()));&#10;                }&#10;            });&#10;        }&#10;&#10;        public void bind(Course course) {&#10;            tvCourseName.setText(course.getCourseName());&#10;            tvCourseDescription.setText(course.getDescription());&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/models/Course.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/models/Course.java" />
              <option name="updatedContent" value="package com.vantinh.tienganh.models;&#10;&#10;import java.util.Date;&#10;import java.util.List;&#10;&#10;public class Course {&#10;    private String id;&#10;    private String title;&#10;    private String description;&#10;    private String teacherId;&#10;    private String imageUrl;&#10;    private String level; // Beginner, Intermediate, Advanced&#10;    private String category; // Grammar, Vocabulary, Listening, Speaking&#10;    private int duration; // in hours&#10;    private Date createdAt;&#10;    private Date updatedAt;&#10;    private boolean isActive;&#10;    private int enrolledStudents;&#10;    private double rating;&#10;    private List&lt;String&gt; tags;&#10;&#10;    public Course() {&#10;        // Required empty constructor for Firebase&#10;    }&#10;&#10;    public Course(String title, String description, String teacherId,&#10;                  String level, String category, int duration) {&#10;        this.title = title;&#10;        this.description = description;&#10;        this.teacherId = teacherId;&#10;        this.level = level;&#10;        this.category = category;&#10;        this.duration = duration;&#10;        this.createdAt = new Date();&#10;        this.updatedAt = new Date();&#10;        this.isActive = true;&#10;        this.enrolledStudents = 0;&#10;        this.rating = 0.0;&#10;    }&#10;&#10;    // Getters and Setters&#10;    public String getId() { return id; }&#10;    public void setId(String id) { this.id = id; }&#10;&#10;    public String getTitle() { return title; }&#10;    public void setTitle(String title) { this.title = title; }&#10;&#10;    public String getDescription() { return description; }&#10;    public void setDescription(String description) { this.description = description; }&#10;&#10;    public String getTeacherId() { return teacherId; }&#10;    public void setTeacherId(String teacherId) { this.teacherId = teacherId; }&#10;&#10;    public String getImageUrl() { return imageUrl; }&#10;    public void setImageUrl(String imageUrl) { this.imageUrl = imageUrl; }&#10;&#10;    public String getLevel() { return level; }&#10;    public void setLevel(String level) { this.level = level; }&#10;&#10;    public String getCategory() { return category; }&#10;    public void setCategory(String category) { this.category = category; }&#10;&#10;    public int getDuration() { return duration; }&#10;    public void setDuration(int duration) { this.duration = duration; }&#10;&#10;    public Date getCreatedAt() { return createdAt; }&#10;    public void setCreatedAt(Date createdAt) { this.createdAt = createdAt; }&#10;&#10;    public Date getUpdatedAt() { return updatedAt; }&#10;    public void setUpdatedAt(Date updatedAt) { this.updatedAt = updatedAt; }&#10;&#10;    public boolean isActive() { return isActive; }&#10;    public void setActive(boolean active) { isActive = active; }&#10;&#10;    public int getEnrolledStudents() { return enrolledStudents; }&#10;    public void setEnrolledStudents(int enrolledStudents) { this.enrolledStudents = enrolledStudents; }&#10;&#10;    public double getRating() { return rating; }&#10;    public void setRating(double rating) { this.rating = rating; }&#10;&#10;    public List&lt;String&gt; getTags() { return tags; }&#10;    public void setTags(List&lt;String&gt; tags) { this.tags = tags; }&#10;&#10;    // Thêm phương thức getCourseName() để tương thích với code hiện tại&#10;    public String getCourseName() {&#10;        return this.title;&#10;    }&#10;&#10;    public void setCourseName(String courseName) {&#10;        this.title = courseName;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/models/Quiz.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/models/Quiz.java" />
              <option name="updatedContent" value="package com.vantinh.tienganh.models;&#10;&#10;import java.util.Date;&#10;import java.util.List;&#10;&#10;public class Quiz {&#10;    private String id;&#10;    private String title;&#10;    private String courseId;&#10;    private String courseName;&#10;    private String teacherId;&#10;    private List&lt;QuizQuestion&gt; questions;&#10;    private Date createdAt;&#10;    private boolean active;&#10;&#10;    public Quiz() {&#10;        // Empty constructor required for Firestore&#10;    }&#10;&#10;    public Quiz(String title, String courseId, String courseName, String teacherId, &#10;                List&lt;QuizQuestion&gt; questions, Date createdAt, boolean active) {&#10;        this.title = title;&#10;        this.courseId = courseId;&#10;        this.courseName = courseName;&#10;        this.teacherId = teacherId;&#10;        this.questions = questions;&#10;        this.createdAt = createdAt;&#10;        this.active = active;&#10;    }&#10;&#10;    // Getters and Setters&#10;    public String getId() {&#10;        return id;&#10;    }&#10;&#10;    public void setId(String id) {&#10;        this.id = id;&#10;    }&#10;&#10;    public String getTitle() {&#10;        return title;&#10;    }&#10;&#10;    public void setTitle(String title) {&#10;        this.title = title;&#10;    }&#10;&#10;    public String getCourseId() {&#10;        return courseId;&#10;    }&#10;&#10;    public void setCourseId(String courseId) {&#10;        this.courseId = courseId;&#10;    }&#10;&#10;    public String getCourseName() {&#10;        return courseName;&#10;    }&#10;&#10;    public void setCourseName(String courseName) {&#10;        this.courseName = courseName;&#10;    }&#10;&#10;    public String getTeacherId() {&#10;        return teacherId;&#10;    }&#10;&#10;    public void setTeacherId(String teacherId) {&#10;        this.teacherId = teacherId;&#10;    }&#10;&#10;    public List&lt;QuizQuestion&gt; getQuestions() {&#10;        return questions;&#10;    }&#10;&#10;    public void setQuestions(List&lt;QuizQuestion&gt; questions) {&#10;        this.questions = questions;&#10;    }&#10;&#10;    public Date getCreatedAt() {&#10;        return createdAt;&#10;    }&#10;&#10;    public void setCreatedAt(Date createdAt) {&#10;        this.createdAt = createdAt;&#10;    }&#10;&#10;    public boolean isActive() {&#10;        return active;&#10;    }&#10;&#10;    public void setActive(boolean active) {&#10;        this.active = active;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/models/QuizQuestion.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/models/QuizQuestion.java" />
              <option name="originalContent" value="package com.vantinh.tienganh.models;&#10;&#10;import java.util.List;&#10;&#10;public class QuizQuestion {&#10;    private String questionText;&#10;    private List&lt;String&gt; options;&#10;    private int correctAnswerIndex;&#10;&#10;    public QuizQuestion() {&#10;        // Empty constructor required for Firestore&#10;    }&#10;&#10;    public QuizQuestion(String questionText, List&lt;String&gt; options, int correctAnswerIndex) {&#10;        this.questionText = questionText;&#10;        this.options = options;&#10;        this.correctAnswerIndex = correctAnswerIndex;&#10;    }&#10;&#10;    // Getters and Setters&#10;    public String getQuestionText() {&#10;        return questionText;&#10;    }&#10;&#10;    public void setQuestionText(String questionText) {&#10;        this.questionText = questionText;&#10;    }&#10;&#10;    public List&lt;String&gt; getOptions() {&#10;        return options;&#10;    }&#10;&#10;    public void setOptions(List&lt;String&gt; options) {&#10;        this.options = options;&#10;    }&#10;&#10;    public int getCorrectAnswerIndex() {&#10;        return correctAnswerIndex;&#10;    }&#10;&#10;    public void setCorrectAnswerIndex(int correctAnswerIndex) {&#10;        this.correctAnswerIndex = correctAnswerIndex;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.vantinh.tienganh.models;&#10;&#10;import java.util.List;&#10;&#10;public class QuizQuestion {&#10;    private String question;&#10;    private List&lt;String&gt; options;&#10;    private int correctAnswers;&#10;&#10;    public QuizQuestion() {&#10;        // Empty constructor required for Firestore&#10;    }&#10;&#10;    public QuizQuestion(String question, List&lt;String&gt; options, int correctAnswers) {&#10;        this.question = question;&#10;        this.options = options;&#10;        this.correctAnswers = correctAnswers;&#10;    }&#10;&#10;    // Getters and Setters&#10;    public String getQuestion() {&#10;        return question;&#10;    }&#10;&#10;    public void setQuestion(String question) {&#10;        this.question = question;&#10;    }&#10;&#10;    public List&lt;String&gt; getOptions() {&#10;        return options;&#10;    }&#10;&#10;    public void setOptions(List&lt;String&gt; options) {&#10;        this.options = options;&#10;    }&#10;&#10;    public int getCorrectAnswers() {&#10;        return correctAnswers;&#10;    }&#10;&#10;    public void setCorrectAnswers(int correctAnswers) {&#10;        this.correctAnswers = correctAnswers;&#10;    }&#10;&#10;    // Backward compatibility methods (để không bị lỗi với code cũ)&#10;    public String getQuestionText() {&#10;        return question;&#10;    }&#10;&#10;    public void setQuestionText(String questionText) {&#10;        this.question = questionText;&#10;    }&#10;&#10;    public int getCorrectAnswerIndex() {&#10;        return correctAnswers;&#10;    }&#10;&#10;    public void setCorrectAnswerIndex(int correctAnswerIndex) {&#10;        this.correctAnswers = correctAnswerIndex;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/utils/QuestionViewHelper.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/vantinh/tienganh/utils/QuestionViewHelper.java" />
              <option name="originalContent" value="package com.vantinh.tienganh.utils;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.widget.EditText;&#10;import android.widget.ImageButton;&#10;import android.widget.LinearLayout;&#10;import android.widget.RadioGroup;&#10;import android.widget.RadioButton;&#10;import android.widget.TextView;&#10;import com.vantinh.tienganh.R;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class QuestionViewHelper {&#10;&#10;    public static class QuestionViewData {&#10;        public View questionView;&#10;        public EditText etQuestion;&#10;        public EditText[] etOptions;&#10;        public RadioGroup rgCorrectAnswer;&#10;        public TextView tvQuestionNumber;&#10;        public ImageButton btnDelete;&#10;&#10;        public QuestionViewData() {&#10;            etOptions = new EditText[4];&#10;        }&#10;    }&#10;&#10;    private Context context;&#10;    private LinearLayout questionsContainer;&#10;    private List&lt;QuestionViewData&gt; questionViews;&#10;    private OnQuestionCountChangeListener listener;&#10;&#10;    public interface OnQuestionCountChangeListener {&#10;        void onQuestionCountChanged(int count);&#10;    }&#10;&#10;    public QuestionViewHelper(Context context, LinearLayout questionsContainer) {&#10;        this.context = context;&#10;        this.questionsContainer = questionsContainer;&#10;        this.questionViews = new ArrayList&lt;&gt;();&#10;    }&#10;&#10;    public void setOnQuestionCountChangeListener(OnQuestionCountChangeListener listener) {&#10;        this.listener = listener;&#10;    }&#10;&#10;    public void addQuestion() {&#10;        LayoutInflater inflater = LayoutInflater.from(context);&#10;        View questionView = inflater.inflate(R.layout.item_dynamic_quiz_question, questionsContainer, false);&#10;&#10;        QuestionViewData questionData = new QuestionViewData();&#10;        questionData.questionView = questionView;&#10;        questionData.tvQuestionNumber = questionView.findViewById(R.id.tv_question_number);&#10;        questionData.etQuestion = questionView.findViewById(R.id.et_question);&#10;        questionData.etOptions[0] = questionView.findViewById(R.id.et_option_a);&#10;        questionData.etOptions[1] = questionView.findViewById(R.id.et_option_b);&#10;        questionData.etOptions[2] = questionView.findViewById(R.id.et_option_c);&#10;        questionData.etOptions[3] = questionView.findViewById(R.id.et_option_d);&#10;        questionData.rgCorrectAnswer = questionView.findViewById(R.id.rg_correct_answer);&#10;        questionData.btnDelete = questionView.findViewById(R.id.btn_delete_question);&#10;&#10;        // Set unique IDs for RadioButtons to avoid conflicts&#10;        int questionIndex = questionViews.size();&#10;        int baseId = 2000 + (questionIndex * 10);&#10;        RadioButton rbA = questionView.findViewById(R.id.rb_option_a);&#10;        RadioButton rbB = questionView.findViewById(R.id.rb_option_b);&#10;        RadioButton rbC = questionView.findViewById(R.id.rb_option_c);&#10;        RadioButton rbD = questionView.findViewById(R.id.rb_option_d);&#10;&#10;        // Kiểm tra null pointer&#10;        if (rbA == null || rbB == null || rbC == null || rbD == null) {&#10;            android.util.Log.e(&quot;QuestionViewHelper&quot;, &quot;RadioButton not found in layout!&quot;);&#10;            return;&#10;        }&#10;&#10;        rbA.setId(baseId + 1);&#10;        rbB.setId(baseId + 2);&#10;        rbC.setId(baseId + 3);&#10;        rbD.setId(baseId + 4);&#10;&#10;        // Setup toggle functionality for RadioButtons với log debug&#10;        android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Setting up RadioButton listeners for question &quot; + (questionIndex + 1));&#10;        setupRadioButtonToggle(questionData.rgCorrectAnswer, rbA, &quot;A&quot;);&#10;        setupRadioButtonToggle(questionData.rgCorrectAnswer, rbB, &quot;B&quot;);&#10;        setupRadioButtonToggle(questionData.rgCorrectAnswer, rbC, &quot;C&quot;);&#10;        setupRadioButtonToggle(questionData.rgCorrectAnswer, rbD, &quot;D&quot;);&#10;&#10;        // Set delete button click listener&#10;        if (questionData.btnDelete != null) {&#10;            questionData.btnDelete.setOnClickListener(v -&gt; removeQuestion(questionData));&#10;        }&#10;&#10;        questionViews.add(questionData);&#10;        questionsContainer.addView(questionView);&#10;&#10;        updateQuestionNumbers();&#10;        updateDeleteButtonsVisibility();&#10;&#10;        if (listener != null) {&#10;            listener.onQuestionCountChanged(questionViews.size());&#10;        }&#10;    }&#10;&#10;    private void setupRadioButtonToggle(RadioGroup radioGroup, RadioButton radioButton, String optionName) {&#10;        android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Setting up listener for option &quot; + optionName);&#10;&#10;        // Sử dụng OnCheckedChangeListener thay vì OnClickListener để tránh xung đột&#10;        radioButton.setOnCheckedChangeListener((buttonView, isChecked) -&gt; {&#10;            if (isChecked) {&#10;                android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Option &quot; + optionName + &quot; was checked&quot;);&#10;                // Lưu trạng thái này vào tag&#10;                radioButton.setTag(&quot;selected&quot;);&#10;            }&#10;        });&#10;&#10;        // Sử dụng OnClickListener để handle toggle logic&#10;        radioButton.setOnClickListener(v -&gt; {&#10;            android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Option &quot; + optionName + &quot; clicked&quot;);&#10;&#10;            // Kiểm tra trạng thái trước đó&#10;            String previousState = (String) radioButton.getTag();&#10;            boolean wasAlreadySelected = &quot;selected&quot;.equals(previousState);&#10;&#10;            android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Was already selected: &quot; + wasAlreadySelected);&#10;&#10;            if (wasAlreadySelected) {&#10;                // Nếu đã được chọn, hủy chọn tất cả&#10;                android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Clearing selection for &quot; + optionName);&#10;                radioGroup.clearCheck();&#10;                clearAllTags(radioGroup);&#10;            } else {&#10;                // Nếu chưa được chọn, clear tags của buttons khác và set tag cho button này&#10;                android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Selecting &quot; + optionName);&#10;                clearAllTags(radioGroup);&#10;                radioButton.setTag(&quot;selected&quot;);&#10;                // RadioGroup sẽ tự động handle việc uncheck các button khác&#10;            }&#10;        });&#10;    }&#10;&#10;    private void clearAllTags(RadioGroup radioGroup) {&#10;        // Clear tags của tất cả RadioButton trong group&#10;        for (int i = 0; i &lt; radioGroup.getChildCount(); i++) {&#10;            View child = radioGroup.getChildAt(i);&#10;            if (child instanceof LinearLayout) {&#10;                LinearLayout linearLayout = (LinearLayout) child;&#10;                for (int j = 0; j &lt; linearLayout.getChildCount(); j++) {&#10;                    View subChild = linearLayout.getChildAt(j);&#10;                    if (subChild instanceof RadioButton) {&#10;                        subChild.setTag(null);&#10;                    }&#10;                }&#10;            } else if (child instanceof RadioButton) {&#10;                child.setTag(null);&#10;            }&#10;        }&#10;    }&#10;&#10;    private void clearOtherButtonTags(RadioGroup radioGroup, RadioButton selectedButton) {&#10;        RadioButton rbA = radioGroup.findViewById(R.id.rb_option_a);&#10;        RadioButton rbB = radioGroup.findViewById(R.id.rb_option_b);&#10;        RadioButton rbC = radioGroup.findViewById(R.id.rb_option_c);&#10;        RadioButton rbD = radioGroup.findViewById(R.id.rb_option_d);&#10;&#10;        if (rbA != null &amp;&amp; rbA != selectedButton) rbA.setTag(false);&#10;        if (rbB != null &amp;&amp; rbB != selectedButton) rbB.setTag(false);&#10;        if (rbC != null &amp;&amp; rbC != selectedButton) rbC.setTag(false);&#10;        if (rbD != null &amp;&amp; rbD != selectedButton) rbD.setTag(false);&#10;    }&#10;&#10;    private void setupRadioGroupChangeListener(RadioGroup radioGroup) {&#10;        radioGroup.setOnCheckedChangeListener((group, checkedId) -&gt; {&#10;            android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;RadioGroup checked changed to: &quot; + checkedId);&#10;        });&#10;    }&#10;&#10;    public void removeQuestion(QuestionViewData questionData) {&#10;        if (questionViews.size() &lt;= 2) {&#10;            // Không cho phép xóa nếu chỉ còn 2 câu hỏi&#10;            return;&#10;        }&#10;&#10;        questionsContainer.removeView(questionData.questionView);&#10;        questionViews.remove(questionData);&#10;&#10;        updateQuestionNumbers();&#10;        updateDeleteButtonsVisibility();&#10;&#10;        if (listener != null) {&#10;            listener.onQuestionCountChanged(questionViews.size());&#10;        }&#10;    }&#10;&#10;    public void removeLastQuestion() {&#10;        if (questionViews.size() &lt;= 2) {&#10;            return;&#10;        }&#10;&#10;        QuestionViewData lastQuestion = questionViews.get(questionViews.size() - 1);&#10;        removeQuestion(lastQuestion);&#10;    }&#10;&#10;    private void updateQuestionNumbers() {&#10;        for (int i = 0; i &lt; questionViews.size(); i++) {&#10;            questionViews.get(i).tvQuestionNumber.setText(&quot;Câu hỏi &quot; + (i + 1) + &quot;:&quot;);&#10;        }&#10;    }&#10;&#10;    private void updateDeleteButtonsVisibility() {&#10;        boolean showDeleteButtons = questionViews.size() &gt; 2;&#10;        for&#10;" />
              <option name="updatedContent" value="package com.vantinh.tienganh.utils;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.widget.EditText;&#10;import android.widget.ImageButton;&#10;import android.widget.LinearLayout;&#10;import android.widget.RadioGroup;&#10;import android.widget.RadioButton;&#10;import android.widget.TextView;&#10;import com.vantinh.tienganh.R;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class QuestionViewHelper {&#10;&#10;    public static class QuestionViewData {&#10;        public View questionView;&#10;        public EditText etQuestion;&#10;        public EditText[] etOptions;&#10;        public RadioGroup rgCorrectAnswer;&#10;        public TextView tvQuestionNumber;&#10;        public ImageButton btnDelete;&#10;&#10;        public QuestionViewData() {&#10;            etOptions = new EditText[4];&#10;        }&#10;    }&#10;&#10;    private Context context;&#10;    private LinearLayout questionsContainer;&#10;    private List&lt;QuestionViewData&gt; questionViews;&#10;    private OnQuestionCountChangeListener listener;&#10;&#10;    public interface OnQuestionCountChangeListener {&#10;        void onQuestionCountChanged(int count);&#10;    }&#10;&#10;    public QuestionViewHelper(Context context, LinearLayout questionsContainer) {&#10;        this.context = context;&#10;        this.questionsContainer = questionsContainer;&#10;        this.questionViews = new ArrayList&lt;&gt;();&#10;    }&#10;&#10;    public void setOnQuestionCountChangeListener(OnQuestionCountChangeListener listener) {&#10;        this.listener = listener;&#10;    }&#10;&#10;    public void addQuestion() {&#10;        LayoutInflater inflater = LayoutInflater.from(context);&#10;        View questionView = inflater.inflate(R.layout.item_dynamic_quiz_question, questionsContainer, false);&#10;&#10;        QuestionViewData questionData = new QuestionViewData();&#10;        questionData.questionView = questionView;&#10;        questionData.tvQuestionNumber = questionView.findViewById(R.id.tv_question_number);&#10;        questionData.etQuestion = questionView.findViewById(R.id.et_question);&#10;        questionData.etOptions[0] = questionView.findViewById(R.id.et_option_a);&#10;        questionData.etOptions[1] = questionView.findViewById(R.id.et_option_b);&#10;        questionData.etOptions[2] = questionView.findViewById(R.id.et_option_c);&#10;        questionData.etOptions[3] = questionView.findViewById(R.id.et_option_d);&#10;        questionData.rgCorrectAnswer = questionView.findViewById(R.id.rg_correct_answer);&#10;        questionData.btnDelete = questionView.findViewById(R.id.btn_delete_question);&#10;&#10;        // Set unique IDs for RadioButtons to avoid conflicts&#10;        int questionIndex = questionViews.size();&#10;        int baseId = 2000 + (questionIndex * 10);&#10;        RadioButton rbA = questionView.findViewById(R.id.rb_option_a);&#10;        RadioButton rbB = questionView.findViewById(R.id.rb_option_b);&#10;        RadioButton rbC = questionView.findViewById(R.id.rb_option_c);&#10;        RadioButton rbD = questionView.findViewById(R.id.rb_option_d);&#10;&#10;        // Kiểm tra null pointer&#10;        if (rbA == null || rbB == null || rbC == null || rbD == null) {&#10;            android.util.Log.e(&quot;QuestionViewHelper&quot;, &quot;RadioButton not found in layout!&quot;);&#10;            return;&#10;        }&#10;&#10;        rbA.setId(baseId + 1);&#10;        rbB.setId(baseId + 2);&#10;        rbC.setId(baseId + 3);&#10;        rbD.setId(baseId + 4);&#10;&#10;        // Setup toggle functionality for RadioButtons với log debug&#10;        android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Setting up RadioButton listeners for question &quot; + (questionIndex + 1));&#10;        setupRadioButtonToggle(questionData.rgCorrectAnswer, rbA, &quot;A&quot;);&#10;        setupRadioButtonToggle(questionData.rgCorrectAnswer, rbB, &quot;B&quot;);&#10;        setupRadioButtonToggle(questionData.rgCorrectAnswer, rbC, &quot;C&quot;);&#10;        setupRadioButtonToggle(questionData.rgCorrectAnswer, rbD, &quot;D&quot;);&#10;&#10;        // Set delete button click listener&#10;        if (questionData.btnDelete != null) {&#10;            questionData.btnDelete.setOnClickListener(v -&gt; removeQuestion(questionData));&#10;        }&#10;&#10;        questionViews.add(questionData);&#10;        questionsContainer.addView(questionView);&#10;&#10;        updateQuestionNumbers();&#10;        updateDeleteButtonsVisibility();&#10;&#10;        if (listener != null) {&#10;            listener.onQuestionCountChanged(questionViews.size());&#10;        }&#10;    }&#10;&#10;    private void setupRadioButtonToggle(RadioGroup radioGroup, RadioButton radioButton, String optionName) {&#10;        android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Setting up listener for option &quot; + optionName);&#10;&#10;        // Sử dụng OnCheckedChangeListener thay vì OnClickListener để tránh xung đột&#10;        radioButton.setOnCheckedChangeListener((buttonView, isChecked) -&gt; {&#10;            if (isChecked) {&#10;                android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Option &quot; + optionName + &quot; was checked&quot;);&#10;                // Lưu trạng thái này vào tag&#10;                radioButton.setTag(&quot;selected&quot;);&#10;            }&#10;        });&#10;&#10;        // Sử dụng OnClickListener để handle toggle logic&#10;        radioButton.setOnClickListener(v -&gt; {&#10;            android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Option &quot; + optionName + &quot; clicked&quot;);&#10;&#10;            // Kiểm tra trạng thái trước đó&#10;            String previousState = (String) radioButton.getTag();&#10;            boolean wasAlreadySelected = &quot;selected&quot;.equals(previousState);&#10;&#10;            android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Was already selected: &quot; + wasAlreadySelected);&#10;&#10;            if (wasAlreadySelected) {&#10;                // Nếu đã được chọn, hủy chọn tất cả&#10;                android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Clearing selection for &quot; + optionName);&#10;                radioGroup.clearCheck();&#10;                clearAllTags(radioGroup);&#10;            } else {&#10;                // Nếu chưa được chọn, clear tags của buttons khác và set tag cho button này&#10;                android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;Selecting &quot; + optionName);&#10;                clearAllTags(radioGroup);&#10;                radioButton.setTag(&quot;selected&quot;);&#10;                // RadioGroup sẽ tự động handle việc uncheck các button khác&#10;            }&#10;        });&#10;    }&#10;&#10;    private void clearAllTags(RadioGroup radioGroup) {&#10;        // Clear tags của tất cả RadioButton trong group&#10;        for (int i = 0; i &lt; radioGroup.getChildCount(); i++) {&#10;            View child = radioGroup.getChildAt(i);&#10;            if (child instanceof LinearLayout) {&#10;                LinearLayout linearLayout = (LinearLayout) child;&#10;                for (int j = 0; j &lt; linearLayout.getChildCount(); j++) {&#10;                    View subChild = linearLayout.getChildAt(j);&#10;                    if (subChild instanceof RadioButton) {&#10;                        subChild.setTag(null);&#10;                    }&#10;                }&#10;            } else if (child instanceof RadioButton) {&#10;                child.setTag(null);&#10;            }&#10;        }&#10;    }&#10;&#10;    private void clearOtherButtonTags(RadioGroup radioGroup, RadioButton selectedButton) {&#10;        RadioButton rbA = radioGroup.findViewById(R.id.rb_option_a);&#10;        RadioButton rbB = radioGroup.findViewById(R.id.rb_option_b);&#10;        RadioButton rbC = radioGroup.findViewById(R.id.rb_option_c);&#10;        RadioButton rbD = radioGroup.findViewById(R.id.rb_option_d);&#10;&#10;        if (rbA != null &amp;&amp; rbA != selectedButton) rbA.setTag(false);&#10;        if (rbB != null &amp;&amp; rbB != selectedButton) rbB.setTag(false);&#10;        if (rbC != null &amp;&amp; rbC != selectedButton) rbC.setTag(false);&#10;        if (rbD != null &amp;&amp; rbD != selectedButton) rbD.setTag(false);&#10;    }&#10;&#10;    private void setupRadioGroupChangeListener(RadioGroup radioGroup) {&#10;        radioGroup.setOnCheckedChangeListener((group, checkedId) -&gt; {&#10;            android.util.Log.d(&quot;QuestionViewHelper&quot;, &quot;RadioGroup checked changed to: &quot; + checkedId);&#10;        });&#10;    }&#10;&#10;    public void removeQuestion(QuestionViewData questionData) {&#10;        if (questionViews.size() &lt;= 2) {&#10;            // Không cho phép xóa nếu chỉ còn 2 câu hỏi&#10;            return;&#10;        }&#10;&#10;        questionsContainer.removeView(questionData.questionView);&#10;        questionViews.remove(questionData);&#10;&#10;        updateQuestionNumbers();&#10;        updateDeleteButtonsVisibility();&#10;&#10;        if (listener != null) {&#10;            listener.onQuestionCountChanged(questionViews.size());&#10;        }&#10;    }&#10;&#10;    public void removeLastQuestion() {&#10;        if (questionViews.size() &lt;= 2) {&#10;            return;&#10;        }&#10;&#10;        QuestionViewData lastQuestion = questionViews.get(questionViews.size() - 1);&#10;        removeQuestion(lastQuestion);&#10;    }&#10;&#10;    private void updateQuestionNumbers() {&#10;        for (int i = 0; i &lt; questionViews.size(); i++) {&#10;            questionViews.get(i).tvQuestionNumber.setText(&quot;Câu hỏi &quot; + (i + 1) + &quot;:&quot;);&#10;        }&#10;    }&#10;&#10;    private void updateDeleteButtonsVisibility() {&#10;        boolean showDeleteButtons = questionViews.size() &gt; 2;&#10;        for (QuestionViewData questionData : questionViews) {&#10;            questionData.btnDelete.setVisibility(showDeleteButtons ? View.VISIBLE : View.GONE);&#10;        }&#10;    }&#10;&#10;    public List&lt;QuestionViewData&gt; getQuestionViews() {&#10;        return questionViews;&#10;    }&#10;&#10;    public int getQuestionCount() {&#10;        return questionViews.size();&#10;    }&#10;&#10;    public void initializeWithDefaultQuestions() {&#10;        // Thêm 2 câu hỏi mặc định&#10;        addQuestion();&#10;        addQuestion();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/border_gray.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/border_gray.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;stroke&#10;        android:width=&quot;1dp&quot;&#10;        android:color=&quot;@android:color/darker_gray&quot; /&gt;&#10;    &lt;corners android:radius=&quot;8dp&quot; /&gt;&#10;    &lt;solid android:color=&quot;@android:color/white&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_create_quiz.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_create_quiz.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;#F5F5F5&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;com.google.android.material.appbar.AppBarLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;            &lt;androidx.appcompat.widget.Toolbar&#10;                android:id=&quot;@+id/toolbar&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;?attr/actionBarSize&quot;&#10;                android:background=&quot;?attr/colorPrimary&quot;&#10;                android:theme=&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;&#10;                app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot; /&gt;&#10;&#10;        &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;16dp&quot;&gt;&#10;&#10;            &lt;!-- Quiz Info Card --&gt;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Thông tin bài kiểm tra&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot;&#10;                        android:textColor=&quot;@android:color/black&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot;&#10;                        android:hint=&quot;Tên bài kiểm tra&quot;&gt;&#10;&#10;                        &lt;com.google.android.material.textfield.TextInputEditText&#10;                            android:id=&quot;@+id/et_quiz_title&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;                    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                    &lt;TextView&#10;                        android:id=&quot;@+id/tv_course_name&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Khóa học: &quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textColor=&quot;@android:color/black&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;!-- Questions Card --&gt;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:id=&quot;@+id/ll_questions_container&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Câu hỏi trắc nghiệm&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot;&#10;                        android:textColor=&quot;@android:color/black&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;                    &lt;!-- Question 1 --&gt;&#10;                    &lt;include layout=&quot;@layout/item_quiz_question&quot;&#10;                        android:id=&quot;@+id/question_1&quot; /&gt;&#10;&#10;                    &lt;!-- Question 2 --&gt;&#10;                    &lt;include layout=&quot;@layout/item_quiz_question&quot;&#10;                        android:id=&quot;@+id/question_2&quot; /&gt;&#10;&#10;                    &lt;!-- Question 3 --&gt;&#10;                    &lt;include layout=&quot;@layout/item_quiz_question&quot;&#10;                        android:id=&quot;@+id/question_3&quot; /&gt;&#10;&#10;                    &lt;!-- Question 4 --&gt;&#10;                    &lt;include layout=&quot;@layout/item_quiz_question&quot;&#10;                        android:id=&quot;@+id/question_4&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;!-- Create Quiz Button --&gt;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_create_quiz&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Tạo bài kiểm tra&quot;&#10;                android:backgroundTint=&quot;@android:color/holo_purple&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:layout_marginTop=&quot;16dp&quot;&#10;                android:padding=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/ScrollView&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;#F5F5F5&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;com.google.android.material.appbar.AppBarLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;            &lt;androidx.appcompat.widget.Toolbar&#10;                android:id=&quot;@+id/toolbar&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;?attr/actionBarSize&quot;&#10;                android:background=&quot;?attr/colorPrimary&quot;&#10;                android:theme=&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;&#10;                app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot; /&gt;&#10;&#10;        &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;16dp&quot;&gt;&#10;&#10;            &lt;!-- Quiz Info Card --&gt;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Thông tin bài kiểm tra&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot;&#10;                        android:textColor=&quot;@android:color/black&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot;&#10;                        android:hint=&quot;Tên bài kiểm tra&quot;&gt;&#10;&#10;                        &lt;com.google.android.material.textfield.TextInputEditText&#10;                            android:id=&quot;@+id/et_quiz_title&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;                    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                    &lt;TextView&#10;                        android:id=&quot;@+id/tv_course_name&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Khóa học: &quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textColor=&quot;@android:color/black&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;!-- Questions Card --&gt;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Câu hỏi trắc nghiệm&quot;&#10;                            android:textSize=&quot;18sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/black&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_question_count&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;(2 câu)&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;@android:color/darker_gray&quot;&#10;                            android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;!-- Dynamic Questions Container --&gt;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/ll_questions_container&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;vertical&quot; /&gt;&#10;&#10;                    &lt;!-- Add/Remove Question Buttons --&gt;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:layout_marginTop=&quot;16dp&quot;&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_add_question&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;+ Thêm câu hỏi&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_green_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_remove_question&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;- Xóa câu hỏi&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_red_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;!-- Create Quiz Button --&gt;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_create_quiz&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Tạo bài kiểm tra&quot;&#10;                android:backgroundTint=&quot;@android:color/holo_purple&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:layout_marginTop=&quot;16dp&quot;&#10;                android:padding=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/ScrollView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_select_course_for_quiz.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_select_course_for_quiz.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:background=&quot;#F5F5F5&quot;&gt;&#10;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;?attr/actionBarSize&quot;&#10;            android:background=&quot;?attr/colorPrimary&quot;&#10;            android:theme=&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;&#10;            app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Chọn khóa học để tạo bài kiểm tra&quot;&#10;            android:textSize=&quot;20sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textColor=&quot;@android:color/black&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;&#10;            android:gravity=&quot;center&quot; /&gt;&#10;&#10;        &lt;androidx.recyclerview.widget.RecyclerView&#10;            android:id=&quot;@+id/rv_courses&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_teacher_dashboard.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_teacher_dashboard.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:background=&quot;#F5F5F5&quot;&gt;&#10;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;?attr/actionBarSize&quot;&#10;            android:background=&quot;?attr/colorPrimary&quot;&#10;            android:theme=&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;&#10;            app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;ScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&gt;&#10;&#10;            &lt;!-- Welcome Text --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_welcome&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Xin chào, Giáo viên&quot;&#10;                android:textSize=&quot;24sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:textColor=&quot;@android:color/black&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&#10;                android:gravity=&quot;center&quot; /&gt;&#10;&#10;            &lt;!-- Statistics Cards --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;100dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginEnd=&quot;8dp&quot;&#10;                    app:cardCornerRadius=&quot;8dp&quot;&#10;                    app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:padding=&quot;16dp&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_courses_count&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;0&quot;&#10;                            android:textSize=&quot;32sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/holo_blue_dark&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Khóa học&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;@android:color/darker_gray&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;100dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginStart=&quot;8dp&quot;&#10;                    android:layout_marginEnd=&quot;8dp&quot;&#10;                    app:cardCornerRadius=&quot;8dp&quot;&#10;                    app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:padding=&quot;16dp&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_students_count&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;0&quot;&#10;                            android:textSize=&quot;32sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/holo_green_dark&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Học viên&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;@android:color/darker_gray&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;100dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginStart=&quot;8dp&quot;&#10;                    app:cardCornerRadius=&quot;8dp&quot;&#10;                    app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:padding=&quot;16dp&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_pending_requests_count&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;0&quot;&#10;                            android:textSize=&quot;32sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/holo_orange_dark&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Yêu cầu&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;@android:color/darker_gray&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Action Buttons --&gt;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Quản lý khóa học&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot;&#10;                        android:textColor=&quot;@android:color/black&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_create_course&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Tạo khóa học&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_blue_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_manage_courses&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Quản lý khóa học&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_blue_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_view_requests&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Xem yêu cầu&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_orange_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_view_students&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Xem học viên&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_green_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/ScrollView&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:background=&quot;#F5F5F5&quot;&gt;&#10;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;?attr/actionBarSize&quot;&#10;            android:background=&quot;?attr/colorPrimary&quot;&#10;            android:theme=&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;&#10;            app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;ScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&gt;&#10;&#10;            &lt;!-- Welcome Text --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_welcome&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Xin chào, Giáo viên&quot;&#10;                android:textSize=&quot;24sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:textColor=&quot;@android:color/black&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&#10;                android:gravity=&quot;center&quot; /&gt;&#10;&#10;            &lt;!-- Statistics Cards --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;100dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginEnd=&quot;8dp&quot;&#10;                    app:cardCornerRadius=&quot;8dp&quot;&#10;                    app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:padding=&quot;16dp&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_courses_count&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;0&quot;&#10;                            android:textSize=&quot;32sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/holo_blue_dark&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Khóa học&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;@android:color/darker_gray&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;100dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginStart=&quot;8dp&quot;&#10;                    android:layout_marginEnd=&quot;8dp&quot;&#10;                    app:cardCornerRadius=&quot;8dp&quot;&#10;                    app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:padding=&quot;16dp&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_students_count&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;0&quot;&#10;                            android:textSize=&quot;32sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/holo_green_dark&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Học viên&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;@android:color/darker_gray&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;100dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginStart=&quot;8dp&quot;&#10;                    app:cardCornerRadius=&quot;8dp&quot;&#10;                    app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:padding=&quot;16dp&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:id=&quot;@+id/tv_pending_requests_count&quot;&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;0&quot;&#10;                            android:textSize=&quot;32sp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:textColor=&quot;@android:color/holo_orange_dark&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Yêu cầu&quot;&#10;                            android:textSize=&quot;14sp&quot;&#10;                            android:textColor=&quot;@android:color/darker_gray&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Action Buttons --&gt;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Quản lý khóa học&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot;&#10;                        android:textColor=&quot;@android:color/black&quot;&#10;                        android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&#10;                        android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_create_course&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Tạo khóa học&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_blue_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_manage_courses&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Quản lý khóa học&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_blue_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_view_requests&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Xem yêu cầu&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_orange_dark&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;                        &lt;Button&#10;                            android:id=&quot;@+id/btn_create_quiz&quot;&#10;                            android:layout_width=&quot;0dp&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:layout_weight=&quot;1&quot;&#10;                            android:text=&quot;Tạo bài kiểm tra&quot;&#10;                            android:backgroundTint=&quot;@android:color/holo_purple&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/ScrollView&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_course_select.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_course_select.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_margin=&quot;8dp&quot;&#10;    app:cardCornerRadius=&quot;8dp&quot;&#10;    app:cardElevation=&quot;4dp&quot;&#10;    android:foreground=&quot;?android:attr/selectableItemBackground&quot;&#10;    android:clickable=&quot;true&quot;&#10;    android:focusable=&quot;true&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_course_name&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Tên khóa học&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textColor=&quot;@android:color/black&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_course_description&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Mô tả khóa học&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textColor=&quot;@android:color/darker_gray&quot;&#10;            android:maxLines=&quot;2&quot;&#10;            android:ellipsize=&quot;end&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Nhấn để chọn khóa học này&quot;&#10;            android:textSize=&quot;12sp&quot;&#10;            android:textStyle=&quot;italic&quot;&#10;            android:textColor=&quot;@android:color/holo_purple&quot;&#10;            android:layout_marginTop=&quot;8dp&quot;&#10;            android:gravity=&quot;end&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/androidx.cardview.widget.CardView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_dynamic_quiz_question.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_dynamic_quiz_question.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:layout_marginBottom=&quot;16dp&quot;&#10;    android:background=&quot;@drawable/border_gray&quot;&#10;    android:padding=&quot;16dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_question_number&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;Câu hỏi 1:&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textColor=&quot;@android:color/holo_purple&quot; /&gt;&#10;&#10;        &lt;ImageButton&#10;            android:id=&quot;@+id/btn_delete_question&quot;&#10;            android:layout_width=&quot;32dp&quot;&#10;            android:layout_height=&quot;32dp&quot;&#10;            android:src=&quot;@android:drawable/ic_menu_delete&quot;&#10;            android:background=&quot;?android:attr/selectableItemBackgroundBorderless&quot;&#10;            android:contentDescription=&quot;Xóa câu hỏi&quot;&#10;            android:tint=&quot;@android:color/holo_red_dark&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&#10;        android:hint=&quot;Nhập câu hỏi&quot;&gt;&#10;&#10;        &lt;com.google.android.material.textfield.TextInputEditText&#10;            android:id=&quot;@+id/et_question&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:minLines=&quot;2&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Các lựa chọn:&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;@android:color/black&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;!-- RadioGroup to properly group RadioButtons --&gt;&#10;    &lt;RadioGroup&#10;        android:id=&quot;@+id/rg_correct_answer&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;!-- Option A --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;            &lt;RadioButton&#10;                android:id=&quot;@+id/rb_option_a&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;A&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:hint=&quot;Lựa chọn A&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_option_a&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Option B --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;            &lt;RadioButton&#10;                android:id=&quot;@+id/rb_option_b&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;B&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:hint=&quot;Lựa chọn B&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_option_b&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Option C --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;            &lt;RadioButton&#10;                android:id=&quot;@+id/rb_option_c&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;C&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:hint=&quot;Lựa chọn C&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_option_c&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Option D --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;            &lt;RadioButton&#10;                android:id=&quot;@+id/rb_option_d&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;D&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:hint=&quot;Lựa chọn D&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_option_d&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/RadioGroup&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Chọn đáp án đúng bằng cách tick vào radio button tương ứng&quot;&#10;        android:textSize=&quot;12sp&quot;&#10;        android:textStyle=&quot;italic&quot;&#10;        android:textColor=&quot;@android:color/darker_gray&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_quiz_question.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_quiz_question.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:layout_marginBottom=&quot;24dp&quot;&#10;    android:background=&quot;@drawable/border_gray&quot;&#10;    android:padding=&quot;16dp&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/tv_question_number&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Câu hỏi 1:&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;@android:color/holo_purple&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&#10;        android:hint=&quot;Nhập câu hỏi&quot;&gt;&#10;&#10;        &lt;com.google.android.material.textfield.TextInputEditText&#10;            android:id=&quot;@+id/et_question&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:minLines=&quot;2&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Các lựa chọn:&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;@android:color/black&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;!-- Option A --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_option_a&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;A&quot; /&gt;&#10;&#10;        &lt;com.google.android.material.textfield.TextInputLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginStart=&quot;8dp&quot;&#10;            android:hint=&quot;Lựa chọn A&quot;&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputEditText&#10;                android:id=&quot;@+id/et_option_a&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;        &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Option B --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_option_b&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;B&quot; /&gt;&#10;&#10;        &lt;com.google.android.material.textfield.TextInputLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginStart=&quot;8dp&quot;&#10;            android:hint=&quot;Lựa chọn B&quot;&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputEditText&#10;                android:id=&quot;@+id/et_option_b&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;        &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Option C --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_option_c&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;C&quot; /&gt;&#10;&#10;        &lt;com.google.android.material.textfield.TextInputLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginStart=&quot;8dp&quot;&#10;            android:hint=&quot;Lựa chọn C&quot;&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputEditText&#10;                android:id=&quot;@+id/et_option_c&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;        &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Option D --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rb_option_d&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;D&quot; /&gt;&#10;&#10;        &lt;com.google.android.material.textfield.TextInputLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginStart=&quot;8dp&quot;&#10;            android:hint=&quot;Lựa chọn D&quot;&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputEditText&#10;                android:id=&quot;@+id/et_option_d&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;        &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Chọn đáp án đúng bằng cách tick vào radio button tương ứng&quot;&#10;        android:textSize=&quot;12sp&quot;&#10;        android:textStyle=&quot;italic&quot;&#10;        android:textColor=&quot;@android:color/darker_gray&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:layout_marginBottom=&quot;24dp&quot;&#10;    android:background=&quot;@drawable/border_gray&quot;&#10;    android:padding=&quot;16dp&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/tv_question_number&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Câu hỏi 1:&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;@android:color/holo_purple&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;com.google.android.material.textfield.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&#10;        android:hint=&quot;Nhập câu hỏi&quot;&gt;&#10;&#10;        &lt;com.google.android.material.textfield.TextInputEditText&#10;            android:id=&quot;@+id/et_question&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:minLines=&quot;2&quot; /&gt;&#10;&#10;    &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Các lựa chọn:&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;@android:color/black&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;!-- RadioGroup to properly group RadioButtons --&gt;&#10;    &lt;RadioGroup&#10;        android:id=&quot;@+id/rg_correct_answer&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;!-- Option A --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;            &lt;RadioButton&#10;                android:id=&quot;@+id/rb_option_a&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;A&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:hint=&quot;Lựa chọn A&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_option_a&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Option B --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;            &lt;RadioButton&#10;                android:id=&quot;@+id/rb_option_b&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;B&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:hint=&quot;Lựa chọn B&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_option_b&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Option C --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;            &lt;RadioButton&#10;                android:id=&quot;@+id/rb_option_c&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;C&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:hint=&quot;Lựa chọn C&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_option_c&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Option D --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;&gt;&#10;&#10;            &lt;RadioButton&#10;                android:id=&quot;@+id/rb_option_d&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;D&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;8dp&quot;&#10;                android:hint=&quot;Lựa chọn D&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/et_option_d&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot; /&gt;&#10;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/RadioGroup&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Chọn đáp án đúng bằng cách tick vào radio button tương ứng&quot;&#10;        android:textSize=&quot;12sp&quot;&#10;        android:textStyle=&quot;italic&quot;&#10;        android:textColor=&quot;@android:color/darker_gray&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>